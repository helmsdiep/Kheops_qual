//
// Interfacage avec la base etiquettes 
// export XML ou fichier plat
// catalogue Bègles (440, 441, 445, 450, 475)
// @author G. Breton
//

//
// technical utils functions
//

function addMapElement(mapEl, key, val) {
    getScriptByPath("/scripts/triggers/LG.Library.Utils")
          .getFunctionByName("addMapElement").invoke(mapEl, key, val);
}

function buildMapElementXML(mapEl) {
  return getScriptByPath("/scripts/triggers/LG.Library.Utils")
              .getFunctionByName("buildMapElementXML").invoke(mapEl);
}

function buildMapElementCSV(mapEl, processKey){
    return getScriptByPath("/scripts/triggers/LG.Library.Utils")
              .getFunctionByName("buildMapElementCSV").invoke(mapEl, processKey);
}

//
// functional utils functions
//

function getSimpleValue(oitem, nodeName){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getSimpleValue").invoke(oitem, nodeName);
}

function getDateValue(oitem, nodeName){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getDateValue").invoke(oitem, nodeName, "dd/MM/yyyy HH:mm:ss");
}

function getLkpValue(oItem,nodeName,lkpColumn) {
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getLkpValue").invoke(oItem,nodeName,lkpColumn);
}

function getLkpMultiValues(oItem,nodeName,lkpColumn) {
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getLkpMultiValues").invoke(oItem,nodeName,lkpColumn);
}

function getMultiValues(oItem,nodeName) {
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getMultiValues").invoke(oItem,nodeName);
}

function getItemLevel(oitem){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getItemLevel").invoke(oitem);
}

function getEn(oitem, nodeName){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
               .getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,nodeName);
}

function getPublishingItemAtLevel(oitem,sLevel){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getPublishingItemAtLevel").invoke(oitem, sLevel);
}

// filtre des décimaux finissant par '.0'  
function filterDecimalZero(str){
    if(str!=null && str!="") {
		 if(str.endsWith(".0")) {
		   return  replace(str, ".0","");
		 }
	}
    return str;
}

// findSitePath
// @desc return the attribute path of a production site from its code
// @param oitem the item
// @param siteCode the site code in 02FR0063-ProductionSite
// @return the attribute path eg "ProductionSiteGroup#3"
function findSitePath(oitem, siteCode){
  var productionSiteGroup = getEn(oitem,"ProductionSiteGroup");
  if(productionSiteGroup==null) { return null; }
  for(var i=0; i<productionSiteGroup.size(); i++) {
    var fProductionSite = getEn(oitem,"ProductionSiteGroup#"+i+"/02FR0063-ProductionSite")[0].getEntryNodeValue();
    if (fProductionSite.contains(siteCode)){
      return "ProductionSiteGroup#"+i;
    }
  }
  return null; 
}

// Concatenates all the elements of a string array, using the specified separator between each element. 
function arrayJoin(array, separator){
  var str = "";
  for (var i=0; i<array.size(); i++){
     str = str + ((i==0) ? "" : separator ) + array[i];
  }
  return str;
}

//

// 06DN0420-TranslatedInvoiceName
// Traduction anglaise Libellé facture
function getTranslatedInvoiceName(oitem){
  var s = "";
  	var oBUnitCountryGroup = getEn(oitem,"CountryGroup");
	if(oBUnitCountryGroup!=null) {
		for(var p=0;p<oBUnitCountryGroup.size();p++) {
			if(getSimpleValue(oitem,"CountryGroup#" + p + "/06DN0419-Country")=="EN") {
				s = getSimpleValue(oitem,"CountryGroup#" + p + "/06DN0420-TranslatedInvoiceName");
			}
		}
	}
  return s;
}

function getDataSite(oitem, productionSiteGroupID){
	var parent = oitem.getItemUsingEntryRelationshipAttrib("SC000-GlobPrim/99CTL100-ParentItem");
	var parentBUnit = getPublishingItemAtLevel(oitem,"BUnit");
	var parentProd  = getPublishingItemAtLevel(oitem,"Prod" );
	//var parentProd  = oitem.getItemUsingEntryRelationshipAttrib("SC000-GlobPrim/99CTL100-ParentItem");

	var DATA = [];

	// production site attributes
	// var siteCode= getLkpValue(parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C01-Code");
	var siteCode= getLkpValue(parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C07-SAP PlantCode");
	var productionLine= getLkpValue( parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C05-Process");
	// Order is not reliable: find the right path in Prod from SiteCode 
	var prodSitePath = findSitePath(parentProd, siteCode);
	var siteName= getLkpValue(parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C02-Libellé");

	var strTranslatedName = checkString(getTranslatedInvoiceName(oitem),"");
	
	var strMaterialNumber = getSimpleValue(oitem, "01AC0664-MaterialNumber");
	if(strMaterialNumber!=null && strMaterialNumber!=""){
		var iMaterialNumber = strMaterialNumber.length();
		for(var k=0;k<iMaterialNumber;k++) {
			var testzero=strMaterialNumber.startsWith("0");
			if(testzero==true) {
				strMaterialNumber=substring(strMaterialNumber,1,strMaterialNumber.length());
			}
		}
	}
	//
	addMapElement(DATA, "LABELNAME1", getSimpleValue( oitem,"01AC0014-invoiceName")) ;
	addMapElement(DATA, "LABELNAME2", strTranslatedName);
	addMapElement(DATA, "ITEMNUMBER", strMaterialNumber) ;
	addMapElement(DATA, "SAPCODE", strMaterialNumber) ;
	addMapElement(DATA, "GTIN", getSimpleValue(parentBUnit, "01AC0042-GTIN"));
	addMapElement(DATA, "CREATIONDATE", getDateValue( oitem ,"01AC0006-CreationDate")) ;
	addMapElement(DATA, "LASTUPDATE", getDateValue( oitem ,"01AC0004-LastUpdate")) ;
	addMapElement(DATA, "PRODUCTIONSITE", siteCode);
	addMapElement(DATA, "PRODUCTIONSITENAME", siteName);
	addMapElement(DATA, "UOM", getSimpleValue( oitem ,"04CP0095-Width")) ; //+ " / " + getSimpleValue( parent ,"04CP0156-PaperGrammage"));
	addMapElement(DATA, "GRAMMAGE", getSimpleValue( parent ,"04CP0156-PaperGrammage"));

	return DATA;
}

function canExport(oitem){
    
    // Catalogue 
    if (!oitem.getPrimaryKey().substring(1,4).contains("440") && 
    	!oitem.getPrimaryKey().substring(1,4).contains("441")
    	) {
      return false;
    }

    // Que la Bunit
    if (!oitem.getPrimaryKey().contains("B")) {
      return false;
    }

    // Les items ayant le statut 01AC0548-Status = ACTIF 
    if (!getSimpleValue(oitem,"01AC0548-Status").contains("[ACTIVE] - Actif")) {
      return false;
    }

	// Que les items éligibles à la publication dans SAP et possédant le material number
	var strMaterialNumber="";
	var oItemMaterialNumberEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,"01AC0664-MaterialNumber");
	if(oItemMaterialNumberEn!=null) {
		strMaterialNumber = checkString(oItemMaterialNumberEn[0].getEntryNodeValue(),"");
	}
	//
	var strPublishedIntoSAP="";
	var oItemPublishedIntoSAPEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,"01AC0775-PublishedIntoSAP");
	if(oItemPublishedIntoSAPEn!=null) {
		strPublishedIntoSAP = checkString(oItemPublishedIntoSAPEn[0].getEntryNodeValue(),"");
	}
	
	if(strPublishedIntoSAP=="true" && strMaterialNumber=="") {
      return false;
	}
	
    return true;
}

///////
///////

function getData(oitem){
	var dataGrp = [];
	var parentProd  = getPublishingItemAtLevel(oitem,"Prod" );
	var productionSiteGroup = getEn(parentProd,"ProductionSiteGroup");
	if(productionSiteGroup==null) { 
		return dataGrp; 
	}
	var e;
	catchError(e) {
		for(var i=0; i<productionSiteGroup.size(); i++) {
			// var fProductionSite = getEn(oitem,"ProductionSiteGroup#"+i+"/02FR0063-ProductionSite")[0].getEntryNodeValue();
		    dataGrp.add(getDataSite(oitem, i));
		}
	}
	if (e!=null){
	    err.writeln("Error on "+oitem.getPrimaryKey()+", "+e); 
	}
	return dataGrp;
}

function getEtiquetteXML(oitem){
    if(!canExport(oitem)) {
      return "<!-- no papier_etiquettes_export -->";
    }
    var dataGrp = getData(oitem);
    if(dataGrp==null ||dataGrp.size()<1 ) {
      return "<!-- no papier_etiquettes_export -->";
    }
    var xml = "";
    for(var i=0; i<dataGrp.size(); i++) {
      xml = concat(xml,"<group name=\"papier_etiquettes_export\">",buildMapElementXML(dataGrp[i]), "</group>");
    }
    // Pour tester le xml de sortie
    var outWriter = createOtherOut("");
    outWriter.writeln(xml);
    outWriter.save("/test/LG.Papier._"+today().formatDate("yyyyMMdd_HHmmss")+".xml");
    return xml;
}

function getCatalogCodeList(){
	var catalogcodelist = [];
	catalogcodelist[0]="C440";
	catalogcodelist[1]="C441";
	return catalogcodelist;
}

function getFullCSV(){
	var oitem;
    var csv = "";
    var headerDone = false;
    
	var acatalogcodelist = getCatalogCodeList();
	
	var oKey;
	var ctgName;
	var ctgs = getCatalogNamesList();
	forEachHmElement(ctgs,oKey,ctgName) {
		if(acatalogcodelist.containsValue(substring(ctgName,0,4))){
			forEachCtgItem(ctgName,oitem) {
				var e;
				catchError(e) {
					if(!canExport(oitem)) {
						continue;
					}
					logDebug("Export "+oitem.getPrimaryKey());
					var dataGrp = getData(oitem);
					for(var i=0; i<dataGrp.size(); i++) {
						if (!headerDone){
							csv = csv + buildMapElementCSV(dataGrp[i], true);
							headerDone = true;
						}
						csv = csv + buildMapElementCSV(dataGrp[i], false);
					}
				} 
				if (e!=null) { 
					// out.writeln(oitem.getPrimaryKey()+" "+e);
					// e=null;
				}
			}
		}
	}
    return csv;
}
