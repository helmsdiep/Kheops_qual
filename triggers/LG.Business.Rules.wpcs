//////////////////////////////////////////////////////////////////
// @file:
//   LG.Business.Rules
// @description: 
//   contains all the business rules functions for Lafarge Kheops
// @ownership: 
//   Evane
//
// Need to pass FN_GET_ENTRY_NODES_FROM_ATTR_PATH in the hmContext
//
/////////////////////////////////////////////////////////////////


// renvoie le MetaName, nom utilisé dans les URLs du site web.
// a été conçu et testé pour recevoir le longName en paramètre
// vérifié sur les items en date d'Avril 2021.
function getMetaName(s){
	// some utility methods
	var replaceChars=createJavaMethod("org.apache.commons.lang.StringUtils","replaceChars","java.lang.String","java.lang.String","java.lang.String");
	var subst=createJavaMethod("org.apache.regexp.RE","subst" ,"java.lang.String","java.lang.String","int");

	if (checkString(s,"")=="") {
	 	return null;
	}
    s=trim(s);
    s=toLowerCase(s);
    // remplace le mot "la" (=largeur) isolé par un tiret
    var matcher = new RE(" la ");
    s = matcher.substitute(s, "-");

    // remplace une lettre L (=longueur) isolée par un tiret
    var matcher = new RE(" l ");
    s = matcher.substitute(s, "-");

	// remplace la lettre L par un tiret si elle est entourée par 2 chiffres
    var matcher = new RE("([0-9])l([0-9])");
    s = runJavaMethod(matcher,subst,s,"$1-$2",2);

	// supprime la lettre L si elle est suivie d'un chiffre et non précédée par une lettre 
    var matcher = new RE("([^a-z])l([0-9])");
    s = runJavaMethod(matcher,subst,s,"$1$2",2);
    
    // remplace R3,43 par R343
    var matcher = new RE("r([0-9]+),([0-9]+)");
    s = runJavaMethod(matcher,subst,s,"r$1$2",2);

    // enlève tous les accents
    // remplace * par x
    // remplace + par p
    s=runJavaMethod(null, replaceChars, s,"²çéèêàâù*+","2ceeeaauxp");   
    
    // remplace 3,60m par 3m60
    var matcher = new RE("([^r])([0-9]+),([0-9]+)m");
    s = runJavaMethod(matcher,subst,s,"$1$2m$3",2);
    // remplace plusieurs tirets par un seul
    var matcher = new RE("[^A-Za-z0-9]+");
    s = matcher.substitute(s, "-");
    // supprime tous les tirets à la fin
    var matcher = new RE("[^A-Za-z0-9]$");
    s = matcher.substitute(s, "");

    return s;
}
//String getValue(hmGlobals,item,String)
//Return the value of the entry node 
//Parameters
//-hmGlobals : global variable to call the function getEntryNodeForAttributePath
//-item : item (generic)
//-String : name of the attribute
//Returns String
function getValue(hmGlobals, item, sNodeName){
    var nodes = hmGlobals["FN_GET_ENTRY_NODES_FROM_ATTR_PATH"].invoke(item,sNodeName);
    if (nodes == null || nodes.size() < 1 ) {
        return null;
    }
    return nodes[0].getEntryNodeValue();
}

//EntryNode getEn(hmGlobals,item,String)
//Return the entry node 
//Parameters
//-hmGlobals : global variable to call the function getEntryNodeForAttributePath
//-item : item (generic)
//-String : name of the attribute
//Returns EntryNode
function getEn(hmGlobals, item, sNodeName){
    return hmGlobals["FN_GET_ENTRY_NODES_FROM_ATTR_PATH"].invoke(item,sNodeName);
}

function getFirstEn(hmGlobals, item, sNodeName){
    var nodes = hmGlobals["FN_GET_ENTRY_NODES_FROM_ATTR_PATH"].invoke(item,sNodeName);
    if (nodes == null || nodes.size() < 1 ) {
        return null;
    }
    return nodes[0];
}

function getNewGLINCount(sCNUF){
    var sCle = "CNUF"+ sCNUF;   
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getLGNextSeqValue").invoke(sCle);
}

function pow(a,n) {
    if (n == 0){
        return (1);
    }
    else {
        return (a * pow(a,n-1));
    }
}

function modulo(a,b) {
    if (b != 0){
        return (a - (b * (a/b)));
    }
    else {
        return("");
    }       
}

function genereGLINCode(Country,sCNUF,iCompteur,lengthSequence) {
    var GTIN;
    if(lengthSequence=="6") {
        GTIN = Country + sCNUF + toString(toInteger(iCompteur).formatNumber("000000",null));
    }
    if(lengthSequence=="4") {
        GTIN = Country + sCNUF + toString(toInteger(iCompteur).formatNumber("0000",null));
    }
    var itotal=0;
    var j=0;
    var i=0;
    for (i = 0; i < 12; i++){
        j = toInteger(substring(GTIN,i,i+1));
        if(modulo(i+1,2)==0) {
            itotal = itotal + j*3;
        }
        else {
            itotal = itotal + j;
        }
    }
    return (GTIN + modulo (10 - modulo (itotal,10), 10));
}

function checkSAPRelevanceForAttribute(oitem,itemvalue,i,strAttrName,strAttrDisplayName,strItemNewValue){
	var message = "";
	if(strAttrName!=null && strAttrName!="") {
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(oitem);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(oitem,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		var iAttrSepIndex = strAttrName.indexOf("-");
		var strAttrCode = substring(strAttrName,0,iAttrSepIndex);
		//
		if(strMaterialType!=null && strMaterialType!="") {
			// Lkp Table values
			var oL909 = getCtgByName("L909-AttributeRelevanceByMaterialType");
			var strLkpCode = concat(strAttrCode,"_",strMaterialType);
			//
			var oLkpItem = oL909.getEntryByPrimaryKey(strLkpCode);
			if(oLkpItem!=null) {
				var strAttributeRelevance = oLkpItem.getEntryAttrib("SL909-AttributeRelevanceByMaterialType/C04-Relevance");
				strAttributeRelevance = checkString(strAttributeRelevance,"");
				if(strAttributeRelevance!="") {
					if(strItemNewValue!="" && ((strAttributeRelevance=="M" || strAttributeRelevance=="O") && itemvalue!=strItemNewValue)){
						message = concat(message,"La valeur ",strItemNewValue," pour l'occurence ",i+1," de l'attribut ",strAttrDisplayName," est obligatoire.");
					}
					if(strAttributeRelevance=="M" && itemvalue=="") {
						if(i>-1) {
							message = concat(message,"Une valeur doit être obligatoirement renseignée pour l'occurence ",i+1," de l'attribut ",strAttrDisplayName,".");
						}
						else {
							message = concat(message,"Une valeur doit être obligatoirement renseignée pour l'attribut ",strAttrDisplayName,".");
						}
					}
					if(strAttributeRelevance=="H" && itemvalue!="") {
						if(i>-1) {
							message = concat(message,"Aucune valeur ne doit être renseignée pour l'occurence ",i+1," de l'attribut ",strAttrDisplayName,".");
						}
						else {
							message = concat(message,"Aucune valeur ne doit être renseignée pour l'attribut ",strAttrDisplayName,".");
						}
					}
				}
			}
		}
	}
	return message;
}

function getL210Unit(sUnitKey){
	var lookupTable = getLkpByName("L210-Unités normées - normalized units");
	var list = [];
	list[0]=sUnitKey;
	return lookupTable.getKeysFromValues(list)[0];
}

//String fn01AC0001_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0001
//Si le fils est Oui, le père doit être Oui sur l'attribut 01AC0001-IsInPDM
function fn01AC0001_Ctl(hmGlobals, item, en, bSave) {
var hmGlobalConst = [];
    hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var message = "";
    var fIsInPDM = en.getEntryNodeValue();
    //On récupère l'item parent
    var parentItem = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobalConst,item);
    //On vérifie que la valeur de isInPDM est true et que l'item parent n'est pas null
    if(fIsInPDM==true && parentItem!=null) {
        //On récupère la valeur de isInPdm sur l'item parent pour vérifier qu'elle est bien égale à true, comme sur l'enfant
        var fParentIsInPdm = getValue(hmGlobals,parentItem,"01AC0001-IsInPDM");
        if(fParentIsInPdm!=true) {
                message = message + "L'attribut 'A Publier sur Pdm' doit aussi être à 'true' sur l'item parent";
        }
    }
    return message;
}

//String fn01AC0003_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0003
//En mise à jour, 01AC0003-LastUpdateUser initialisé au nom du User en cours
function fn01AC0003_Ctl(hmGlobals, item, en, bSave) {
    if (bSave=="true"){
		en.setEntryNodeValue(getCurrentUserName());
	}
}

//String fn01AC0004_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0004
//En mise à jour, 01AC0004-LastUpdate initialisé à la date en cours
function fn01AC0004_Ctl(hmGlobals, item, en, bSave) {
    // en.setEntryNodeValue(today());
	var currentdate = today();
	if (bSave=="true"){
		item.setEntryAttrib("SC000-GlobPrim/01AC0004-LastUpdate",currentdate);
	}
}

function fn01AC0006_Ctl(hmGlobals,item,en, bSave) {
    if(getValue(hmGlobals,item,"01AC0006-CreationDate")==null) {
        return("!!! Attention, la date de création est nulle, les règles d'initialisation n'ont peut être pas fonctionnées!!!");
    }
    return "";
}

//String fn01AC0011_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0011
//Doit être renseigné par la valeur de 01AC0042-GTIN du Produit pointé par 01AC0557-ReplacementItem
function fn01AC0011_Ctl(hmGlobals, item, en, bSave) {
    var rsReplacementItem = getFirstEn(hmGlobals,item,"01AC0557-ReplacementItem");
    if(rsReplacementItem.getEntryNodeValue()!=null) {
        var itemLinkedToReplacementItem = item.getItemUsingEntryRelationshipAttrib(rsReplacementItem.getEntryNodeExactPath());
        if(itemLinkedToReplacementItem!=null) {
            var sGTINItemLinkedToReplacementItem = getValue(hmGlobals,itemLinkedToReplacementItem,"01AC0042-GTIN");
            if (bSave=="true"){
				en.setEntryNodeValue(sGTINItemLinkedToReplacementItem);
			}
        }
    }
    return "";    
}

// 01AC0013 derived from longName
// removed all special characters to build an URL
function fn01AC0013_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var s01AC0012LongName=item.getEntryAttrib("SC000-GlobPrim/01AC0012-LongName");
	if (bSave=="true"){
		if(s01AC0012LongName!=null) {
			var metaName=getMetaName(s01AC0012LongName);
			item.setEntryAttrib("SC000-GlobPrim/01AC0013-MetaName", metaName);
		}
	}
}

function fn01AC0014_Ctl(hmGlobals, item, en, bSave) {
	hmGlobals["LOGGER"]=getLogger("Lafarge.BusinessRules");
	var log = hmGlobals["LOGGER"];
	// log.loggerDebug("Ronan - Translated EN");
	
	var s=en.getEntryNodeValue();
    var message="";
    if (s!=null && !isStringSingleByte(s)){
        message="Le libellé facture ne doit pas contenir de caractères spéciaux.";
    }
	//
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	
	// log.loggerDebug("Ronan - s="+s);
	
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	if(strItemType=="PItem" && strCatalogCode=="115") {
		var bDEInvoiceNameExists = false;
		var CountryGroup = getEn(hmGlobals,item,"CountryGroup");
		if(CountryGroup!=null) {
			for(i=0;i<CountryGroup.size();i++) {
				var strCountry = getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country");
				var strTranslatedInvoiceName = getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName");
				if(strCountry=="DE" && strTranslatedInvoiceName!="") {
					bDEInvoiceNameExists=true;
				}
			}
		}
		if(bDEInvoiceNameExists==false) {
			message=message+"Un libellé facture pour l'Allemagne doit être renseigné obligatoirement.";
		}
	}
	if((strItemType=="BUnit" || strItemType=="PItem")) {
		if (bSave=="true"){
			var bFRInvoiceNameExists=false;
			var bENInvoiceNameExists=false;
			var CountryGroupLen = 0;
			var CountryGroupCursor = 0;
			var CountryGroup = getEn(hmGlobals,item,"CountryGroup");
			if(CountryGroup!=null) {
				CountryGroupLen=CountryGroup.size();
				for(i=0;i<CountryGroupLen;i++) {
					var strCountry = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country"),"");
					
					// log.loggerDebug("Ronan - strCountry="+strCountry);
					
					var strTranslatedInvoiceName = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName"),"");
					if(strCountry=="FR") {
						if(s!="" && strTranslatedInvoiceName!=s) {
							var enTranslatedInvoiceNameFR = getEn(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName"); 
							if(enTranslatedInvoiceNameFR!=null) {
								enTranslatedInvoiceNameFR[0].setEntryNodeValue(s);
							}
						}
						bFRInvoiceNameExists=true;
					}
					else if (strCountry=="EN") {
						// 	var StatutsTable = getLkpByName("L220-Statuts - Status");
						// 	var lkpStatus = getValue(hmGlobals,item,"01AC0548-Status"); 
						// 	var StatutsTableValues = lookupValues(StatutsTable,lkpStatus);
						// 	
						// 	if(s!="" && strTranslatedInvoiceName=="" && StatutsTableValues[0] == "CREATION") {
						// 		var enTranslatedInvoiceNameEN = getEn(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName"); 
						// 		if(enTranslatedInvoiceNameEN!=null) {
						// 			enTranslatedInvoiceNameEN[0].setEntryNodeValue(s);
						// 			log.loggerDebug("Ronan - strTranslatedInvoiceName EN="+strTranslatedInvoiceName);
						// 		}
						// 	}
						bENInvoiceNameExists=true;
					}
				}
			}
			if(CountryGroup!=null) {
				CountryGroupLen=CountryGroup.size();
				for(i=0;i<CountryGroupLen;i++) {
					var strCountryTest = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country"),"");
					var strTranslatedInvoiceNameTest = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName"),"");
					if(strCountryTest!="" || strTranslatedInvoiceNameTest!="") {
						CountryGroupCursor++;
					}
				}
			}
			if(bFRInvoiceNameExists==false){
				var strSecSpecName = "";
				var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
				if(strTemp!=null && strTemp!="") {
					strTemp = substring(strTemp,1);
					strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
				}
				//
				item.setEntryAttrib(strSecSpecName+"/CountryGroup#"+CountryGroupCursor+"/06DN0419-Country","FR");
				item.setEntryAttrib(strSecSpecName+"/CountryGroup#"+CountryGroupCursor+"/06DN0420-TranslatedInvoiceName",s);
				CountryGroupCursor++;
			}
			if(bENInvoiceNameExists==false){
				var strSecSpecName = "";
				var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
				if(strTemp!=null && strTemp!="") {
					strTemp = substring(strTemp,1);
					strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
				}
				//
				item.setEntryAttrib(strSecSpecName+"/CountryGroup#"+CountryGroupCursor+"/06DN0419-Country","EN");
				// item.setEntryAttrib(strSecSpecName+"/CountryGroup#"+CountryGroupCursor+"/06DN0420-TranslatedInvoiceName",s);
			}
		}
	}
	// else if(strItemType=="PItem" && strCatalogCode=="800") {
	// 	var strTranslatedInvoiceName = "";
	// 	var oTranslatedInvoiceNameEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"CountryGroup#0/06DN0420-TranslatedInvoiceName");
	// 	if(oTranslatedInvoiceNameEn!=null) {
	// 		strTranslatedInvoiceName = checkString(oTranslatedInvoiceNameEn.getEntryNodeValue(),"");
	// 	}
	// 	if(strTranslatedInvoiceName!=s) {
	// 		message = message + "Le libellé facture du groupe Country doit être égal à celui renseigné depuis l'onglet Appelation Commerciale.";
	// 	}
	// }
	// else if (strItemType=="BUnit" || strItemType=="PItem") {
	// 	if (bSave=="true"){
	// 		var CountryGroupLen = 0;
	// 		var CountryGroup = getEn(hmGlobals,item,"CountryGroup");
	// 		if(CountryGroup!=null) {
	// 			CountryGroupLen=CountryGroup.size();
	// 			for(i=0;i<CountryGroupLen;i++) {
	// 				var strCountry = getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country");
	// 				var strTranslatedInvoiceName = getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName");
	// 				if(strCountry=="FR") {
	// 					if(strTranslatedInvoiceName!="" && strTranslatedInvoiceName!=s) {
	// 						message = message + "Le libellé facture en français du groupe Country doit être égal à celui renseigné depuis l'onglet Appelation Commerciale.";
	// 					}
	// 				}
	// 			}
	// 		}
	// 	}
	// }
	//
    return message;
}

// MR0036
function fn01AC0036_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strvalue = checkString(en.getEntryNodeValue(),"");
		var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
		message = checkSAPRelevanceForAttribute(item,strvalue,-1,"01AC0036-brandName","Marque commerciale","");
	}
    return message;
}
//String fn01AC0037_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0037
//Chercher dans la table de référence "L103-Marque ciale Detenteur - Brand name" 
//avec la valeur de 01AC0036-brandName et récupérer la valeur de la colonne 3 de la table
//pour la mettre sur l'attribut 01AC0037-nameOfBrandOwner
function fn01AC0037_Ctl(hmGlobals,item,en, bSave) {
    var lkpTableBrandName = getLkpByName("L103-Marque ciale Detenteur - Brand name");
    var lkpBrandName = getValue(hmGlobals,item,"01AC0036-brandName");
    if(lkpBrandName!=null) {
        var lkpBrandNameValues=lookupValues(lkpTableBrandName,lkpBrandName);
        if(checkString(lkpBrandNameValues[2],"")!="") {
            if (bSave=="true"){
				item.setEntryAttrib(en.getEntryNodePath(),lkpBrandNameValues[2]);
			}
        }
    }
    return "";
}

//String fn01AC0038_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0038
//Chercher dans la table de référence "L103-Marque ciale Detenteur - Brand name" 
//avec la valeur de 01AC0036-brandName et récupérer la valeur de la colonne 6 de la table
//pour la mettre sur l'attribut 01AC0038-brandOwner 
function fn01AC0038_Ctl(hmGlobals,item,en, bSave) {
    var lkpTableBrandName = getLkpByName("L103-Marque ciale Detenteur - Brand name");
    var lkpBrandName = getValue(hmGlobals,item,"01AC0036-brandName");
    if(lkpBrandName!=null) {
        var lkpBrandNameValues=lookupValues(lkpTableBrandName,lkpBrandName);
        if(checkString(lkpBrandNameValues[5],"")!="") {
            if (bSave=="true"){
				item.setEntryAttrib(en.getEntryNodePath(),lkpBrandNameValues[5]);
			}
        }
    }
    return "";
}

//String fn01AC0039_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0039
//Chercher dans la table de référence "L103-Marque ciale Detenteur - Brand name" 
//avec la valeur de 01AC0036-brandName et récupérer la valeur de la colonne 6 de la table
//pour la mettre sur l'attribut 01AC0039-GLNProvider
function fn01AC0039_Ctl(hmGlobals,item,en, bSave) {
    var lkpTableBrandName = getLkpByName("L103-Marque ciale Detenteur - Brand name");
    var lkpBrandName = getValue(hmGlobals,item,"01AC0036-brandName");
    if(lkpBrandName!=null) {
        var lkpBrandNameValues=lookupValues(lkpTableBrandName,lkpBrandName);
        if(checkString(lkpBrandNameValues[5],"")!="") {
            if (bSave=="true"){
				item.setEntryAttrib(en.getEntryNodePath(),lkpBrandNameValues[5]);
			}
        }
    }
    return "";
}


//String fn01AC0040_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0040
//Chercher dans la table de référence "L103-Marque ciale Detenteur - Brand name"
//avec la valeur de 01AC0036-brandName et récupérer la valeur de la colonne 3 de la table
//pour la mettre sur l'attribut 01AC0040-nameOfProvider
function fn01AC0040_Ctl(hmGlobals,item,en, bSave) {
    var lkpTableBrandName = getLkpByName("L103-Marque ciale Detenteur - Brand name");
    var lkpBrandName = getValue(hmGlobals,item,"01AC0036-brandName");
    if(lkpBrandName!=null) {
        var lkpBrandNameValues=lookupValues(lkpTableBrandName,lkpBrandName);
        if(checkString(lkpBrandNameValues[2],"")!="") {
            if (bSave=="true"){
				item.setEntryAttrib(en.getEntryNodePath(),lkpBrandNameValues[2]);
			}
        }
    }
    return "";
}


// MR0041
// mandatory if 01AC0042-GTIN is filled, must be left empty if 01AC0042-GTIN is null
function fn01AC0041_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strvalue = checkString(en.getEntryNodeValue(),"");
		var strGTIN = "";
		var oGTINEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0042-GTIN");
		if(oGTINEn!=null) {
			strGTIN = checkString(oGTINEn[0].getEntryNodeValue(),"");
		}
		if(strGTIN!="" && strvalue=="") {
			message = "L'indication des codes à barres présents doit être renseigné lorsque le GTIN l'est.";
		}
		else if(strGTIN=="" && strvalue!="") {
			message = "L'indication des codes à barres présents ne doit pas être renseigné lorsque le GTIN ne l'est pas.";
		}
	}
    return message;
}


// CALCUL GTIN
function fn01AC0042_Ctl(hmGlobals,item,en, bSave) {
    var lengthSequence = "6";
    var hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var StatutsTable = getLkpByName("L220-Statuts - Status");
    var lkpStatus = getValue(hmGlobals,item,"01AC0548-Status"); 
    var StatutsTableValues=lookupValues(StatutsTable,lkpStatus);
	var strvalue = checkString(en.getEntryNodeValue(),"");
	
	var strCtgName="";
	var strCatalogCode="";
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	
    if (StatutsTableValues[0] == "CREATION" || StatutsTableValues[0] == "DUPLICATING" || (StatutsTableValues[0] == "MODIFYING" && strvalue=="" && strCatalogCode=="805" && strItemType=="Prod")){
       var dcodeGLIN = 0;
	   var iGTIN;
	   var oGTINEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0042-GTIN");
	   if(oGTINEn!=null) {
		iGTIN = checkString(oGTINEn.getEntryNodeValue(),"");
	   }
        if (iGTIN == null || iGTIN=="" || iGTIN=="null") {                    
            //dcodeGLIN = iGTIN;     
            if (dcodeGLIN == 0){
				var enOIDCNUF = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0036-brandName");
                var seOIDCNUF;
                if(enOIDCNUF==null) {
					var enBrandNameProd = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeAtLevel").invoke(hmGlobalConst,item,"Prod","01AC0036-brandName");
                    if(enBrandNameProd!=null){
						seOIDCNUF = enBrandNameProd[0].getEntryNodeValue();
					}
                }
                else {
                    seOIDCNUF = checkString(enOIDCNUF.getEntryNodeValue(),"");
                }
                var lkpMarqueCialeDetenteur = getLkpByName("L103-Marque ciale Detenteur - Brand name");     
                if (seOIDCNUF != null  ) {
                    var lkpMarqueCialeDetenteurValues=lookupValues(lkpMarqueCialeDetenteur,seOIDCNUF);
                    if(checkString(lkpMarqueCialeDetenteurValues[3],"")!="") {
                        var sCNUF = lkpMarqueCialeDetenteurValues[3];               
                        if (sCNUF!= null && sCNUF != ""){
                            var lCountGLIN=getNewGLINCount(sCNUF);  
                            if (lCountGLIN != -1){
                            	//@CHANGED hvdheuvel 10-10-12
                                var ScodeGLIN=genereGLINCode("3",sCNUF,lCountGLIN,lengthSequence);  
                                if (bSave=="true"){
									en.setEntryNodeValue(ScodeGLIN);
								}
                            }
                        }
                    }
                }
            }
        }
    }
    return "";
}

//String fn02FR0050_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0050
//si 02FR0050-GroupMadeItem=Oui alors au moins une occurrence de ProductionSiteGroup
//et pour chaque occurrence de ProductionSiteGroup, 02FR0063-ProductionSite ne doit pas être null
//si 02FR0050-GroupMadeItem=NON alors ProductionSiteGroup ne doit pas avoir d'occurrence
function fn02FR0050_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    var fGroupMadeItem = en.getEntryNodeValue();
    var iProductionSiteGroupLen = 0;
	var strProductionSite = "";
	var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
	if(ProductionSiteGroup!=null) {
		iProductionSiteGroupLen = ProductionSiteGroup.size();
		if(iProductionSiteGroupLen==1) {
			var oProductionSite = getEn(hmGlobals,item,"ProductionSiteGroup#0/02FR0063-ProductionSite");
			if(oProductionSite!=null) {
				strProductionSite = checkString(oProductionSite[0].getEntryNodeValue(),"");
			}
		}
	}
    //SI 02FR0050-GroupMadeItem = OUI
    if(fGroupMadeItem==true) {
        //SI ProductionSiteGroup n'a aucune occurrence
        if(ProductionSiteGroup==null || (iProductionSiteGroupLen==1 && strProductionSite=="")){
            //Message d'erreur
            message = message + "Le groupe fabrication doit comporter au moins une occurrence.";
        }
        //SI ProductionSiteGroup possède au moins une occurrence
        else {
            var i;
            //On parcourt les occurrence de ProductionSiteGroup
            for(i=0;i<ProductionSiteGroup.size();i++) {
                var occurrence = i+1;
                //On récupère la valeur de 02FR0063-ProductionSite de l'occurrence
                var fProductionSite = getEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0063-ProductionSite");
                if(fProductionSite!=null) {
                    //Si 02FR0063-ProductionSite est null
                    if(fProductionSite[0].getEntryNodeValue()==null) {
                        //Message d'erreur
                        message = message + "Groupe Site de fabrication - occurrence "+occurrence+" : Le site de fabrication doit être renseigné.";
                    }
                }
            }
        }
    }
    return message;
}

//String fn02FR0053_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0053
//Si 02FR0053-CSTBATCertified = OUI alors 02FR0054-CSTBATReferences de la même occurrence ne doit pas être null
//Si 02FR0053-CSTBATCertified = NON alors 02FR0054-CSTBATReferences de la même occurrence doit être null
function fn02FR0053_Ctl(hmGlobals,item,en, bSave) {
    var hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var message="";
    var i;
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    //Si ProductionSiteGroup possède au moins une occurrence
    if(ProductionSiteGroup!=null) {
        //On parcourt les occurrences i de ProductionSiteGroup
        for(i=0;i<ProductionSiteGroup.size();i++) {
            var occurence = i+1;
            var fCSTBATCertified = getValue(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0053-CSTBATCertified");
            var lkpCSTBATReferences = getValue(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0054-CSTBATReferences");
            //Si 02FR0053-CSTBATCertified de i = OUI et 02FR0054-CSTBATReferences de i est null
            if(fCSTBATCertified==true && lkpCSTBATReferences==null) {
                //Message d'erreur
                message = message + "Groupe Site de fabrication - occurence "+ occurence + ": La référence des certificats CSTBAT doit être renseignée.";
            }
            //Si 02FR0053-CSTBATCertified de i = NON ou NULL et 02FR0054-CSTBATReferences de i n'est pas null
            else if((fCSTBATCertified==false || fCSTBATCertified==null) && lkpCSTBATReferences!=null ) {
                //Message d'erreur
                message = message + "Groupe Site de fabrication - occurence "+ occurence + ": La référence des certificats CSTBAT ne doit pas être renseignée.";
            }
        }
    }
    return message;
}
    
//String fn02FR0062_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0062
//Chercher dans la table de référence "L121-Nom fabricant - Manufacturer name"
//avec la valeur de 02FR0061-ManufacturerName 
//et mettre la valeur de la colonne 2 de la table sur l'attribut 02FR0062-ManufacturerGLN
function fn02FR0062_Ctl(hmGlobals,item,en, bSave) {
    var i;
    var lkpTableManufacturerName = getLkpByName("L121-Nom fabricant - Manufacturer name");
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    if(ProductionSiteGroup!=null) {
        for(i=0;i<ProductionSiteGroup.size();i++) {
            var lkpManufacturerName = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0061-ManufacturerName");
            if(lkpManufacturerName!=null) {
                var lkpManufacturerNameValues=lookupValues(lkpTableManufacturerName,lkpManufacturerName);
                if (bSave=="true"){
					item.setEntryAttrib(getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0062-ManufacturerGLN").getEntryNodeExactPath(),lkpManufacturerNameValues[1]);  
				}
            }
        }
    }
    return("");
}

// Le pays d'origine = France et Nom du fabricant = 3013341600102 si le site sélectionné est un site français et produit non acheté
function fn02FR0063_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    if (bSave=="true"){
		var bGroupMadeItem = getValue(hmGlobals,item,"02FR0050-GroupMadeItem");
		//
		var lkpTableProductionSite = getLkpByName("L217-Sites de fabrication - Production sites");
		var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
		if(ProductionSiteGroup!=null) {
			for(var i=0;i<ProductionSiteGroup.size();i++) {
				var lkpProductionSite = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0063-ProductionSite");
				if(lkpProductionSite!=null) {
					var lkpProductionSiteValues=lookupValues(lkpTableProductionSite,lkpProductionSite);
					if(lkpProductionSiteValues[2].contains("(")==false && bGroupMadeItem==true) {
						var strManufacturerCountry = getValue(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0064-ManufacturerCountry");
						if(checkString(strManufacturerCountry,"")=="") {
							item.setEntryAttrib(getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0064-ManufacturerCountry").getEntryNodeExactPath(),"[FR] - France"); 
						}
						var strManufacturerName = getValue(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0061-ManufacturerName");
						if(checkString(strManufacturerName,"")=="") {
							item.setEntryAttrib(getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0061-ManufacturerName").getEntryNodeExactPath(),"[SINIAT] - 3013341600102"); 
						}
						var strManufacturerGLN = getValue(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0062-ManufacturerGLN");
						if(checkString(strManufacturerGLN,"")=="") {
							item.setEntryAttrib(getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0062-ManufacturerGLN").getEntryNodeExactPath(),"3013341600102"); 
						}
					}
				}
            }
        }
    }
    return message;
}

//String fn04CP0080_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0080
//si 04CP0080-CommercialThickness renseigné alors 04CP0081-CommercialThicknessUnits ne doit pas être Null
//si 04CP0080-CommercialThickness Null alors 04CP0081-CommercialThicknessUnits doit être Null
function fn04CP0080_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nCommercialThickness = en.getEntryNodeValue();
    var lkpCommercialThicknessUnits = getValue(hmGlobals,item,"04CP0081-CommercialThicknessUnits");
    //Si 04CP0080-CommercialThickness renseigné et 04CP0081-CommercialThicknessUnits null
    if(nCommercialThickness!=null && lkpCommercialThicknessUnits==null) {
        message = message + "L'unité  de l'épaisseur commerciale doit être renseignée";
    }
    //Si 04CP0080-CommercialThickness null et 04CP0081-CommercialThicknessUnits renseigné
    else if(nCommercialThickness==null && lkpCommercialThicknessUnits!=null) {
        message = message + "L'unité  de l'épaisseur commerciale ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0082_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0082
//si 04CP0082-RealThickness renseigné alors 04CP0084-RealThicknessUnits ne doit pas être Null
//si 04CP0082-RealThickness Null alors 04CP0084-RealThicknessUnits doit être Null
function fn04CP0082_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nRealThickness = en.getEntryNodeValue();
    var lkpRealThicknessUnits = getValue(hmGlobals,item,"04CP0084-RealThicknessUnits");
    //Si 04CP0082-RealThickness renseigné et 04CP0084-RealThicknessUnits null
    if(nRealThickness!=null && lkpRealThicknessUnits==null) {
        message = message + "L'unité de l'épaisseur réelle doit être renseignée";
    }
    //Si 04CP0082-RealThickness null et 04CP0084-RealThicknessUnits renseigné
    else if(nRealThickness==null && lkpRealThicknessUnits!=null) {
        message = message + "L'unité de l'épaisseur réelle ne doit pas être renseignée";
    }
    return message;
}


//String fn04CP0085_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0085
//si 04CP0085-CommercialBoardThickness renseigné alors 04CP0085-CommercialBoardThickness ne doit pas être Null
//si 04CP0085-CommercialBoardThickness Null alors 04CP0086-CommercialBoardThicknessUnits doit être Null
function fn04CP0085_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nCommercialBoardThickness = en.getEntryNodeValue();
    var lkpCommercialBoardThicknessUnits = getValue(hmGlobals,item,"04CP0086-CommercialBoardThicknessUnits");
    //Si 04CP0085-CommercialBoardThickness renseigné et 04CP0085-CommercialBoardThickness null
    if(nCommercialBoardThickness!=null && lkpCommercialBoardThicknessUnits==null) {
        message = message + "L'unité  de l'épaisseur commerciale de la plaque doit être renseignée";
    }
    //Si 04CP0085-CommercialBoardThickness null et 04CP0085-CommercialBoardThickness renseigné
    else if(nCommercialBoardThickness ==null && lkpCommercialBoardThicknessUnits!=null) {
        message = message + "L'unité  de l'épaisseur commerciale de la plaque ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0087_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0087
//si 04CP0087-RealBoardThickness renseigné alors 04CP0088-RealBoardThicknessUnits ne doit pas être Null
//si 04CP0087-RealBoardThickness Null alors 04CP0088-RealBoardThicknessUnits doit être Null
function fn04CP0087_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nRealBoardThickness = en.getEntryNodeValue();
    var lkpRealBoardThicknessUnits = getValue(hmGlobals,item,"04CP0088-RealBoardThicknessUnits");
    //Si 04CP0087-RealBoardThickness renseigné et 04CP0088-RealBoardThicknessUnits null
    if(nRealBoardThickness!=null && lkpRealBoardThicknessUnits==null) {
        message = message + "L'unité  de l'épaisseur réelle de la plaque doit être renseignée";
    }
    //Si 04CP0087-RealBoardThickness null et 04CP0088-RealBoardThicknessUnits renseigné
    else if(nRealBoardThickness ==null && lkpRealBoardThicknessUnits!=null) {
        message = message + "L'unité  de l'épaisseur réelle de la plaque ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0089_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0089
//si 04CP0089-InsulationThickness renseigné alors 04CP0090-InsulationThicknessUnits ne doit pas être Null
//si 04CP0089-InsulationThickness Null alors 04CP0090-InsulationThicknessUnits doit être Null
function fn04CP0089_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nInsulationThickness = en.getEntryNodeValue();
    var lkpInsulationThicknessUnits = getValue(hmGlobals,item,"04CP0090-InsulationThicknessUnits");
    if(nInsulationThickness!=null && lkpInsulationThicknessUnits==null) {
    //Si 04CP0089-InsulationThickness renseigné et 04CP0090-InsulationThicknessUnits null
        message = message + "L'unité de l'épaisseur isolant doit être renseignée";
    }
    //Si 04CP0089-InsulationThickness null et 04CP0090-InsulationThicknessUnits renseigné
    else if(nInsulationThickness ==null && lkpInsulationThicknessUnits!=null) {
        message = message + "L'unité de l'épaisseur isolant ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0091_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0091
//si 04CP0091-Thickness renseigné alors 04CP0092-ThicknessUnits ne doit pas être Null
//si 04CP0091-Thickness Null alors 04CP0092-ThicknessUnits doit être Null"
function fn04CP0091_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nThickness = en.getEntryNodeValue();
    var lkpThicknessUnits = getValue(hmGlobals,item,"04CP0092-ThicknessUnits");
    //Si 04CP0091-Thickness renseigné et 04CP0092-ThicknessUnits null
    if(nThickness!=null && lkpThicknessUnits==null) {
        message = message + "L'unité de l'épaisseur doit être renseignée";
    }
    //Si 04CP0091-Thickness null et 04CP0092-ThicknessUnits renseigné
    else if(nThickness ==null && lkpThicknessUnits!=null) {
        message = message + "L'unité de l'épaisseur ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0093_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0093
//si 04CP0093-InternalBoardCommercialThickness renseigné alors 04CP0094-InternalBoardCommercialThicknessUnits ne doit pas être Null
//04CP0093-InternalBoardCommercialThickness si Null alors 04CP0094-InternalBoardCommercialThicknessUnits doit être Null"
function fn04CP0093_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nInternalBoardCommercialThickness = en.getEntryNodeValue();
    var lkpInternalBoardCommercialThicknessUnits = getValue(hmGlobals,item,"04CP0094-InternalBoardCommercialThicknessUnits");
    //Si 04CP0093-InternalBoardCommercialThickness renseigné et 04CP0094-InternalBoardCommercialThicknessUnits null
    if(nInternalBoardCommercialThickness!=null && lkpInternalBoardCommercialThicknessUnits==null) {
        message = message + "L'Unité  de l'épaisseur commerciale de la plaque interne doit être renseignée";
    }
    //Si 04CP0093-InternalBoardCommercialThickness null et 04CP0094-InternalBoardCommercialThicknessUnits renseigné
    else if(nInternalBoardCommercialThickness ==null && lkpInternalBoardCommercialThicknessUnits!=null) {
        message = message + "L'Unité  de l'épaisseur commerciale de la plaque interne ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0095_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0095
//si 04CP0095-Width renseigné alors 04CP0097-WidthUnit ne doit pas être Null
//si 04CP0095-Width Null alors 04CP0097-WidthUnit doit être Null
function fn04CP0095_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nWidth = en.getEntryNodeValue();
    var lkpWidthUnit = getValue(hmGlobals,item,"04CP0097-WidthUnit");
    //Si 04CP0095-Width renseigné et 04CP0097-WidthUnit null
    if(nWidth!=null && lkpWidthUnit==null) {
        message = message + "L'unité de la largeur doit être renseignée";
    }
    //Si 04CP0095-Width null et 04CP0097-WidthUnit renseigné
    else if(nWidth ==null && lkpWidthUnit!=null) {
        message = message + "L'unité de la largeur ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0100_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0100
//si 04CP0100-Diameter renseigné alors 04CP0101-DiameterUnits ne doit pas être Null
//si 04CP0100-Diameter Null alors 04CP0101-DiameterUnits doit être Null"
function fn04CP0100_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nDiameter = en.getEntryNodeValue();
    var lkpDiameterUnits = getValue(hmGlobals,item,"04CP0101-DiameterUnits");
    //Si 04CP0100-Diameter renseigné et 04CP0101-DiameterUnits null
    if(nDiameter!=null && lkpDiameterUnits==null) {
        message = message + "L'unité du diamètre doit être renseignée";
    }
    //Si 04CP0100-Diameter null et 04CP0101-DiameterUnits renseigné
    else if(nDiameter ==null && lkpDiameterUnits!=null) {
        message = message + "L'unité du diamètre ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0103_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0103
//si 04CP0103-Length renseigné alors 04CP0104-LengthUnits ne doit pas être Null
//si 04CP0103-Length Null alors 04CP0104-LengthUnits doit être Null
function fn04CP0103_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nLength = en.getEntryNodeValue();
    var lkpLengthUnits = getValue(hmGlobals,item,"04CP0104-LengthUnits");
    //Si 04CP0103-Length renseigné et 04CP0101-DiameterUnits null
    if(nLength!=null && lkpLengthUnits==null) {
        message = message + "L'unité de la longueur doit être renseignée";
    }
    //Si 04CP0103-Length null et 04CP0101-DiameterUnits renseigné
    else if(nLength ==null && lkpLengthUnits!=null) {
        message = message + "L'unité de la longueur ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0105_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0105
//04CP0105-SurfaceArea = 04CP0103-Length  convertit en mètres * 04CP0095-Width convertit en mètres
//si 04CP0105-SurfaceArea renseigné alors 04CP0106-SurfaceAreaUnits ne doit pas être Null
//si 04CP0105-SurfaceArea Null alors 04CP0106-SurfaceAreaUnits doit être Null
function fn04CP0105_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var loc = getCompanyLocales();
    var hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var lkpTableNormalizedUnits = getLkpByName("L210-Unités normées - normalized units");
    
    var enLength = getEn(hmGlobals,item,"04CP0103-Length");
    var enLengthUnits = getEn(hmGlobals,item,"04CP0104-LengthUnits");
    //Si l'item est pertinent sur les attributs 04CP0103-Length et 04CP0104-LengthUnits
    if(enLength!=null && enLengthUnits!=null) {
    
        //CALCUL DE LA LONGUEUR EN METRES
        var nLength = enLength[0].getEntryNodeValue();
        var lkpLengthUnits = enLengthUnits[0].getEntryNodeValue();
        if(lkpLengthUnits!=null) {
            //Si 04CP0104-LengthUnits est en CMT ==> Conversion de 04CP0103-Length en METRES (*0.01)
            if(lookupValues(lkpTableNormalizedUnits,lkpLengthUnits)[0]=="CMT") {
                nLength = nLength * 0.01;
            }
            //Si 04CP0104-LengthUnits est en MMT ==> Conversion de 04CP0103-Length en METRES (*0.001)
            else if (lookupValues(lkpTableNormalizedUnits,lkpLengthUnits)[0]=="MMT") {
                nLength = nLength * 0.001;
            }   
        }
        
        //CALCUL DE LA LARGEUR EN METRES
        var enWidth = getEn(hmGlobals,item,"04CP0095-Width");
        var enWidthUnit = getEn(hmGlobals,item,"04CP0097-WidthUnit");
        var nWidth;
        var lkpWidthUnit;
        //Si l'item est pertinent sur les attributs 04CP0095-Width et 04CP0097-WidthUnit
        if(enWidth!=null && enWidthUnit!=null) {
            nWidth = enWidth[0].getEntryNodeValue();
            lkpWidthUnit = enWidthUnit[0].getEntryNodeValue();
            //Si on a trouvé 04CP0097-WidthUnit dans la table des unités 
            if(lkpWidthUnit!=null) {
                //Si 04CP0097-WidthUnit est en CMT ==> conversion en METRES (*0.01)
                if(lookupValues(lkpTableNormalizedUnits,lkpWidthUnit)[0]=="CMT") {
                    nWidth = nWidth * 0.01;
                }
                //Si 04CP0097-WidthUnit est en MMT ==> conversion en METRES (*0.001)
                else if (lookupValues(lkpTableNormalizedUnits,lkpWidthUnit)[0]=="MMT") {
                    nWidth = nWidth * 0.001;
                }
            }
        }
        //Si l'item n'est pas pertinent sur les attributs 04CP0095-Width et 04CP0097-WidthUnit
        //On va aller récupérer ces attributs sur l'item parent
        else {
            //On récupère l'item parent
            var parentItem = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobalConst,item);
            //On récupère 04CP0095-Width chez le parent
            var enParentWidth = getEn(hmGlobals,parentItem,"04CP0095-Width");
            //On récupère 04CP0097-WidthUnit chez le parent
            var enParentWidthUnit = getEn(hmGlobals,parentItem,"04CP0097-WidthUnit");
            //Si l'item parent est pertinent sur les attributs 04CP0095-Width et 04CP0097-WidthUnit
            if(enParentWidth!=null && enParentWidthUnit!=null) {
                nWidth = enParentWidth[0].getEntryNodeValue();
                lkpWidthUnit = enParentWidthUnit[0].getEntryNodeValue();
            }
            //Si on a trouvé 04CP0097-WidthUnit dans la table des unités 
            if(lkpWidthUnit!=null) {
                //Si 04CP0097-WidthUnit est en CMT ==> conversion en METRES (*0.01)
                if(lookupValues(lkpTableNormalizedUnits,lkpWidthUnit)[0]=="CMT") {
                    nWidth = nWidth * 0.01;
                }
                //Si 04CP0097-WidthUnit est en MMT ==> conversion en METRES (*0.001)
                else if (lookupValues(lkpTableNormalizedUnits,lkpWidthUnit)[0]=="MMT") {
                    nWidth = nWidth * 0.001;
                }
            }
        }
        //04CP0105-SurfaceArea = 04CP0103-Length  convertit en mètres * 04CP0095-Width convertit en mètres
        if (bSave=="true"){
			en.setEntryNodeValue(nWidth * nLength);
		}
    }
    var nSurfaceArea = en.getEntryNodeValue();
    var lkpSurfaceAreaUnits = getValue(hmGlobals,item,"04CP0106-SurfaceAreaUnits");
	var enSurfaceAreaUnits = getFirstEn(hmGlobals,item,"04CP0106-SurfaceAreaUnits");
    //Si 04CP0105-SurfaceArea renseigné et 04CP0106-SurfaceAreaUnits null
    if(nSurfaceArea!=null && lkpSurfaceAreaUnits==null) {
        if (bSave=="true"){
			// message = message + "L'unité de la surface doit être renseignée";
			if(enSurfaceAreaUnits!=null) {
				enSurfaceAreaUnits.setEntryNodeValue(getL210Unit("MTK"));
			}
		}
    }
    //Si 04CP0105-SurfaceArea null et 04CP0106-SurfaceAreaUnits renseigné
    else if(nSurfaceArea ==null && lkpSurfaceAreaUnits!=null) {
        
		var logtemp = getLogger("Lafarge.BusinessRules");
		logtemp.loggerDebug("04CP0105 - Unité Surface");
		
		if (bSave=="true"){
			
			logtemp.loggerDebug("04CP0105 - Unité Surface - Save");
			
			// message = message + "L'unité de la surface ne doit pas être renseignée";
			if(enSurfaceAreaUnits!=null) {
				logtemp.loggerDebug("04CP0105 - Unité Surface - Set Value");
				
				enSurfaceAreaUnits.setEntryNodeValue("");
			}
		}
    }
    return message;
}

//String fn04CP0107_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0107
function fn04CP0107_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nBItemHeight = en.getEntryNodeValue();
    var lkpBItemHeightUnits = getValue(hmGlobals,item,"04CP0108-BItemHeightUnits");
    if(nBItemHeight!=null && lkpBItemHeightUnits==null) {
        message = message + "L'unité hauteur article de base doit être renseignée";
    }
    else if(nBItemHeight ==null && lkpBItemHeightUnits!=null) {
        message = message + "L'unité hauteur article de base ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0110_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0110
function fn04CP0110_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nBaseWidth = en.getEntryNodeValue();
    var lkpBaseWidthUnits = getValue(hmGlobals,item,"04CP0111-BaseWidthUnits");
    if(nBaseWidth!=null && lkpBaseWidthUnits==null) {
        message = message + "L'Unité de la largeur du fond doit être renseignée";
    }
    else if(nBaseWidth ==null && lkpBaseWidthUnits!=null) {
        message = message + "L'Unité de la largeur du fond ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0112_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0112
function fn04CP0112_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nBaseLength = en.getEntryNodeValue();
    var lkpBaseLengthUnits = getValue(hmGlobals,item,"04CP0113-BaseLengthUnits");
    if(nBaseLength!=null && lkpBaseLengthUnits==null) {
        message = message + "L'Unité de la longueur du fond doit être renseignée";
    }
    else if(nBaseLength ==null && lkpBaseLengthUnits!=null) {
        message = message + "L'Unité de la longueur du fond ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0114_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0114
function fn04CP0114_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nHeight = en.getEntryNodeValue();
    var lkpHeightUnits = getValue(hmGlobals,item,"04CP0115-HeightUnits");
    if(nHeight!=null && lkpHeightUnits==null) {
        message = message + "L'unité de la hauteur doit être renseignée";
    }
    else if(nHeight ==null && lkpHeightUnits!=null) {
        message = message + "L'unité de la hauteur ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0116_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0116
function fn04CP0116_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nDepth = en.getEntryNodeValue();
    var lkpDepthUnits = getValue(hmGlobals,item,"04CP0117-DepthUnits");
    if(nDepth!=null && lkpDepthUnits==null) {
        message = message + "L'unité de la profondeur doit être renseignée";
    }
    else if(nDepth ==null && lkpDepthUnits!=null) {
        message = message + "L'unité de la profondeur ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0118_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0118
function fn04CP0118_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nPItemWidth = en.getEntryNodeValue();
    var lkpPItemWidthUnits = getValue(hmGlobals,item,"04CP0120-PItemWidthUnits");
    if(nPItemWidth!=null && lkpPItemWidthUnits==null) {
        message = message + "L'unité de la largeur de l'UL doit être renseignée";
    }
    else if(nPItemWidth ==null && lkpPItemWidthUnits!=null) {
        message = message + "L'unité de la largeur de l'UL ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0140_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0140
function fn04CP0140_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nMeanWingHeight = en.getEntryNodeValue();
    var lkpMeanWingHeightUnits = getValue(hmGlobals,item,"04CP0141-MeanWingHeightUnits");
    if(nMeanWingHeight!=null && lkpMeanWingHeightUnits==null) {
        message = message + "L'unité hauteur d'aile moyenne doit être renseignée";
    }
    else if(nMeanWingHeight ==null && lkpMeanWingHeightUnits!=null) {
        message = message + "L'unité hauteur d'aile moyenne ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0142_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0142
function fn04CP0142_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nWingHeight1 = en.getEntryNodeValue();
    var lkpWingHeightUnits1 = getValue(hmGlobals,item,"04CP0143-WingHeightUnits1");
    if(nWingHeight1!=null && lkpWingHeightUnits1==null) {
        message = message + "L'unité hauteur d'aile 1 doit être renseignée";
    }
    else if(nWingHeight1 ==null && lkpWingHeightUnits1!=null) {
        message = message + "L'unité hauteur d'aile 1 ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0144_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0144
function fn04CP0144_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nWingHeight2 = en.getEntryNodeValue();
    var lkpWingHeightUnits2 = getValue(hmGlobals,item,"04CP0145-WingHeightUnits2");
    if(nWingHeight2!=null && lkpWingHeightUnits2==null) {
        message = message + "L'unité hauteur d'aile 2 doit être renseignée";
    }
    else if(nWingHeight2 ==null && lkpWingHeightUnits2!=null) {
        message = message + "L'unité hauteur d'aile 2 ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0146_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0146
function fn04CP0146_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nSection = en.getEntryNodeValue();
    var lkpSectionUnits = getValue(hmGlobals,item,"04CP0147-SectionUnits");
    if(nSection!=null && lkpSectionUnits==null) {
        message = message + "L'Unité  de la section doit être renseignée";
    }
    else if(nSection ==null && lkpSectionUnits!=null) {
        message = message + "L'Unité  de la section ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0148_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0148
function fn04CP0148_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nMiniHeight = en.getEntryNodeValue();
    var lkpMiniHeightUnits = getValue(hmGlobals,item,"04CP0149-MiniHeightUnits");
    if(nMiniHeight!=null && lkpMiniHeightUnits==null) {
        message = message + "L'unité hauteur mini doit être renseignée";
    }
    else if(nMiniHeight ==null && lkpMiniHeightUnits!=null) {
        message = message + "L'unité hauteur mini ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0150_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0150
function fn04CP0150_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nMaxiHeight = en.getEntryNodeValue();
    var lkpMaxiHeightUnits = getValue(hmGlobals,item,"04CP0151-MaxiHeightUnits");
    if(nMaxiHeight!=null && lkpMaxiHeightUnits==null) {
        message = message + "L'unité hauteur maxi doit être renseignée";
    }
    else if(nMaxiHeight ==null && lkpMaxiHeightUnits!=null) {
        message = message + "L'unité hauteur maxi ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0152_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0152
function fn04CP0152_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nBodyDiameter = en.getEntryNodeValue();
    var lkpBodyDiameterUnits = getValue(hmGlobals,item,"04CP0153-BodyDiameterUnits");
    if(nBodyDiameter!=null && lkpBodyDiameterUnits==null) {
        message = message + "L'unité diamètre du corps doit être renseignée";
    }
    else if(nBodyDiameter ==null && lkpBodyDiameterUnits!=null) {
        message = message + "L'unité diamètre du corps ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0154_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0154
function fn04CP0154_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nHeadDiameter = en.getEntryNodeValue();
    var lkpHeadDiameterUnits = getValue(hmGlobals,item,"04CP0155-HeadDiameterUnits");
    if(nHeadDiameter!=null && lkpHeadDiameterUnits==null) {
        message = message + "L'unité diamètre de la têtes doit être renseignée";
    }
    else if(nHeadDiameter ==null && lkpHeadDiameterUnits!=null) {
        message = message + "L'unité diamètre de la tête ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0158_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0312
function fn04CP0158_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var lkpTableTypeOfBoard = getLkpByName("L201-Type de plaque - Type of board");
    var nAcousticAbsorptionCoef=getValue(hmGlobals,item,"05PC0312-AcousticAbsorptionCoef");
    var enTypeBoard = getEn(hmGlobals,item,"04CP0158-TypeBoard");
    var i;
    if(enTypeBoard!=null) {
        for(i=0;i<enTypeBoard.size();i++) {
            var lkpTypeBoard = enTypeBoard[i].getEntryNodeValue();
            if(lkpTypeBoard!=null) {
                var lkpTypeOfBoardValues=lookupValues(lkpTableTypeOfBoard,lkpTypeBoard);
                if(lkpTypeOfBoardValues[0]=="14" && nAcousticAbsorptionCoef==null) {
                    message = message + "Le Coef.d'absorption acoustique (alpha W global) est obligatoire";
                }
            }
        }
    }
    return message;
}

//String fn04CP0159_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0159
function fn04CP0159_Ctl(hmGlobals,item,en, bSave) {
    var message="";
    var lkpTableTypeHeartBoard = getLkpByName("L180-Type coeur plq - Type of heart of board");
    var lkpTypeHeartBoard = en.getEntryNodeValue();
    var enWaterAbsorptionSurfaceBoard = getEn(hmGlobals,item,"05PC0277-WaterAbsorptionSurfaceBoard");
    var enWaterAbsorptionBoardByImmersion = getEn(hmGlobals,item,"05PC0278-WaterAbsorptionBoardByImmersion");
    if(lkpTypeHeartBoard!=null) {
        var lkpTypeHeartBoardValues = lookupValues(lkpTableTypeHeartBoard,lkpTypeHeartBoard);   
        if(lkpTypeHeartBoardValues[0]=="02" || lkpTypeHeartBoardValues[0]=="07" || lkpTypeHeartBoardValues[0]=="10") {
            if(enWaterAbsorptionSurfaceBoard!=null && enWaterAbsorptionSurfaceBoard[0].getEntryNodeValue()==null) {
                message = message+ "L'Absorption d'eau en surface de la plaque en g/m2 est obligatoire";
            }
            if(enWaterAbsorptionBoardByImmersion!=null && enWaterAbsorptionBoardByImmersion[0].getEntryNodeValue()==null) {
                message = message + "Le % d'absorption d'eau de la plaque par immersion est obligatoire";
            }
        }
    }
    return message;
}
    
//String fn04CP0179_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0179
function fn04CP0179_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var fChamferRaising = en.getEntryNodeValue();
    var sChamferDescription = getValue(hmGlobals,item,"04CP0180-ChamferDescription");
    if(fChamferRaising==true && checkString(sChamferDescription,"")=="") {
            message = message + "La description du chanfrein est obligatoire";
    }
    else if((fChamferRaising==false || fChamferRaising==null)  && checkString(sChamferDescription,"")!="") {
            message = message + "La description du chanfrein ne doit pas être renseignée";
    }
    return message;
}

    
//String fn04CP0181_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0181
function fn04CP0181_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	if (strCatalogCode!="800" && strCatalogCode!="805") {
		var lkpColourCode = en.getEntryNodeValue();
		var lkpColourCodeAgency = getValue(hmGlobals,item,"04CP0182-colourCodeAgency");
		if(checkString(lkpColourCode,"")!="" && checkString(lkpColourCodeAgency,"")=="") {
				message = message + "L'agence de maintenance du code couleur est obligatoire";
		}
		else if(checkString(lkpColourCode,"")=="" && checkString(lkpColourCodeAgency,"")!="") {
				message = message + "L'agence de maintenance du code couleur ne doit pas être renseignée";
		}
	}
    return message;
}

//String fn04CP0191_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0191
function fn04CP0191_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var fPrePrinted = en.getEntryNodeValue();
    var lkpPrintLocation = getValue(hmGlobals,item,"04CP0192-PrintLocation");
    var iNumberPrintColours = getValue(hmGlobals,item,"04CP0194-NumberPrintColours");
    if(fPrePrinted==true) {
        if(checkString(lkpPrintLocation,"")=="") {
            message = message + "La Localisation de l'impression doit être renseignée";
        }
        if(iNumberPrintColours==null) {
            message = message + "Le Nombre de couleurs de l'impression doit être renseigné";
        }
        else if(iNumberPrintColours<1 || iNumberPrintColours>6) {
            message = message + "Le Nombre de couleurs de l'impression doit être compris entre 1 et 6";
        }
    }
    else if(fPrePrinted==false) {
        if(checkString(lkpPrintLocation,"")!="") {
            message = message + "La Localisation de l'impression ne doit pas être renseigné";
        }
        else if(iNumberPrintColours!=null) {
            message = message + "Le Nombre de couleurs de l'impression ne doit doit pas être renseigné";
        }
    }
    return message;
}

//String fn04CP0198_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0198
function fn04CP0198_Ctl(hmGlobals,item,en, bSave) {
    var message="";
    var lkpNumberOfLiners = en.getEntryNodeValue();
    var fFirstLinerKPE = getValue(hmGlobals,item,"04CP0203-FirstLinerKPE");
    if(lkpNumberOfLiners == "pli 1 (extérieur)" && fFirstLinerKPE==null) {
        message = message + "Le Traitement KPE du premier pli (ou pli extérieur) est obligatoire";
    }
    return message;
}
//String fn04CP0213_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0213
function fn04CP0213_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nNetWeight = en.getEntryNodeValue();
    var lkpNetWeightUnits = getValue(hmGlobals,item,"04CP0214-netWeightUnit");
    if(nNetWeight!=null && lkpNetWeightUnits==null) {
        message = message + "L'unité Poids commercial doit être renseignée";
    }
    else if(nNetWeight ==null && lkpNetWeightUnits!=null) {
        message = message + "L'unité Poids commercial ne doit pas être renseignée";
    }
    return message;
}


//String fn04CP0215_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0215
function fn04CP0215_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nGrossWeight = en.getEntryNodeValue();
    var lkpGrossWeightUnits = getValue(hmGlobals,item,"04CP0216-grossWeightUnit");
    if(nGrossWeight!=null && lkpGrossWeightUnits==null) {
        message = message + "L'unité Poids moyen en cas de variation doit être renseignée";
    }
    else if(nGrossWeight ==null && lkpGrossWeightUnits!=null) {
        message = message + "L'unité Poids moyen en cas de variation ne doit pas être renseignée";
    }
    return message;
}

//String fn04CP0217_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0217
function fn04CP0217_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nRoughVolume = en.getEntryNodeValue();
    var lkpRoughVolumeUnits = getValue(hmGlobals,item,"04CP0218-RoughVolumeUnit");
    if(nRoughVolume!=null && lkpRoughVolumeUnits==null) {
        message = message + "L'unité volume brut doit être renseignée";
    }
    else if(nRoughVolume ==null && lkpRoughVolumeUnits!=null) {
        message = message + "L'unité volume brut ne doit pas être renseignée";
    }
    return message;

}

// String fn05PC0264_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0264
// Les 4 premiers digits de la valeur doivent être comprise entre 1111 et 5434
function fn05PC0264_Ctl(hmGlobals,item,en, bSave) {
    var isole = en.getEntryNodeValue();
    if(isole!=null) {
        var I = substring(isole,0,1);
        var S = substring(isole,1,2);
        var O = substring(isole,2,3);
        var L = substring(isole,3,4);
		var E = "";
		//
		var strDigit5 = substring(isole,4,5);
		if(strDigit5 !="(") {
			E = substring(isole,4,5);
		}
		else {
			E = substring(isole,9,10);
		}
        if(I<1 || I>5 || S<1 || S>4 || O<1 || O>3 || L<1 || L>4 || E<1 || E>4){
            return("I,S,O,L,E doit être compris entre 11111 et 54344");
        }
    }
    return("");
}

// String 05PC0300-ThermalResistance
// Must have 2 digits after decimal separator
function fn05PC0300_Ctl(hmGlobals,item,en, bSave) {
	if (bSave=="true"){
		var strThermalResistance = en.getEntryNodeValue();
		if(strThermalResistance!=null && strThermalResistance!="") {
			strThermalResistance =replaceString(strThermalResistance ,",",".");
			var istrThermalResistanceLen = strThermalResistance.length();
			var iseppos = strThermalResistance.indexOf(".");
			if(iseppos==-1) {
				strThermalResistance=strThermalResistance+".00";
				en.setEntryNodeValue(strThermalResistance);	
			}
			else if((istrThermalResistanceLen-iseppos)==2) {
				strThermalResistance=strThermalResistance+"0";
				en.setEntryNodeValue(strThermalResistance);
			}
		}
	}
}

//String fn05PG0340_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0340
function fn05PG0340_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    var fTechnicalNote = en.getEntryNodeValue();    
    var en0341=getEn(hmGlobals,item,"05PG0341-TechnicalNoteRef");
    if (en0341!=null && en0341.size()>0) {
            en0341=en0341[0].getEntryNodeParent();
    }
    var lkpTechnicalNoteRef=getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("cleanupMultiOccurence").invoke(en0341);
    
    fTechnicalNote = (fTechnicalNote==null ? false : fTechnicalNote);

    if(fTechnicalNote && lkpTechnicalNoteRef==null) {
        message = "La référence des avis techniques doit être renseignée";
    }
    if(!fTechnicalNote && lkpTechnicalNoteRef!=null){
        message = "La référence des avis techniques ne doit pas être renseignée";
    }

    return message;
}

//String fn06DN0346_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0346
function fn06DN0346_Ctl(hmGlobals, item, en, bSave) {
    var hmGlobalConst = [];
    hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var message = "";
    var ChannelOfDistributionGroup = getEn(hmGlobals,item,"ChannelOfDistributionGroup");
    var i;
    for(i=0;i<ChannelOfDistributionGroup.size();i++) {
        var lkpChannelOfDistribution = getValue(hmGlobals,item,"ChannelOfDistributionGroup#"+ i +"/06DN0422-ChannelOfDistribution");
        var fIsInCatalog = getValue(hmGlobals,item,"ChannelOfDistributionGroup#"+ i +"/06DN0346-IsInCatalog");
        var parentItem = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobalConst,item);
		//
		var itemChildren = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getChildItems").invoke(hmGlobals,item);
		if(fIsInCatalog==false && itemChildren!=null) {
			var child;
			var j;
			forEachHmElement(itemChildren,j,child) {
				var itemChild = getCtgByName(itemChildren[j]["itemCatalog"]).getEntryByPrimaryKey(itemChildren[j]["itemPrimaryKey"]);
				if (getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getStatus").invoke(itemChild)=="ACTIVE") {
					var ChildChannelOfDistributionGroup = getEn(hmGlobals,itemChild,"ChannelOfDistributionGroup");
					if(ChildChannelOfDistributionGroup!=null) {
						var k;
						for(k=0;k<ChildChannelOfDistributionGroup.size();k++) {
							var lkpChildChannelOfDistribution = getValue(hmGlobals,itemChild,"ChannelOfDistributionGroup#"+ k +"/06DN0422-ChannelOfDistribution");
							var fChildIsInCatalog = getValue(hmGlobals,itemChild,"ChannelOfDistributionGroup#"+ k +"/06DN0346-IsInCatalog");
							if(lkpChannelOfDistribution == lkpChildChannelOfDistribution) {
								if(fChildIsInCatalog!=false) {
									message = message + "L'attribut 'Article au catalogue?' doit aussi être à 'false' sur l'ensemble des items enfants pour le canal de distribution "+lkpChannelOfDistribution+".";
								}
							}   
						}
					}
				}
			}
		}
		//
        if(fIsInCatalog==true && parentItem!=null) {
            var ParentChannelOfDistributionGroup = getEn(hmGlobals,parentItem,"ChannelOfDistributionGroup");
			if(ParentChannelOfDistributionGroup!=null){
				var j;
				for(j=0;j<ParentChannelOfDistributionGroup.size();j++) {
					var lkpParentChannelOfDistribution = getValue(hmGlobals,parentItem,"ChannelOfDistributionGroup#"+ j +"/06DN0422-ChannelOfDistribution");
					var fParentIsInCatalog = getValue(hmGlobals,parentItem,"ChannelOfDistributionGroup#"+ j +"/06DN0346-IsInCatalog");
					if(lkpChannelOfDistribution == lkpParentChannelOfDistribution) {
						if(fParentIsInCatalog!=true) {
							message = message + "L'attribut 'Article au catalogue?' doit aussi être à 'true' sur l'item parent pour le canal de distribution "+lkpChannelOfDistribution+".";
						}
					}   
				}
			}
        }
    }
    return message;
}

//String fn06DN0347_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0347
function fn06DN0347_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    var fTradeItemOrderable = en.getEntryNodeValue();
    var iOrderQuantityMultiple = getValue(hmGlobals,item,"06DN0351-orderQuantityMultiple");
    var iOrderQuantityMini = getValue(hmGlobals,item,"06DN0352-orderQuantityMini");
    var iOrderQuantityMaxi = getValue(hmGlobals,item,"06DN0357-orderQuantityMaxi");

    if(fTradeItemOrderable==true) {
        if(iOrderQuantityMultiple==null) {
            message = message + "Le Multiple de commande est obligatoire.";
        }
        if(iOrderQuantityMini==null) {
            message = message + "Le Minimum de commande est obligatoire.";
        }
    }
    else if(fTradeItemOrderable==null || fTradeItemOrderable==false) {
        if(iOrderQuantityMultiple!=null) {
            message = message + "Le Multiple de commande ne doit pas être renseigné.";
        }
        if(iOrderQuantityMini!=null) {
            message = message + "Le Minimum de commande ne doit pas être renseigné.";
        }
        if(iOrderQuantityMaxi!=null) {
            message = message + "Le Maximum de commande ne doit pas être renseigné.";
        }
    }
	//
	var bPublishedIntoSAP = getValue(hmGlobals,item,"01AC0775-PublishedIntoSAP");
	if(fTradeItemOrderable==true && bPublishedIntoSAP=="false") {
		message = message + "L'attribut 'Publié dans SAP?' doit être changé à vrai.";
	}
	//
    return message;

}

//String fn06DN0352_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0352
function fn06DN0352_Ctl(hmGlobals, item, en, bSave) {  
    var message = "";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
    if (bSave=="true"){
		var iOrderQuantityMini = en.getEntryNodeValue();
		var iOrderQuantityMaxi = getValue(hmGlobals,item,"06DN0357-orderQuantityMaxi");
		if(iOrderQuantityMini!=null && iOrderQuantityMaxi!=null) {
			if(iOrderQuantityMini>iOrderQuantityMaxi || iOrderQuantityMini==iOrderQuantityMaxi ) {
				message = message + "Le Minimum de commande doit être inférieur au maximum de commande";
			}
		}
		if(iOrderQuantityMini==null && (strCatalogCode=="010" || strCatalogCode=="020" ||strCatalogCode=="110") && strItemType=="PItem") {
			var iOrderQuantityMultiple = getValue(hmGlobals,item,"06DN0351-orderQuantityMultiple");
			if(iOrderQuantityMultiple!=null) {
				en.setEntryNodeValue(iOrderQuantityMultiple);
			}
		}
	}
    return message;
}

//String fn06DN0360_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0360
function fn06DN0360_Ctl(hmGlobals,item,en, bSave) {
    var hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var message = "";
    var i;
    var PlaceOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
    for(i=0;i<PlaceOfStorageGroup.size();i++) {
        var nGrossWeight =  getValue(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0360-GrossWeight");
        var lkpGrossWeightUnits = getValue(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0361-GrossWeightUnit");
        var occurence = i+1;
        if(nGrossWeight!=null && checkString(lkpGrossWeightUnits,"")=="") {
			message = message + concat("Groupe Lieu de stockage - occurrence ",i+1," : L'unité Poids brut doit être renseignée.");
        }
        else if(nGrossWeight ==null && checkString(lkpGrossWeightUnits,"")!="") {
			message = message + concat("Groupe Lieu de stockage - occurrence ",i+1," : L'unité Poids brut ne doit pas être renseignée.");
        }
    }
    return message;
}

//String fn06DN0402_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0402
function fn06DN0402_Ctl(hmGlobals, item, en, bSave) {  
    var message = "";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
    if (bSave=="true" && (strCatalogCode=="010" || strCatalogCode=="020" ||strCatalogCode=="110") && strItemType=="PItem"){
		var iNumberOfPackagedItems = en.getEntryNodeValue();
		if(iNumberOfPackagedItems==null) {
			var iOrderQuantityMultiple = getValue(hmGlobals,item,"06DN0351-orderQuantityMultiple");
			if(iOrderQuantityMultiple!=null) {
				en.setEntryNodeValue(iOrderQuantityMultiple);
			}
		}
	}
    return message;
}

//String fn06DN0405_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0402
function fn06DN0405_Ctl(hmGlobals, item, en, bSave) {  
    var message = "";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
    if (bSave=="true" && (strCatalogCode=="010" || strCatalogCode=="020" ||strCatalogCode=="110") && strItemType=="PItem"){
		var iquantityOfNextLowerLevel = en.getEntryNodeValue();
		if(iquantityOfNextLowerLevel==null) {
			var iOrderQuantityMultiple = getValue(hmGlobals,item,"06DN0351-orderQuantityMultiple");
			if(iOrderQuantityMultiple!=null) {
				en.setEntryNodeValue(iOrderQuantityMultiple);
			}
		}
	}
    return message;
}

//String fn06DN0406_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0406
function fn06DN0406_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    var nNetContent = en.getEntryNodeValue();
    var lkpNetContentUnit = getValue(hmGlobals,item,"06DN0410-NetContentUnit");
    if(nNetContent!=null && lkpNetContentUnit==null) {
        message = message + "L'unité contenu net est obligatoire";
    }
    else if(nNetContent==null && lkpNetContentUnit!=null) {
        message = message + "L'unité contenu net ne doit pas être renseigné";
    }
    return message;

}   
            
//String fn06DN0407_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0407
function fn06DN0407_Ctl(hmGlobals, item, en, bSave) {
 	var message = "";
	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
    if (bSave=="true" && (strCatalogCode=="010" || strCatalogCode=="020" ||strCatalogCode=="110") && strItemType=="PItem"){
		var iTotalQuantityOfNextLowerLevel = en.getEntryNodeValue();
		if(iTotalQuantityOfNextLowerLevel==null) {
			var iOrderQuantityMultiple = getValue(hmGlobals,item,"06DN0351-orderQuantityMultiple");
			if(iOrderQuantityMultiple!=null) {
				en.setEntryNodeValue(iOrderQuantityMultiple);
			}
		}
	}
	var iTotalQuantityOfNextLowerLevel2 = en.getEntryNodeValue();
    if(iTotalQuantityOfNextLowerLevel2!=null && (iTotalQuantityOfNextLowerLevel2<0 || iTotalQuantityOfNextLowerLevel2==0)) {
        message="Le Nombre total de fils doit être strictement supérieur à 0";
    }
    return message;
}

//String fn06DN0408_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0408
function fn06DN0408_Ctl(hmGlobals, item, en, bSave) {
    var iquantityOfChildren = en.getEntryNodeValue();
    if(iquantityOfChildren!=null && (iquantityOfChildren<0 || iquantityOfChildren==0)) {
        return("Le Nombre de fils différents doit être strictement supérieur à 0");
    }
	return "";
}

//String fn06DN0416_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0416
// function fn06DN0416_Ctl(hmGlobals, item, en, bSave) {
//     var message = "";
//     var hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
//     var fForExport = en.getEntryNodeValue();
//     var CountryGroup = getEn(hmGlobals,item,"CountryGroup");
//     if(fForExport==true) {
//         if(CountryGroup==null){
//             message = message + "Le groupe pays doit comporter au moins une occurrence.";
//         }
//         else {
//             var i;
//             for(i=0;i<CountryGroup.size();i++) {
//                 var occurrence = i+1;
//                 var lkpCountry = getEn(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country");
//                 if(lkpCountry!=null) {
//                     if(lkpCountry[0].getEntryNodeValue()==null) {
//                         message = message + "Groupe Langue - occurrence "+occurrence+" : Le code Langue doit être renseigné.";
//                     }
//                 }
//                 var sTranslatedInvoiceName = getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName");
//                 if(sTranslatedInvoiceName==null) {
//                     message = message + "Groupe Langue - occurrence "+occurrence+" : La traduction libellé facture doit être renseignée.";
//                 }
//             }
//         }   
//         var parentItem = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobalConst,item);
//         var enParentItemForExport = getEn(hmGlobals,parentItem,"06DN0416-ForExport");
//         if(enParentItemForExport!=null) {
//             var fParentItemForExport = enParentItemForExport[0].getEntryNodeValue();
//             if(fParentItemForExport==false || fParentItemForExport==null) {
//                 message = message + "Ne peut être vendu à l'exportation si son parent ne l'est pas.";
//             }
//         }
//     }
//     return message;
// }

// String fn06DN0419_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0419
// Mandatory if 06DN0420-TranslatedInvoiceName is filled
function fn06DN0419_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
	//
																														 
																			  
   
	var CountryGroup = getEn(hmGlobals,item,"CountryGroup");
	for(i=0;i<CountryGroup.size();i++) {
		var occurrence=i+1;
		var sCountry = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country"),"");
		var sTranslatedInvoiceName = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName"),"");
		if(sTranslatedInvoiceName!="" && sCountry=="") {
																					   
			message = message + "Groupe Langue - occurrence "+occurrence+" : Le code Langue doit être renseigné.";
	
		}
	}
    return message;
}

// String fn06DN0420_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0420
// Mandatory if 06DN0419-Country is filled
function fn06DN0420_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
	//
																														 
																			  
   
	var CountryGroup = getEn(hmGlobals,item,"CountryGroup");
	for(i=0;i<CountryGroup.size();i++) {
		var occurrence=i+1;
		var sCountry = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0419-Country"),"");
		var sTranslatedInvoiceName = checkString(getValue(hmGlobals,item,"CountryGroup#"+i+"/06DN0420-TranslatedInvoiceName"),"");
		if(sCountry!="" && sTranslatedInvoiceName=="") {
																					   
			message = message + "Groupe Langue - occurrence "+occurrence+" : La traduction libellé facture doit être renseignée.";
	
		}
	}
    return message;
}


//String fn06DN0425_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0425
function fn06DN0425_Ctl(hmGlobals, colAreaItem, en, bSave) {
//Today date with format : month/day/year
    var message="";
    var dColAreaEffectiveDate = getValue(hmGlobals,colAreaItem,"06DN0425-effectiveDate");
    var dToday = new Date("MM/dd/yy",today().formatDate("MM/dd/yy"));
    var StatutsTable = getLkpByName("L220-Statuts - Status");
    var lkpStatus = getValue(hmGlobals,colAreaItem,"01AC0548-Status"); 
    var StatutsTableValues = lookupValues(StatutsTable,lkpStatus);
    
    if(dColAreaEffectiveDate!=null) {
        if (StatutsTableValues[0] == "MODIFYING"){
            var oColArea = getColAreaByName(colAreaItem.getCatalog().getCtgName());
            if(oColArea!=null) {
                var ctgItem = oColArea.getColAreaSrcContainer().getEntryByPrimaryKey(colAreaItem.getPrimaryKey());
                var dCtgEffectiveDate = getValue(hmGlobals,ctgItem,"06DN0425-effectiveDate");
                if(dCtgEffectiveDate!=null) {
                    if(dCtgEffectiveDate!=dColAreaEffectiveDate) {
                        if(dCtgEffectiveDate.isDateBefore(dToday)) {
                            if (bSave=="true"){
								colAreaItem.setEntryAttrib(en.getEntryNodeExactPath(),dCtgEffectiveDate);
							}
                            message = message + "Vous ne pouvez pas modifier la date de début de validité, elle a été réinitialisée";
                        }
                        else {
                            if(dColAreaEffectiveDate.isDateBefore(dToday)) {
                                message = message + "La date de début de validité doit être > ou = à la date du jour";
                            }
                        }
                    }
                }
            }
        }
        else if (StatutsTableValues[0] == "CREATION" || StatutsTableValues[0] == "DUPLICATING" || StatutsTableValues[0] == "INACTIVE"){
            if(dColAreaEffectiveDate.isDateBefore(dToday)) {
                //06DN0425-effectiveDate is not equals or not after today : error message
                message = message + "La date de début de validité doit être > ou = à la date du jour";
            }
        }
    }
    return message;
}

//String fn06DN0427_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0427
function fn06DN0427_Ctl(hmGlobals, item, en, bSave) {
    var dValidToDate = en.getEntryNodeValue();
    var dEffectiveDate = getValue(hmGlobals,item,"06DN0425-effectiveDate");
    if (dEffectiveDate!=null && dValidToDate!=null) {   
    if ((dValidToDate.isDateBefore(dEffectiveDate)) || (dValidToDate==dEffectiveDate))  {
            var message = "La date de fin de validité doit être strictement supérieure à la date de début de validité";
            return(message);
        }
    }
    return "";
}
//String fn06DN0428_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0428
function fn06DN0428_Ctl(hmGlobals, item, en, bSave) {
    var message ="";
    var ChannelOfDistributionGroup = getEn(hmGlobals,item,"ChannelOfDistributionGroup");
    if(ChannelOfDistributionGroup!=null) {
        var i;
        for(i=0;i<ChannelOfDistributionGroup.size();i++) {
            var sPItemNumberLevel1 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0428-PItemNumberLevel1");
            var rsPItemLevel1 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0555-PItemLevel1");
            if(rsPItemLevel1.getEntryNodeValue()!=null) {
                var itemLevel1 = item.getItemUsingEntryRelationshipAttrib(rsPItemLevel1.getEntryNodeExactPath());
                if(itemLevel1!=null) {
                    var itemNumberLevel1 = getValue(hmGlobals,itemLevel1,"01AC0045-ItemNumber");
                    if (bSave=="true"){
						item.setEntryAttrib(sPItemNumberLevel1.getEntryNodeExactPath(),itemNumberLevel1);
					}
                }
            }
            else {
                if (bSave=="true"){
					item.setEntryAttrib(sPItemNumberLevel1.getEntryNodeExactPath(),""); 
				}
            }
        }
    }
}

//String fn06DN0429_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0429
function fn06DN0429_Ctl(hmGlobals, item, en, bSave) {
    var message ="";
    var ChannelOfDistributionGroup = getEn(hmGlobals,item,"ChannelOfDistributionGroup");
    if(ChannelOfDistributionGroup!=null) {
        var i;
        for(i=0;i<ChannelOfDistributionGroup.size();i++) {
            var sPItemNumberLevel2 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0429-PItemNumberLevel2");
            var rsPItemLevel2 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0556-PItemLevel2");
            if(rsPItemLevel2.getEntryNodeValue()!=null) {
                var itemLevel2 = item.getItemUsingEntryRelationshipAttrib(rsPItemLevel2.getEntryNodeExactPath());
                if(itemLevel2!=null) {
                    var itemNumberLevel2 = getValue(hmGlobals,itemLevel2,"01AC0045-ItemNumber");
                    if (bSave=="true"){
						item.setEntryAttrib(sPItemNumberLevel2.getEntryNodeExactPath(),itemNumberLevel2);
					}
                }
            }
            else {
                if (bSave=="true"){
					item.setEntryAttrib(sPItemNumberLevel2.getEntryNodeExactPath(),"");
				}
            }
        }
    }
}

//String fn06DN0430_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0430
function fn06DN0430_Ctl(hmGlobals, item, en, bSave) {
    if(checkString(en.getEntryNodeValue(),"")!="") {
        var dDateDebCde = en.getEntryNodeValue();
        var dDateDebValid = getValue(hmGlobals,item,"06DN0425-effectiveDate");
        var dDateFinValid = getValue(hmGlobals,item,"06DN0427-ValidToDate");
        var dDateFinCde = getValue(hmGlobals,item,"06DN0431-endAvailabilityDate");
        var message = "";
        //Date Debut Commande non null
        if (checkString(dDateDebCde,"")!= "") { 
            // Test entre Date Debut Commande et Date debut Validation  
            if(checkString(dDateDebValid,"")!="") {
                if (dDateDebCde.isDateBefore(dDateDebValid)) {
                    message = message + "La date de début de commande doit être supérieure ou égale à la date de début de validité";
                } 
            }
            // Date Fin Commande non nulle OU date fin validité non nulle
            if ((checkString(dDateFinCde,"") != "") || (checkString(dDateFinValid,"") != "")) {
                //Test date fin commande non nulle
                if(checkString(dDateFinCde,"") != ""){
                    // Test entre Date Debut Commande et Date Fin Commande  
                    if ((dDateDebCde.isDateAfter(dDateFinCde)) || (dDateDebCde == dDateFinCde)) {
                        message = message + "La date de début de commande doit être strictement inférieure à la date de fin de commande";
                    } 
                }
                else {
                    // Test entre Date Debut Commande et Date Fin validité
                    if ((dDateDebCde.isDateAfter(dDateFinValid)) || (dDateDebCde==dDateFinValid)) {             
                        message = message +"La date de début de commande doit être strictement inférieure à la date de fin de validité";
                    } 
                }
            }
            // Date Fin Commande non nulle ET date fin validité non nulle
            if ((checkString(dDateFinCde,"") != "") && (checkString(dDateFinValid,"") != "")) { 
                if(dDateFinCde.isDateBefore(dDateFinValid)) {
                    if ((dDateDebCde.isDateAfter(dDateFinCde)) || (dDateDebCde == dDateFinCde)) {
                        message = message + "La date de début de commande doit être strictement inférieure à la date de fin de commande";
                    } 
                }
                else {
                    if ((dDateDebCde.isDateAfter(dDateFinValid)) || (dDateDebCde==dDateFinValid)) {             
                        message = message +"La date de début de commande doit être strictement inférieure à la date de fin de validité";
                    } 
                }
            }
        }   
        return message;

    }
    else {
        return("");
    }
}

//String fn06DN0431_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0431
function fn06DN0431_Ctl(hmGlobals, item, en, bSave) {
    if(checkString(en.getEntryNodeValue(),"")!="") {
        var dDateFinCde = en.getEntryNodeValue();
        var dDateDebCde = getValue(hmGlobals,item,"06DN0430-consumerAvailability");
        var dDateDebValid = getValue(hmGlobals,item,"06DN0425-effectiveDate");
        var dDateFinValid = getValue(hmGlobals,item,"06DN0427-ValidToDate");
        var message = "";
        // Test Date fin commande non nulle
        if (checkString(dDateFinCde,"") != "") {    
            //Test date fin validité non nulle
            if(checkString(dDateFinValid,"")!="") {
                // Test entre fin commande et fin validité
                if ((dDateFinCde.isDateAfter(dDateFinValid)) || (dDateFinCde==dDateFinValid)) {
                    message = message + "La date de fin de commande doit être strictement inférieure à la date de fin de validité";
                } 
            }   
            //Date début validité non null OU Date début Commande non null
            if ((checkString(dDateDebValid,"")!="") || (checkString(dDateDebCde,"") != "")) {
                //Date début validité non null
                if(checkString(dDateDebValid,"")!="") {
                    // Test entre Date fin Commande et Date debut validité  
                    if ((dDateFinCde.isDateBefore(dDateDebValid)) || (dDateFinCde==dDateDebValid)) {
                        message = message + "La date de fin de commande doit être strictement supérieure à la date de début de validité";
                    } 
                }
                //Test entre Date fin commande et date fin commande
                if(checkString(dDateDebCde,"") != "") {
                    if ((dDateFinCde.isDateBefore(dDateDebCde)) || (dDateFinCde==dDateDebCde)) {
                        message = message + "La date de fin de commande doit être strictement supérieure à la date de début de commande";
                    }
                }
            }
            //Date début validité non null ET Date début commande non null        
            if ((checkString(dDateDebValid,"")!="") && (checkString(dDateDebCde,"") != "")) {
                //Date début validité est le minimum
                if (dDateDebValid.isDateBefore(dDateDebCde)) {
                    //Test entre Date fin commande et date début validité
                    if ((dDateFinCde.isDateBefore(dDateDebValid)) || (dDateFinCde==dDateDebValid)) {
                        message = message + "La date de fin de commande doit être strictement supérieure à la date de début de validité";
                    } 
                }
                //Date début commande est le minimum    
                else {
                    //Test entre date fin commande et fate début commande
                    if ((dDateFinCde.isDateBefore(dDateDebCde)) || (dDateFinCde==dDateDebCde)) {
                        message = message + "La date de fin de commande doit être strictement supérieure à la date de début de commande";
                    }
                }
            }
        }
        return message;
    }
    else {
        return("");
    }
}

// String fn06DN0433_Ctl(hmGlobals, item, en, bSave)
// Attribut obligatoire uniquement pour les PItem des catalogues 010, 015 et 020
function fn06DN0433_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var strStackingFactorValue = checkString(en.getEntryNodeValue(),"");
	//
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="PItem" && (strCatalogCode=="010" || strCatalogCode=="015" || strCatalogCode=="020") && strStackingFactorValue=="") {
		message = message + "Le facteur de gerbage doit être obligatoirement renseigné";
	}
	return message;

}

//String fn06DN0434_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0434
function fn06DN0434_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nStackingWeightMaxi = en.getEntryNodeValue();
    var lkpStackingWeightMaxiUnits = getValue(hmGlobals,item,"06DN0435-stackingWeightMaxiUnit");
    if(nStackingWeightMaxi!=null && lkpStackingWeightMaxiUnits==null) {
        message = message + "L'unité Poids de gerbage doit être renseignée";
    }
    else if(nStackingWeightMaxi ==null && lkpStackingWeightMaxiUnits!=null) {
        message = message + "L'unité Poids de gerbage ne doit pas être renseignée";
    }
        return message;

}

// String fn06DN0436_Ctl(hmGlobals, item, en, bSave)
// L'attribut doit posséder au moins une valeur pour C025 et PItem2
function fn06DN0436_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
	if(strItemType!=null && strItemType!="") {
		// if ((strItemType=="4" && strCatalogCode=="025") || (strItemType=="3" && (strCatalogCode=="010" || strCatalogCode=="020" || strCatalogCode=="110"))){
		if ((strItemType=="4" && strCatalogCode=="025")){
			var enHandlingInstructions0 = getFirstEn(hmGlobals,item,"06DN0436-handlingInstructions#0");
			var strHandlingInstructions0="";
			if(enHandlingInstructions0!=null) {
				strHandlingInstructions0=checkString(enHandlingInstructions0.getEntryNodeValue(),"");
			}
			if(enHandlingInstructions0==null || strHandlingInstructions0=="") {
				message = message + "Au moins une préconisation stock./manut. pour clts et utilisateurs doit être renseignée.";
			}
		}
	}
    return message;
}

//String fn06DN0437_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0437
function fn06DN0437_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nStorageTemperatureMaxi = en.getEntryNodeValue();
    var lkpStorageTemperatureMaxiUnits = getValue(hmGlobals,item,"06DN0438-storageTemperatureMaxiUnit");
    if(nStorageTemperatureMaxi!=null && lkpStorageTemperatureMaxiUnits==null) {
        message = message + "L'Unité température de stockage maxi doit être renseignée";
    }
    else if(nStorageTemperatureMaxi ==null && lkpStorageTemperatureMaxiUnits!=null) {
        message = message + "L'Unité température de stockage maxi ne doit pas être renseignée";
    }
    return message;
}

//String fn06DN0439_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0439
function fn06DN0439_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nStorageTemperatureMini = en.getEntryNodeValue();
    var lkpStorageTemperatureMiniUnits = getValue(hmGlobals,item,"06DN0440-storageTemperatureMiniUnit");
    if(nStorageTemperatureMini!=null && lkpStorageTemperatureMiniUnits==null) {
        message = message + "L'Unité température de stockage mini doit être renseignée";
    }
    else if(nStorageTemperatureMini ==null && lkpStorageTemperatureMiniUnits!=null) {
        message = message + "L'Unité température de stockage mini ne doit pas être renseignée";
    }
    return message;

}

//String fn07MO0468_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0468
function fn07MO0468_Ctl(hmGlobals, item, en, bSave) {
    var message ="";
    var associatedProductGroup = getEn(hmGlobals,item,"AssociatedProductsGroup"); 
    if(associatedProductGroup!=null) {
        var i;
        var occGroup;
        if(associatedProductGroup!=null){
            for(i=0;i<associatedProductGroup.size();i++) {
                occGroup = i+1;
                var enAssociatedProducts = getEn(hmGlobals,item,"AssociatedProductsGroup#"+i+"/07MO0468-AssociatedProducts"); 
                var enAssociatedProductsName = getEn(hmGlobals,item,"AssociatedProductsGroup#"+i+"/07MO0489-AssociatedProductsName");
                var j;
                for(j=0;j<enAssociatedProducts.size();j++) {    
                    if(checkString(item.getEntryRelationshipAttrib(enAssociatedProducts[j].getEntryNodeExactPath())[1],"")!="") {
                        var AssociatedItem = item.getItemUsingEntryRelationshipAttrib(enAssociatedProducts[j].getEntryNodeExactPath());
                        if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(AssociatedItem)!="Prod") {
                            message = message + "Occurrence "+occGroup+" : Le produit associé doit être un Produit.";
                        }
                        else {
                            if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getStatus").invoke(AssociatedItem)!="ACTIVE") {
                                message = message + "Occurrence "+occGroup+" : Le produit associé doit avoir un statut actif.";
                            }
                        }
                    }
                }
            }
        }
    }
    return message;
}  

//String fn07MO0470_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0470
function fn07MO0470_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    var lkpGypsumBlocksPerSqM = en.getEntryNodeValue();
    var nRealThickness = getValue(hmGlobals,item,"04CP0082-RealThickness");
    if(nRealThickness==100 && lkpGypsumBlocksPerSqM==null) {
        message = message + "Le Nbre d'éléments au m2 est obligatoire";
    }
    if(nRealThickness!=100 && lkpGypsumBlocksPerSqM!=null) {
        message = message + "Le Nbre d'éléments au m2 ne doit pas être renseigné";
    }
    return message;
}

//String fn07MO0486_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0486
function fn07MO0486_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var nShelfLlife = en.getEntryNodeValue();
    var lkpShelfLlifeUnits = getValue(hmGlobals,item,"07MO0487-ShelfLifeUnit");
    if(nShelfLlife!=null && lkpShelfLlifeUnits==null) {
        message = message + "L'Unité de la durée de conservation doit être renseignée";
    }
    else if(nShelfLlife ==null && lkpShelfLlifeUnits!=null) {
        message = message +"L'Unité de la durée de conservation ne doit pas être renseignée";
    }
    return message;
}

//String fn06DN0555_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0555
function fn06DN0555_Ctl(hmGlobals, item, en, bSave) {
    var hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var message ="";
	var aItemLevel1PK = [];
    var ChannelOfDistributionGroup = getEn(hmGlobals,item,"ChannelOfDistributionGroup");
    if(ChannelOfDistributionGroup!=null) {
        var i;
        for(i=0;i<ChannelOfDistributionGroup.size();i++) {
            var rsPItemLevel1 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0555-PItemLevel1");
            if(item.getEntryRelationshipAttrib(rsPItemLevel1.getEntryNodeExactPath())!=null) {
                var itemLevel1 = item.getItemUsingEntryRelationshipAttrib(rsPItemLevel1.getEntryNodeExactPath());
				var itemLevel1PK = itemLevel1.getPrimaryKey();
				var bItemLevel1Exists=false;
				for (var j=0;j<aItemLevel1PK.size();j++) {
					if (aItemLevel1PK[j] != itemLevel1PK) {
						bItemLevel1Exists = true;
					}
				}
				if(bItemLevel1Exists==false){
					aItemLevel1PK.add(itemLevel1PK);
				}
                var rsParentItem = getEn(hmGlobals,itemLevel1,"99CTL100-ParentItem");
                var parentItem = itemLevel1.getItemUsingEntryRelationshipAttrib(rsParentItem[0].getEntryNodeExactPath());
                if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(parentItem)=="PItem") {
                    parentItem=getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobalConst,parentItem);
                }
                if(parentItem.getPrimaryKey()!=item.getPrimaryKey()) {
                    message=message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.1 doit être rattachée à la Bunit en cours.");
                }
                else {
                    if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getStatus").invoke(itemLevel1)!="ACTIVE") {
                        message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.1 doit avoir un statut actif.");
                    }
                    var fTradeItemOrderableItemLevel1 = getValue(hmGlobals,itemLevel1,"06DN0347-TradeItemOrderable");
                    if(fTradeItemOrderableItemLevel1 != true) {
                        message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.1 doit être commandable.");
                    }
					if(bItemLevel1Exists==true){
						message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : Il ne peut pas y avoir plus d'une UL standard niv.1 rattachée à plusieurs Canaux de distribution.");
					}
                }
            }
        }
    }
    return(message);
}

//String fn06DN0556_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0556
function fn06DN0556_Ctl(hmGlobals, item, en, bSave) {
    var message ="";
    var hmGlobalConst = [];
	var aItemLevel2PK = [];
    hmGlobalConst = getScriptByPath("/scripts/triggers/LG.Library.Const").getFunctionByName("getConst").invoke();
    var ChannelOfDistributionGroup = getEn(hmGlobals,item,"ChannelOfDistributionGroup");
    if(ChannelOfDistributionGroup!=null) {
        var i;
        for(i=0;i<ChannelOfDistributionGroup.size();i++) {
            var rsPItemNumberLevel2 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0556-PItemLevel2");
            var rsPItemNumberLevel1 = getFirstEn(hmGlobals,item,"ChannelOfDistributionGroup#"+i+"/06DN0555-PItemLevel1");
            if(rsPItemNumberLevel1!=null && rsPItemNumberLevel1!=null)  {
                var itemLevel1 = item.getItemUsingEntryRelationshipAttrib(rsPItemNumberLevel1.getEntryNodeExactPath());
                var itemLevel2 = item.getItemUsingEntryRelationshipAttrib(rsPItemNumberLevel2.getEntryNodeExactPath());
				//
                if(itemLevel2!=null) {				
					var itemLevel2PK = itemLevel2.getPrimaryKey();
					var bItemLevel1Exists=false;
					for (var j=0;j<aItemLevel2PK.size();j++) {
						if (aItemLevel2PK[j] != itemLevel2PK) {
							bItemLevel1Exists = true;
						}
					}
					if(bItemLevel1Exists==false){
						aItemLevel2PK.add(itemLevel2PK);
					}
					//
                    var parentItem = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobalConst,itemLevel2);
                    if(parentItem!=null && itemLevel1!=null) {
                        if(parentItem.getEntryId()!=itemLevel1.getEntryId()) {
                            message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.2 doit être rattachée à la Réf.UL standard niv.1");
                        }
                        else {
                            if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getStatus").invoke(itemLevel2)!="ACTIVE") {
                                message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.2 doit avoir un statut actif.");
                            }
                            var fTradeItemOrderableItemLevel2 = getValue(hmGlobals,itemLevel2,"06DN0347-TradeItemOrderable");
                            if(fTradeItemOrderableItemLevel2 != true) {
                                message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.2 doit être commandable.");
                            }
							if(bItemLevel1Exists==true){
								message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : Il ne peut pas y avoir plus d'une UL standard niv.2 rattachée à plusieurs Canaux de distribution.");
							}
                        }
                    }
                    else {
                        message = message + concat("Groupe Canal de Distribution - occurrence ",i+1," : l'UL standard niv.2 ne doit pas être renseignée car l'UL standard niv.1 ne l'est pas.");
                    }
                }
            }
        }
    }
    return(message);
}
    
//String fn01AC0557_Ctl(hmGlobals, item, en, bSave)
//Return the error message of the business rule:MR0557
function fn01AC0557_Ctl(hmGlobals, item, en, bSave) {
    var message ="";
    var entryRelationship = item.getEntryRelationshipAttrib(en.getEntryNodeExactPath());
    if(entryRelationship!=null && entryRelationship.size()>0 && checkString(entryRelationship[1],"")!="") {
        var RemplacementItem = item.getItemUsingEntryRelationshipAttrib(en.getEntryNodeExactPath());
        // if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(RemplacementItem)!="Prod") {
        //    message = message + "Le produit de substitution doit être un Produit.";
        // }
        if(getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getStatus").invoke(RemplacementItem)!="ACTIVE") {
            message = message + "Le produit de substitution doit avoir un statut actif.";
        }
        // var ctgItemName;
        // if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
        //     ctgItemName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
        // }
        // else {
        //     ctgItemName = item.getCatalog().getCtgName();
        // }
        // if(ctgItemName!=RemplacementItem.getCatalog().getCtgName()) {
        //     message = message + "Le produit de substitution doit appartenir au même catalogue que le produit en cours";
        // }   
    }
    return(message);
}

function fn04CP0568_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var BeamCompatibleGroup = getEn(hmGlobals,item,"BeamCompatibleGroup");
    if(BeamCompatibleGroup!=null) {
        var i;
        //On parcourt les occurrence de BeamCompatibleGroup
        for(i=0;i<BeamCompatibleGroup.size();i++) {
            var occurrence = i+1;
            //On récupère la valeur de 04CP0569-BeamCompatibleSpacing et 04CP0570-Rp et 04CP0571-Up de l'occurrence
            var sBeamCompatibleFamily = getValue(hmGlobals,item,"BeamCompatibleGroup#"+i+"/04CP0568-BeamCompatibleFamily");
            var iBeamCompatibleSpacing = getValue(hmGlobals,item,"BeamCompatibleGroup#"+i+"/04CP0569-BeamCompatibleSpacing");
            var iRp = getValue(hmGlobals,item,"BeamCompatibleGroup#"+i+"/04CP0570-Rp");
            var iUp = getValue(hmGlobals,item,"BeamCompatibleGroup#"+i+"/04CP0571-Up");
            //Si  04CP0569-BeamCompatibleSpacing ou 04CP0570-Rp ou 04CP0571-Up null
            if(sBeamCompatibleFamily==null || iBeamCompatibleSpacing==null || iRp==null || iUp==null) {
                //Message d'erreur
                message = message + "Groupe Poutrelle compatible - occurrence "+occurrence+" : Tous les éléments doivent être renseignés.";
            }
        }
    }
    return(message);
}

// String fn06DN0646_Ctl(hmGlobals, item, en, bSave)
// Initialize this value based on the L911 configuration. This value can be modified manually.

function fn06DN0646_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    // var strForExport="";
	// var enForExport = getEn(hmGlobals,item,"06DN0416-ForExport");
	// if(enForExport!=null) {
	//	strForExport=checkString(enForExport[0].getEntryNodeValue(),"");
	// }
    var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
    var i;
    for(i=0;i<placeOfStorageGroup.size();i++) {
		var bManufacturerCountryOk = false;
		var enPlantEn = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
		var enManufacturerCountry = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0646-ManufacturerCountry"); 
        if(enManufacturerCountry!=null && enPlantEn!=null) {
            var strManufacturerCountry = checkString(enManufacturerCountry[0].getEntryNodeValue(),"");
			if(strManufacturerCountry!="") { bManufacturerCountryOk=true; }
			var strPlant = checkString(enPlantEn[0].getEntryNodeValue(),"");
			if(strPlant!="" && strManufacturerCountry=="") {

				var lkpRegionOfOrigin = getCtgByName("L911-RegionOfOriginByPlant");
				var oLkpRegionOfOriginItem = lkpRegionOfOrigin.getEntryByPrimaryKey(strPlant);
				if(oLkpRegionOfOriginItem!=null) {
					var strManufacturerCountryLkp = oLkpRegionOfOriginItem.getEntryAttrib("SL911-RegionOfOriginByPlant/C03-ManufacturerCountry");
					if(checkString(strManufacturerCountryLkp,"")!="") {
						enManufacturerCountry[0].setEntryNodeValue(strManufacturerCountryLkp);
						bManufacturerCountryOk = true;
					}
				}
            }
        }
		if(bManufacturerCountryOk==false) {
			message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ":Le pays d'origine de fabrication doit être renseigné.";
		}
    }
    return(message);
}

//String fn02FR0654_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0063
//Chercher dans la table de référence "L217-Sites de fabrication - Production sites"
//avec la valeur de 02FR0063-ProductionSite 
//et mettre la valeur de la colonne 5 de la table sur l'attribut 02FR0654-ProductionLine
function fn02FR0654_Ctl(hmGlobals,item,en, bSave) {
    var i;
    var lkpTableProductionSite = getLkpByName("L217-Sites de fabrication - Production sites");
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    if(ProductionSiteGroup!=null) {
        for(i=0;i<ProductionSiteGroup.size();i++) {
            var lkpProductionSite = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0063-ProductionSite");
            if(lkpProductionSite!=null) {
                var lkpProductionSiteValues=lookupValues(lkpTableProductionSite,lkpProductionSite);
                if (bSave=="true"){
					item.setEntryAttrib(getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0654-ProductionLine").getEntryNodeExactPath(),lkpProductionSiteValues[4]);  
				}
            }
        }
    }
    return("");
}

//String fn02FR0656_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0656
//Ne peut être à true que si 05PG0248-NFCertified est à true
function fn02FR0656_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    var enNfcertified = getValue(hmGlobals,item,"05PG0248-NFCertified");
    var i;
    //On parcourt les occurrence de ProductionSiteGroup
    for(i=0;i<ProductionSiteGroup.size();i++) {
        var occurrence = i+1;
        //On récupère la valeur de 02FR0656-EUPCode de l'occurrence
        var enEupcode = getEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0656-EUPCode");
        if(enEupcode!=null) {
            //Si 02FR0656-EUPCode est à true
            if(enEupcode[0].getEntryNodeValue()==true && enNfcertified==null) {
            	message = message + concat("Groupe Site de fabrication - occurrence ",occurrence," : Le code UEL ne peut être à true que si Certifié NF est à vrai.");
            }
            else if(enEupcode[0].getEntryNodeValue()==true && enNfcertified==false) {
        		message = message + concat("Groupe Site de fabrication - occurrence ",occurrence," : Le code UEL ne peut être à true que si Certifié NF est à vrai.");
    		}
        }
    }
    return message;
}

//String fn02FR0657_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0657
//Si true alors 02FR0658-ACERMICertificateReference ne doit pas être null
//Si false alors 02FR0658-ACERMICertificateReference doit être null
function fn02FR0657_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var i;
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    if(ProductionSiteGroup!=null) {
        for(i=0;i<ProductionSiteGroup.size();i++) {
        	var acermiCertified = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0657-ACERMICertified");
            var acermiCertificateReference = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0658-ACERMICertificateReference");
		    if((acermiCertified==true) && (acermiCertificateReference==null)) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence des certificats ACERMI doit être renseignée");
		    }
		    else if(((acermiCertified==false)||(acermiCertified==null)) && (acermiCertificateReference!=null)) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence des certificats ACERMI ne doit pas être renseignée");
		    }
        }
    }
    return message;
}

// MR0660
function fn02FR0660_Ctl(hmGlobals, item, en, bSave) {
	var strvalue = checkString(en.getEntryNodeValue(),"");
	var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
	var message = checkSAPRelevanceForAttribute(item,strvalue,-1,"02FR0660-MaterialGroup","Groupe Marchand","");
    return message;
}

// MR0662
// Has to be filled if 12BI0665-Classification is filled with ZROUTAGE if not leave blank
function fn06DN0662_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strvalue = checkString(en.getEntryNodeValue(),"");
		var bZROUTAGE=false;
		//
		var oClassificationEns = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"12BI0665-Classification");
		if(oClassificationEns!=null) {
			for(var l=0;l<oClassificationEns.size();l++) {
				var oClassificationEn =  oClassificationEns[l];
				var strClassification = checkString(oClassificationEn.getEntryNodeValue(),"");
				if(strClassification=="ZROUTAGE") {
					bZROUTAGE=true;
				}
			}
		}
		//
		if(bZROUTAGE==true && strvalue=="") {
			message  = message + concat("La famille de routage doit être renseignée lorsque la valeur ZROUTAGE est associée à la Classification.");
		}
		else if (bZROUTAGE==false && strvalue!="") {
			message  = message + concat("La famille de routage ne doit pas être renseignée lorsque la valeur ZROUTAGE n'est pas associée à la Classification.");
		}
	}
	//
    return message;
}

// MR0663
// Has to be filled if 12BI0665-Classification is filled with ZROUTAGE if not leave blank
function fn06DN0663_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strvalue = checkString(en.getEntryNodeValue(),"");
		var bZROUTAGE=false;
		//
		var oClassificationEns = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"12BI0665-Classification");
		if(oClassificationEns!=null) {
			for(var l=0;l<oClassificationEns.size();l++) {
				var oClassificationEn =  oClassificationEns[l];
				var strClassification = checkString(oClassificationEn.getEntryNodeValue(),"");
				if(strClassification=="ZROUTAGE") {
					bZROUTAGE=true;
				}
			}
		}
		//
		if(bZROUTAGE==true && strvalue=="") {
			message  = message + concat("La Catégorie Mix produits doit être renseignée lorsque la valeur ZROUTAGE est associée à la Classification.");
		}
		else if (bZROUTAGE==false && strvalue!="") {
			message  = message + concat("La Catégorie Mix produits ne doit pas être renseignée lorsque la valeur ZROUTAGE n'est pas associée à la Classification.");
		}
	}
    return message;
}

// MR0665
// If catalog C440 or C441 and 01AC0659-MaterialType = ZRF1 then has to be filled with SINIATFR_FFPAP
// or If catalog C450 then has to be filled with SINIATFR_RCYPA
// or If catalog C010 then has to be filled with SFC
// or if catalog C485 then has to be filled with SINIATFR_METAL
// and if 01AC0659-MaterialType = ZFE1, ZHW1 or ZHL1 then has to be filled with ZROUTAGE
function fn12BI0665_Ctl(hmGlobals, item, en, bSave) {
 	var message = "";
	var bSINIATFR_FFPAP=false;
	var bSINIATFR_RCYPA=false;
	var bSFC=false;
	var bSINIATFR_METAL=false;
	var bZROUTAGE=false;
 	//
 	var strCtgName="";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
 	// Item Material Type	
 	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
 	var strMaterialType = "";
 	if(strItemType=="Prod" || strItemType=="BUnit") {
 		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
 		if(oMaterialTypeEn!=null) {
 			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
 		}
 	}
 	else {
 		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
 		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
 		if(oMaterialTypeEn!=null) {
 			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
 		}		
 	}
	
	var oClassificationEns = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"12BI0665-Classification");
	if(oClassificationEns!=null) {
		for(var l=0;l<oClassificationEns.size();l++) {
			var oClassificationEn =  oClassificationEns[l];
			var strClassification = checkString(oClassificationEn.getEntryNodeValue(),"");
			if(strClassification=="SINIATFR_FFPAP") {
				bSINIATFR_FFPAP=true;
			}
			else if(strClassification=="SINIATFR_RCYPA") {
				bSINIATFR_RCYPA=true;
			}
			else if(strClassification=="SFC") {
				bSFC=true;
			}
			else if(strClassification=="SINIATFR_METAL") {
				bSINIATFR_METAL=true;
			}
			else if(strClassification=="ZROUTAGE") {
				bZROUTAGE=true;
			}
		}
	}
 	//
 	if((strCatalogCode=="440" || strCatalogCode=="441") && strMaterialType=="ZRF1" && bSINIATFR_FFPAP==false) {
 		// message = message + "La valeur SINIATFR_FFPAP doit être renseignée";
 	}
 	else if(strCatalogCode=="450" && bSINIATFR_RCYPA==false) {
 		// message = message + "La valeur SINIATFR_RCYPA doit être renseignée";
 	}
 	else if(strCatalogCode=="010" && bSFC==false) {
 		message = message + "La valeur SFC doit être renseignée";
 	}
 	else if(strCatalogCode=="485" && bSINIATFR_METAL==false) {
 		// message = message + "La valeur SINIATFR_METAL doit être renseignée";
 	}
 	if((strMaterialType=="ZFE1" || strMaterialType=="ZHW1" || strMaterialType=="ZHL1") && bZROUTAGE==false) {
 		message = message + "La valeur ZROUTAGE doit être renseignée";
 	}
 	//
    return message;
}

// MR0666
function fn12BI0666_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strvalue = checkString(en.getEntryNodeValue(),"");
		var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
		message = checkSAPRelevanceForAttribute(item,strvalue,-1,"12BI0666-ProductHierarchy","Hiérarchie produit","");
		//
		if(strvalue!="" && strvalue.length()!=18) {
			message = message + " La valeur associée à la Hiérarchie produit doit posséder 18 digits.";
		}
	}
	//
    return message;
}

// MR0668
// 01AC0668-EANCategory
// Retrieve the value column C11 from lookup L103 - Brand Name.
// Value mandatory if GTIN is not null
function fn01AC0668_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	var oitemProd = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemAtLevel").invoke(item,"Prod");
	var lkpBrandName = getValue(hmGlobals,oitemProd,"01AC0036-brandName");
	var lkpTableBrandName = getLkpByName("L103-Marque ciale Detenteur - Brand name");
	if(lkpBrandName!=null && lkpBrandName!="" && lkpBrandName!="null") {
		var lkpBrandNameValues=lookupValues(lkpTableBrandName,lkpBrandName);
		if(lkpBrandNameValues!=null) {
			var strEANCategory = lkpBrandNameValues[10];
			if(strEANCategory!=null && strEANCategory!="") {
				if (bSave=="true"){
					item.setEntryAttrib(en.getEntryNodePath(),strEANCategory);
				}
			}
		}
	}
	var strvalue = checkString(en.getEntryNodeValue(),"");
	//
	var strGTIN="";
	var oGTINEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0042-GTIN");
	if(oGTINEn!=null) {
		strGTIN = checkString(oGTINEn.getEntryNodeValue(),"");
	}
	if(strGTIN!="" && strvalue=="") {
		message = "La catégorie EAN est obligatoire lorsque le GTIN est renseigné.";
	}
	//
	return message;
}

// MR0669
// 06DN0669-GenItemCatGroup
// If 01AC0659-MaterialType = "ZDI5" then has to be filled with "YLEI"
// If 01AC0659-MaterialType = "ZDI3" then has to be filled with "LEIS"
function fn06DN0669_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	var strvalue = checkString(en.getEntryNodeValue(),"");
	//
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	//
	if(strMaterialType=="ZDI5" && strvalue!="YLEI") {
		message = message + "La valeur YLEI doit être renseignée";
	}
	if(strMaterialType=="ZDI3" && strvalue!="LEIS") {
		message = message + "La valeur LEIS doit être renseignée";
	}
	return message;
}

// MR0671
// 01AC0671-XPlantMatlStatusValidFrom
// Must be equal or greater than the current date
function fn01AC0671_Ctl(hmGlobals,colAreaItem,en, bSave) {
	var message = "";
    var dColAreaXPlantMatlStatusValidFrom = getValue(hmGlobals,colAreaItem,"01AC0671-XPlantMatlStatusValidFrom");
    var dToday = new Date("MM/dd/yy",today().formatDate("MM/dd/yy"));
    var StatutsTable = getLkpByName("L220-Statuts - Status");
    var lkpStatus = getValue(hmGlobals,colAreaItem,"01AC0548-Status"); 
    var StatutsTableValues = lookupValues(StatutsTable,lkpStatus);
    
    if(dColAreaXPlantMatlStatusValidFrom!=null) {
        if (StatutsTableValues[0] == "MODIFYING"){
            var oColArea = getColAreaByName(colAreaItem.getCatalog().getCtgName());
            if(oColArea!=null) {
                var ctgItem = oColArea.getColAreaSrcContainer().getEntryByPrimaryKey(colAreaItem.getPrimaryKey());
                var dCtgXPlantMatlStatusValidFrom = getValue(hmGlobals,ctgItem,"01AC0671-XPlantMatlStatusValidFrom");
                if(dCtgXPlantMatlStatusValidFrom!=null) {
                    if(dCtgXPlantMatlStatusValidFrom!=dColAreaXPlantMatlStatusValidFrom) {
                        if(dCtgXPlantMatlStatusValidFrom.isDateBefore(dToday)) {
							// if (bSave=="true"){                           
							//	colAreaItem.setEntryAttrib(en.getEntryNodeExactPath(),dCtgXPlantMatlStatusValidFrom);
							// }
                            // message = message + "Vous ne pouvez pas modifier la date Statut tous sites applicables, elle a été réinitialisée";
                        }
                        else {
                            if(dColAreaXPlantMatlStatusValidFrom.isDateBefore(dToday)) {
                                message = message + "La date Statut tous sites applicables doit être > ou = à la date du jour";
                            }
                        }
                    }
                }
            }
        }
        else if (StatutsTableValues[0] == "CREATION" || StatutsTableValues[0] == "DUPLICATING" || StatutsTableValues[0] == "INACTIVE"){
            if(dColAreaXPlantMatlStatusValidFrom.isDateBefore(dToday)) {
                //01AC0671-XPlantMatlStatusValidFrom is not equals or not after today : error message
                message = message + "La date Statut tous sites applicables doit être > ou = à la date du jour";
            }
        }
    }
    return message;
}
// MR0676
function fn06DN0676_Ctl(hmGlobals, item, en, bSave) {
	var strvalue = checkString(en.getEntryNodeValue(),"");
	var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
	var message = checkSAPRelevanceForAttribute(item,strvalue,-1,"06DN0676-TransportationGroup","Groupe de transports","");
    return message;
}

// MR0678
// 10GC0678-XDistrChanStatusValidFrom
// Must be equal or greater than the current date
function fn10GC0678_Ctl(hmGlobals,colAreaItem,en, bSave) {
	var message = "";
    var dColAreaXDistrChanStatusValidFrom = getValue(hmGlobals,colAreaItem,"10GC0678-XDistrChanStatusValidFrom");
    var dToday = new Date("MM/dd/yy",today().formatDate("MM/dd/yy"));
    var StatutsTable = getLkpByName("L220-Statuts - Status");
    var lkpStatus = getValue(hmGlobals,colAreaItem,"01AC0548-Status"); 
    var StatutsTableValues = lookupValues(StatutsTable,lkpStatus);
    
    if(dColAreaXDistrChanStatusValidFrom!=null) {
        if (StatutsTableValues[0] == "MODIFYING"){
            var oColArea = getColAreaByName(colAreaItem.getCatalog().getCtgName());
            if(oColArea!=null) {
                var ctgItem = oColArea.getColAreaSrcContainer().getEntryByPrimaryKey(colAreaItem.getPrimaryKey());
                var dCtgXDistrChanStatusValidFrom = getValue(hmGlobals,ctgItem,"10GC0678-XDistrChanStatusValidFrom");
                if(dCtgXDistrChanStatusValidFrom!=null) {
                    if(dCtgXDistrChanStatusValidFrom!=dColAreaXDistrChanStatusValidFrom) {
                        if(dCtgXDistrChanStatusValidFrom.isDateBefore(dToday)) {
							// if (bSave=="true"){
							//	colAreaItem.setEntryAttrib(en.getEntryNodeExactPath(),dCtgXDistrChanStatusValidFrom);
							// }
                            // message = message + "Vous ne pouvez pas modifier la date de début de validité du statut article, elle a été réinitialisée";
                        }
                        else {
                            if(dColAreaXDistrChanStatusValidFrom.isDateBefore(dToday)) {
                                message = message + "La date de début de validité du statut article doit être > ou = à la date du jour";
                            }
                        }
                    }
                }
            }
        }
        else if (StatutsTableValues[0] == "CREATION" || StatutsTableValues[0] == "DUPLICATING" || StatutsTableValues[0] == "INACTIVE"){
            if(dColAreaXDistrChanStatusValidFrom.isDateBefore(dToday)) {
                //10GC0678-XDistrChanStatusValidFrom is not equals or not after today : error message
                message = message + "La date de début de validité du statut article doit être > ou = à la date du jour";
            }
        }
    }
    return message;
}

// MR0679
// 06DN0679-Plant
// Attribute mandatory
function fn06DN0679_Ctl(hmGlobals,itemcollarea, en, bSave) {
    var message = "";
	
    // récupération de l'item dans le catalogue.
    var oColArea = getColAreaByName(itemcollarea.getCatalog().getCtgName());

    // si nous sommmes en train d'effectuer un save dans le catalogue, alors on ne touche pas les dates sur les lieux de stockage.
    if (oColArea!=null){
		// itemcatalog contient l'item dans le catalogue, c-à-d l'item tel qu'il était avant de rentrer dans le workflow.
		var itemcatalog = oColArea.getColAreaSrcContainer().getEntryByPrimaryKey(itemcollarea.getPrimaryKey());

		// comparaison de l'item du catalog avec l'item de la Colab Area.
		// hmDiffs contient un tableau dont la clé est le code du lieu.
		// ensuite, 3 champs par clé :
		// en1 = entryNode correspondant à l'occurence de itemcatalog.
		// en2 = entryNode correspondant à l'occurence de itemcollarea.
		// occurences = nombre d'occurences
		var hmDiffs=getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getGroupingDifferences").invoke("PlaceOfStorageGroup","06DN0679-Plant",itemcatalog,itemcollarea);

		var i;
		var oKey;
		var oValue;
		// pour chaque lieu de stockage.
		forEachHmElement(hmDiffs,oKey,oValue) {
			var en1=oValue["en1"]; // entryNode correspondant à la ligne du lieu de stockage de itemcatalog. 
			var en2=oValue["en2"]; // entryNode correspondant à la ligne du lieu de stockage de itemcollarea. 

			// en2!=null
			if (en2!=null)
			{
				// on vérifie le nombre d'occurences.
				if (oValue["occurences"]>1){
					message = message + "Le lieu " + oKey + " est présent " +oValue["occurences"] + " fois. ";
				}
			}

			// suppression d'un lieu => INTERDIT !
			if (en1!=null && en2==null){
				message = message + "Vous ne devez pas supprimer le lieu de stockage "+oKey+". ";
			}       
		}
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,itemcollarea,"PlaceOfStorageGroup");
    var i;
    for(i=0;i<placeOfStorageGroup.size();i++) {
        var enPlant = getFirstEn(hmGlobals,itemcollarea,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant");
		if(enPlant!=null) {
			var strPlant=checkString(enPlant.getEntryNodeValue(),"");
			if(strPlant=="") {
				message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ": Le site doit être renseigné.";
			}
		}
    }
	return message;
}

// MR0681
// 06DN0681-SpecProcTypeCosting
// If filled then the leading 4 digits must be equal to 06DN0679-Plant
function fn06DN0681_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enSpecProcTypeCosting = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0681-SpecProcTypeCosting"); 
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			if(enSpecProcTypeCosting!=null && enPlant!=null) {
				var strSpecProcTypeCosting = checkString(enSpecProcTypeCosting.getEntryNodeValue(),"");
				var strPlant = checkString(enPlant.getEntryNodeValue(),"");
				if(strSpecProcTypeCosting!="" && strPlant!="") {
					if(strSpecProcTypeCosting.length()>3) {
						var strSpecProcTypeCosting4LeadingDigits = substring(strSpecProcTypeCosting,0,4);
						if(strSpecProcTypeCosting4LeadingDigits!=strPlant){
							message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de l'Approvisionnement special CCR doit être égale au code du lieu de stockage. ");
						}
					}
				}
			}
		}
	}
    return message;
}


// Launch Init rules for PlaceOfStorageGroup extension
function fn06DN0682_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    if (bSave=="true"){
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enNoCosting = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0682-NoCosting"); 
			if(enNoCosting!=null) {
				var strNoCosting = checkString(enNoCosting[0].getEntryNodeValue(),"");
				if(strNoCosting=="") {
					// Launch Init rules for new Place of storage group
					var log = hmGlobals["LOGGER"];
					hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"] = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath");
					var scriptinit = getScriptByPath("/scripts/triggers/LG.Business.Initial.Rules");
					var aAttrsList = item.getEntryAttribsList();
					for(j=0;j<aAttrsList.size();j++) {
						var AttrName = aAttrsList[j];
						if(AttrName.contains("PlaceOfStorageGroup")) {
							if (AttrName.contains("06DN0361")) {
								var enext = hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"].invoke(item,concat(aAttrsList[j].parseDelim("/",1),"#",i,"/",aAttrsList[j].parseDelim("/",2)));
								if (enext!=null) {
									var testval = checkString(enext.getEntryNodeValue(),"");
									if(testval=="") {
										enext.setEntryNodeValue("[KGM] - Kilogramme");
									}
								}
							}
							else {
								var strAttrCode = substring(getNameFromPath(aAttrsList[j],"/"),0,8);
								var fnInitialRule = scriptinit.getFunctionByName(concat("fn",strAttrCode,"_Init"));
								if (fnInitialRule!=null)
								{
									log.loggerDebug("Extension initialzation rule : " + aAttrsList[j]);
									var enext;
									if (AttrName.contains("06DN0711")) {
										var rootNode = item.getRootEntryNode();
										var aNodes = rootNode.getEntryNodeChildren();
										var specname="";
										for (l= 0; l<aNodes.size(); l++) {
											var specnametemp=aNodes[l].getEntryNodePath();
											if(specnametemp!=null && specnametemp!="" && specnametemp!="SC000-GlobPrim") {
												specname = specnametemp;
											}
										}
										enext = rootNode.setEntryNode(concat(specname,"/PlaceOfStorageGroup#0/06DN0711-StorageLocation#0"));
									}
									else {
										enext = hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"].invoke(item,concat(aAttrsList[j].parseDelim("/",1),"#",i,"/",aAttrsList[j].parseDelim("/",2)));
									}
									if (enext!=null) {
										var testval = checkString(enext.getEntryNodeValue(),"");
										if(testval=="") {
											var e;
											catchError(e) {
												fnInitialRule.invoke(hmGlobals,item,enext);
											}
											if (e!=null){
												log.loggerDebug( "Extension - FAILED to run initialzation rule " +sFunctionName);
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return message;
}

// MR0683
// 
function fn06DN0683_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    // var strForExport="";
	// var enForExport = getEn(hmGlobals,item,"06DN0416-ForExport");
	// if(enForExport!=null) {
	//	strForExport=checkString(enForExport[0].getEntryNodeValue(),"");
	// }
    var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
    var i;
    for(i=0;i<placeOfStorageGroup.size();i++) {
		var bRegionOfOriginOk = false;
		var strMrpController = "";
		var strManufacturerCountry = "";
		var enPlantEn = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
		var enRegionOfOrigin = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0683-RegionOfOrigin"); 
		var enMrpController = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0686-MrpController"); 
		var enManufacturerCountry = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0646-ManufacturerCountry"); 
        if(enRegionOfOrigin!=null && enPlantEn!=null && enManufacturerCountry!=null && enMrpController!=null) {
            var strRegionOfOrigin = checkString(enRegionOfOrigin[0].getEntryNodeValue(),"");
			strMrpController = checkString(enMrpController[0].getEntryNodeValue(),"");
			strManufacturerCountry = checkString(enManufacturerCountry[0].getEntryNodeValue(),"");
			if(strRegionOfOrigin!="") { bRegionOfOriginOk=true; }
			var strPlant = checkString(enPlantEn[0].getEntryNodeValue(),"");
			if(strPlant!="" && strRegionOfOrigin=="" && strMrpController=="") {
				var lkpRegionOfOrigin = getCtgByName("L911-RegionOfOriginByPlant");
				var oLkpRegionOfOriginItem = lkpRegionOfOrigin.getEntryByPrimaryKey(strPlant);
				if(oLkpRegionOfOriginItem!=null) {
					var strRegionOfOriginLkp = oLkpRegionOfOriginItem.getEntryAttrib("SL911-RegionOfOriginByPlant/C04-RegionOfOrigin");
					if(checkString(strRegionOfOriginLkp,"")!="") {
						enRegionOfOrigin[0].setEntryNodeValue(strRegionOfOriginLkp);
						bRegionOfOriginOk = true;
					}
				}
            }
        }
		if(bRegionOfOriginOk==false && strManufacturerCountry=="") {
			message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ": Le Département d'origine de l'article (origine CCI) doit être renseigné.";
		}
    }	
    return(message);
}

// MR0685
// 06DN0685-MrpType
// If catalog 010 and Prod level then must be equal to "ND"
// If 01AC0659-MaterialType = "ZDI3" or "ZDI5" or "ZHI1" or "ZHI3" then must be equal to "ND"
// If 01AC0659-MaterialType = "ZRO1" or "ZVE1" or "ZHW1" then must be equal to "X1"
function fn06DN0685_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strCtgName="";
		var strCatalogCode="";
		if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
			strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
		}
		else {
			strCtgName = item.getCatalog().getCtgName();
		}
		if(strCtgName!=null && strCtgName!="") {
			strCatalogCode = substring(strCtgName,1,4);
		}
		//
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		//
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enMrpType = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0685-MrpType");
			if(enMrpType!=null) {	
				var strPlant = "";
				var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
				if(enPlant!=null) {
					strPlant = checkString(enPlant.getEntryNodeValue(),"");
				}
				//
				var strvalue = checkString(enMrpType.getEntryNodeValue(),"");
				if(strvalue=="") {
					var strSecSpecName = "";
					var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
					if(strTemp!=null && strTemp!="") {
						strTemp = substring(strTemp,1);
						strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
						//
						if(!(strCatalogCode=="800" && (strItemType=="Prod" || strItemType=="BUnit"))) {
							if(strPlant=="9391") {
								item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/06DN0685-MrpType","ND");
							}
							else if(strCatalogCode=="010" && strItemType=="Prod") {
								item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/06DN0685-MrpType","ND");
							}
							else if (strMaterialType=="ZHI1" || strMaterialType=="ZHI3" || strMaterialType=="ZVE3" || strMaterialType=="ZDI3" || strMaterialType=="ZDI5") {
								item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/06DN0685-MrpType","ND");
							}
							else if (strMaterialType=="ZFE1" || strMaterialType=="ZHL1") {
								item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/06DN0685-MrpType","X0");
							}
							else if (strMaterialType=="ZHW1" || strMaterialType=="ZRO1" || strMaterialType=="ZVE1" || strMaterialType=="ZRF1") {
								item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/06DN0685-MrpType","X1");
							}
						}
					}
				}
				// else {
				//	if(strPlant=="9391" && strvalue!="ND") {
				//		message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ": La valeur de l'attribut Type Plannification doit être égale à ND si le site est 9391";
				//	}

				//	else {
				//		if(strCatalogCode=="010" && strItemType=="Prod" && strvalue!="ND") {
				//			message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ": La valeur de l'attribut Type Plannification doit être égale à ND";
				//		}
				//		//
				//		if((strMaterialType=="ZDI3" || strMaterialType=="ZDI5" || strMaterialType=="ZHI1" || strMaterialType=="ZHI3") && strvalue!="ND") {
				//			message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ": La valeur de l'attribut Type Plannification doit être égale à ND";
				//		}
				//		else if((strMaterialType=="ZRO1" || strMaterialType=="ZVE1" || strMaterialType=="ZHW1") && strvalue!="X1") {
				//			message = message + "Groupe Lieu de Stockage - occurrence "+(i+1) + ": La valeur de l'attribut Type Plannification doit être égale à X1";
				//		}
				//	}
				// }
			}
		}
	}
    return message;
}
	
// MR0686
// 06DN0686-MrpController
// The leading 4 digits must be equal to 06DN0679-Plant
function fn06DN0686_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	var strInvoiceName = getValue(hmGlobals,item,"01AC0014-invoiceName");
	var strCtgName="";
	var strCatalogCode="";
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enMrpController = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0686-MrpController"); 
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			if(enMrpController!=null && enPlant!=null) {
				var strMrpController = checkString(enMrpController.getEntryNodeValue(),"");
				var strPlant = checkString(enPlant.getEntryNodeValue(),"");
				if(strMrpController=="") {
					var oProcurTypeEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0684-ProcurementType");
					var strProcurType = checkString(oProcurTypeEn.getEntryNodeValue(),"");
					var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
					//
					var enProductionSupervisor = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0709-ProductionSupervisor"); 
					var strProductionSupervisor = checkString(enProductionSupervisor.getEntryNodeValue(),"");
					if(strProductionSupervisor!="" && strProcurType=="E") {
						if(strItemType!=null && strItemType!="") {
							if (bSave=="true" && (strItemType=="3" || strItemType=="4") && strCatalogCode!="010"){
								enMrpController.setEntryNodeValue(strProductionSupervisor);
							}
						}
					}
					if(toUpperCase(strInvoiceName).contains("PV") && strPlant!="" && strCatalogCode=="010" && bSave=="true") {
						enMrpController.setEntryNodeValue(strPlant+"-1A4");
					}
					else if(toUpperCase(strInvoiceName).contains("BEL") && strPlant!="" && strCatalogCode=="010" && bSave=="true") {
						enMrpController.setEntryNodeValue(strPlant+"-1A5");
					}
					else if(!(toUpperCase(strInvoiceName).contains("BEL") || toUpperCase(strInvoiceName).contains("PV") || toUpperCase(strInvoiceName).contains("TWIN")) && strPlant!="" && strCatalogCode=="010") {
						if (bSave=="true" && strItemType!=null && (strItemType=="3" || strItemType=="4")) {
							enMrpController.setEntryNodeValue(strPlant+"-1A1");
						}
					}
				} else {
					if(strMrpController!="" && strPlant!="") {
						if(strMrpController.length()>3) {
							var strMrpController4LeadingDigits = substring(strMrpController,0,4);
							if(strMrpController4LeadingDigits!=strPlant){
								message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres du 'Numéro du gestionnaire' doit être égale au code du lieu de stockage. ");
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0687
// 06DN0687-ProdStorageLocation
// The 4 leading digits of the value selected into the lookup table must be equal to 06DN0679-Plant
function fn06DN0687_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		//
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		if(placeOfStorageGroup!=null) {
			for(i=0;i<placeOfStorageGroup.size();i++) {
				var enProdStorageLocation = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0687-ProdStorageLocation"); 
				var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
				if(enProdStorageLocation!=null && enPlant!=null) {
					var strProdStorageLocation = checkString(enProdStorageLocation.getEntryNodeValue(),"");
					var strPlant = checkString(enPlant.getEntryNodeValue(),"");
					if(strProdStorageLocation=="") {
						if(strItemType!=null && strItemType!="") {
							if (bSave=="true" && (strItemType=="2" || strItemType=="3" || strItemType=="4")){
								var enStorageLocation = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
								if(enStorageLocation!=null) {
									var strStorageLocation = checkString(enStorageLocation.getEntryNodeValue(),"");
									if(strStorageLocation!="") {
										if(strPlant=="9502" && (strMaterialType=="ZFE1" || strMaterialType=="ZHW1")) {
											strStorageLocation= replaceString(strStorageLocation,"9502-0","9502-W");
										}
										enProdStorageLocation.setEntryNodeValue(strStorageLocation);
									}
									else if (strPlant!="" && strStorageLocation=="") {
										enProdStorageLocation.setEntryNodeValue(strPlant+"-"+substring(strPlant,2,4)+"01");
									}
								}
							}
						}
					}
					else {
						if(strProdStorageLocation!="" && strPlant!="") {
							if(strProdStorageLocation.length()>3) {
								var strProdStorageLocation4LeadingDigits = substring(strProdStorageLocation,0,4);
								if(strProdStorageLocation4LeadingDigits!=strPlant){
									message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de l'Emplacement de stockage de consommation doit être égale au code du lieu de stockage. ");
								}
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// IR0688
// 06DN0688-ExtProcStorageLocation
// The 4 leading digits of the value selected into the lookup table must be equal to 06DN0679-Plant
function fn06DN0688_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		//
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		if(placeOfStorageGroup!=null) {
			for(i=0;i<placeOfStorageGroup.size();i++) {
				var enExtProcStorageLocation = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0688-ExtProcStorageLocation"); 
				var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
				if(enExtProcStorageLocation!=null && enPlant!=null) {
					var strExtProcStorageLocation = checkString(enExtProcStorageLocation.getEntryNodeValue(),"");
					var strPlant = checkString(enPlant.getEntryNodeValue(),"");
					if(strExtProcStorageLocation=="") {
						if(strItemType!=null && strItemType!="") {
							if (bSave=="true" && (strItemType=="2" || strItemType=="3" || strItemType=="4")){
								var enStorageLocation = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
								if(enStorageLocation!=null) {
									var strStorageLocation = checkString(enStorageLocation.getEntryNodeValue(),"");
									if(strStorageLocation!="") {
										if(strPlant=="9502" && (strMaterialType=="ZFE1" || strMaterialType=="ZHW1")) {
											// WMS
											// strStorageLocation= replaceString(strStorageLocation,"9502-0","9502-W");
										}
										enExtProcStorageLocation.setEntryNodeValue(strStorageLocation);
									}
									else if (strPlant!="" && strStorageLocation=="") {
										enExtProcStorageLocation.setEntryNodeValue(strPlant+"-"+substring(strPlant,2,4)+"01");
									}
								}
							}
						}
					}
					else {
						if(strExtProcStorageLocation!="" && strPlant!="") {
							if(strExtProcStorageLocation.length()>3) {
								var strExtProcStorageLocation4LeadingDigits = substring(strExtProcStorageLocation,0,4);
								if(strExtProcStorageLocation4LeadingDigits!=strPlant){
									message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de l'Emplacement de stockage de réception doit être égale au code du lieu de stockage. ");
								}
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0689
// 06DN0689-SchedMarginKey
// The leading 4 digits must be equal to 06DN0679-Plant
function fn06DN0689_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		if(placeOfStorageGroup!=null) {
			for(i=0;i<placeOfStorageGroup.size();i++) {
				var oSchedMarginKeyEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0689-SchedMarginKey");
				var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
				if(oSchedMarginKeyEn!=null && enPlant!=null) {
					var strSchedMarginKey = checkString(oSchedMarginKeyEn.getEntryNodeValue(),"");
					var strPlant = checkString(enPlant.getEntryNodeValue(),"");
					if(strSchedMarginKey!="" && strPlant!="") {
						if(strSchedMarginKey.length()>3) {
							var strSchedMarginKey4LeadingDigits = substring(strSchedMarginKey,0,4);
							if(strSchedMarginKey4LeadingDigits!=strPlant){
								message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de la 'Clé d'horizon pour marges' doit être égale au code du lieu de stockage. ");
							}
						}
					}
					else if (strSchedMarginKey=="" && strPlant!="") {
						var strSecSpecName = "";
						var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
						if(strTemp!=null && strTemp!="") {
							strTemp = substring(strTemp,1);
							strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
						}
						item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/06DN0689-SchedMarginKey",strPlant+"-000");
					}
				}
			}
		}
	}
    return message;
}

// MR0690
function fn06DN0690_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
    var i;
    var PlaceOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
    for(i=0;i<PlaceOfStorageGroup.size();i++) {
		var enStrategyGroup = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0690-StrategyGroup"); 
		var strvalue = "";
		var strAttrName = "";
		if(enStrategyGroup!=null) {
			strvalue = checkString(enStrategyGroup.getEntryNodeValue(),"");
			strAttrName = en.getNodeFromEntryNode().getNodeName();
			message = message + checkSAPRelevanceForAttribute(item,strvalue,i,"06DN0690-StrategyGroup","Groupe stratégie","");
		}
	}
    return message;
}

// MR0694
function fn06DN0694_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		var i;
		var PlaceOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		for(i=0;i<PlaceOfStorageGroup.size();i++) {
			var enStrategyGroup = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0694-AvailabilityCheck"); 
			var strvalue = "";
			var strAttrName = "";
			if(enStrategyGroup!=null) {
				strvalue = checkString(enStrategyGroup.getEntryNodeValue(),"");
				strAttrName = en.getNodeFromEntryNode().getNodeName();
				message = message + checkSAPRelevanceForAttribute(item,strvalue,i,"06DN0694-AvailabilityCheck","Contrôle disponibilité à la commande","");
			}
		}
	}
    return message;
}

// MR0695
// 06DN0695-MRPGroup
// The leading 4 digits must be equal to 06DN0679-Plant
function fn06DN0695_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var oMRPGroupEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0695-MRPGroup");
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			var oProcurTypeEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0684-ProcurementType");
			var strProcurType = checkString(oProcurTypeEn.getEntryNodeValue(),"");
			if(oMRPGroupEn!=null && enPlant!=null) {
				var strMRPGroup = checkString(oMRPGroupEn.getEntryNodeValue(),"");
				var strPlant = checkString(enPlant.getEntryNodeValue(),"");
				if(strMRPGroup=="" && strProcurType=="E"){
					var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
					if(strItemType!=null && strItemType!="") {
						if (bSave=="true" && (strItemType=="3" || strItemType=="4")){
							oMRPGroupEn.setEntryNodeValue(concat(strPlant,"-3000"));
						}
					}
				}
				else {
					if(strMRPGroup!="" && strPlant!="") {
						if(strMRPGroup.length()>3) {
							var strMRPGroup4LeadingDigits = substring(strMRPGroup,0,4);
							if(strMRPGroup4LeadingDigits!=strPlant){
								message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres du 'Groupe de plannification' doit être égale au code du lieu de stockage. ");
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0696
// 06DN0696-SpecProcurementType
// If filled then the leading 4 digits must be equal to 06DN0679-Plant
// if Catalog Id = C010 and Prod Level then must be equal to "06DN0679-Plant-50"
// if 02FR0063-ProductionSite(L217_column SAP PlantCode) = 06DN0679-Plant and 02FR0743-IsSubcontractedProduct set to "True" then must be equal to "06DN0679-Plant-30" 
// REMOVED - if 06DN0684-ProcurementType equal to "F" then attribute is mandatory
// if not must be blank
function fn06DN0696_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	//
	var strCtgName="";
	var strCatalogCode="";
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
    var i;
    if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enSpecProcurementType = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0696-SpecProcurementType"); 
			var strSpecProcurementType = "";
			if(enSpecProcurementType!=null) {
				strSpecProcurementType = checkString(enSpecProcurementType.getEntryNodeValue(),"");
			}
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			var strPlant = "";
			if(enPlant!=null) {
				strPlant = checkString(enPlant.getEntryNodeValue(),"");
			}
			var enProcurementType = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0684-ProcurementType"); 
			var strProcurementType = "";
			if(enProcurementType!=null) {
				strProcurementType = checkString(enProcurementType.getEntryNodeValue(),"");
			}
			//
			if(strSpecProcurementType.length()>3){
				var strSpecProcurementType4LeadingDigits = substring(strSpecProcurementType,0,4);
				if(strSpecProcurementType4LeadingDigits!=strPlant){
					message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres du 'type d'appro. spécial' doit être égale au code du lieu de stockage. ");
				}
			}
			//
			var boolIsSubcontractedProduct = "";
			var productionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
			var j;
			if(productionSiteGroup!=null) {
				for(j=0;j<productionSiteGroup.size();j++) {
					var enProductionSite = getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+j+"/02FR0063-ProductionSite"); 
					var strProductionSite = "";
					if(enProductionSite!=null) {
						strProductionSite = checkString(enProductionSite.getEntryNodeValue(),"");
						if(strProductionSite!="") {
							var strProductionSiteSAP=getCtgByName("L217-Sites de fabrication - Production sites").getEntryByPrimaryKey(strProductionSite).getEntryAttrib("SL217-Production_sites/C07-SAP PlantCode");
							if(strProductionSiteSAP==strPlant) {
								var enBoolIsSubcontractedProduct=getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+j+"/02FR0743-IsSubcontractedProduct"); 
								if(enBoolIsSubcontractedProduct!=null) {
									boolIsSubcontractedProduct = checkString(enBoolIsSubcontractedProduct.getEntryNodeValue(),"");
								}
							}
						}
					}
				}
			}
			//
			if(strCatalogCode=="010" && strItemType=="Prod") {
				if(strSpecProcurementType!=concat(strPlant,"-50")) {
					message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : Le type d'appro. spécial doit être égal au code site suivi de'-50'");
				}
			}
			else if(boolIsSubcontractedProduct=="true") {
				if(strSpecProcurementType!=concat(strPlant,"-30")) {
					message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : Le type d'appro. spécial doit être égal au code site suivi de'-30'");
				}
			}
			// if(strProcurementType=="F" && strSpecProcurementType=="") {
			// 	message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : Le type d'appro. spécial doit être renseigné");
			// }
			// else if(strProcurementType=="F" && strSpecProcurementType=="") {
			//	message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : Le type d'appro. spécial doit être renseigné");
			// }
			// else if(strProcurementType!="F" && strSpecProcurementType!="") {
			//	message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : Le type d'appro. spécial ne doit pas être renseigné");
			// }
		}
	}
	return message;
}

// MR0697
// 06DN0697-IndividualOrCollectiveRequir
// Equal to "2"
// If (catalog 730 and ((06DN0669-GenItemCatGroup = YASP and type = BUnit or PItem) or type = Prod) or 01AC0659-MaterialType = "ZVE3" or "ZHI3" or "ZDI3" then equal to "1"
function fn06DN0697_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var strCtgName="";
	var strCatalogCode="";
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	//
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	//
    var strGenItemCatGroup="";
	var enGenItemCatGroup = getEn(hmGlobals,item,"06DN0669-GenItemCatGroup");
	if(enGenItemCatGroup!=null) {
		strGenItemCatGroup=checkString(enGenItemCatGroup[0].getEntryNodeValue(),"");
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enIndividualOrCollectiveRequir = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0697-IndividualOrCollectiveRequir"); 
			if(enIndividualOrCollectiveRequir!=null) {
				if (bSave=="true"){
					if((strCatalogCode=="730" && ((strGenItemCatGroup=="YASP" && (strItemType=="PItem" || strItemType=="BUnit")) || strItemType=="Prod")) || strMaterialType=="ZHI3" || strMaterialType=="ZDI3" || strMaterialType=="ZVE3") {
						enIndividualOrCollectiveRequir.setEntryNodeValue("1");
					}
					else if(!(strCatalogCode=="800" && (strItemType=="Prod" || strItemType=="BUnit"))) {
						enIndividualOrCollectiveRequir.setEntryNodeValue("2");
					}
				}
			}
		}
	}
    return message;
}

// MR0701
// If attribute relevant then apply following rule:
// If catalog =  440 or 441, Plant = 9571 and material type = ZRF1 then True
// If catalog =  485 and Plant = 9526 then True
// If not then False
function fn06DN0701_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var strCtgName="";
	var strCatalogCode="";
	var strItemPK=item.getPrimaryKey();
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
    var i;
    var PlaceOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	if(PlaceOfStorageGroup!=null) {
		for(i=0;i<PlaceOfStorageGroup.size();i++) {
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			var strPlant = "";
			if(enPlant!=null) {
				strPlant = checkString(enPlant.getEntryNodeValue(),"");
			}
			//
			var enStrategyGroup = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0701-BatchManagementIndicator"); 
			var strvalue = "";
			var strAttrName = "";
			if(enStrategyGroup!=null) {
				strvalue = checkString(enStrategyGroup.getEntryNodeValue(),"");
				strAttrName = en.getNodeFromEntryNode().getNodeName();
				message = message + checkSAPRelevanceForAttribute(item,strvalue,i,"06DN0701-BatchManagementIndicator","géré par lot ?","");
				if(message=="" && strvalue!=""){
					if(strItemPK=="K475B30374" || strItemPK=="K475B30375" || strItemPK=="K475B30376"){
						if(strvalue!="false") {
							message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : L'attribut géré par lot doit être égal à faux");
						}						
					}
					else if((strCatalogCode=="440" || strCatalogCode=="441" || strCatalogCode=="450" || strCatalogCode=="475") && strPlant=="9571") {
						if(strvalue!="true") {
							message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : L'attribut géré par lot doit être égal à vrai");
						}
					}
					else if(strCatalogCode=="485" && (strPlant=="9525" || strPlant=="9526" || strPlant=="9502" || strPlant=="9501")) {
						if(strvalue!="true") {
							message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : L'attribut géré par lot doit être égal à vrai");
						}
					}
					else if(strvalue!="false") {
						message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : L'attribut géré par lot doit être égal à faux");
					}
				}
			}
		}
	}
    return message;
}

// MR0703
function fn02FR0703_Ctl(hmGlobals, item, en, bSave) {
	var strvalue = checkString(en.getEntryNodeValue(),"");
	var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
	var message = checkSAPRelevanceForAttribute(item,strvalue,-1,"02FR0703-PurchasingGroup","Groupe d'achats","");
    return message;
}

// MR0704
function fn02FR0704_Ctl(hmGlobals, item, en, bSave) {
	var strvalue = checkString(en.getEntryNodeValue(),"");
	var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
	var message = checkSAPRelevanceForAttribute(item,strvalue,-1,"02FR0704-AutoPurchAllowed","Déclenchement automatique du réappro autorisé","");
    return message;
}

// MR0705
// 06DN0705-UnlimiedOverdelivery
// "If Procur. Type (06DN0684-ProcurementType )equal to ""E"" then ""X"" True // False
// If not then leave blank"
function fn06DN0705_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	for(i=0;i<placeOfStorageGroup.size();i++) {
		var oProcurTypeEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0684-ProcurementType");
		var strProcurType = checkString(oProcurTypeEn.getEntryNodeValue(),"");
		//
		var oUnlimiedOverdeliveryEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0705-UnlimiedOverdelivery");
		var strUnlimiedOverdelivery = checkString(oUnlimiedOverdeliveryEn.getEntryNodeValue(),"");
		if(strUnlimiedOverdelivery=="") {
			if (bSave=="true"){
				if(strProcurType=="F") {
					oUnlimiedOverdeliveryEn.setEntryNodeValue(false);
				}
				else if(strProcurType=="E") {
					oUnlimiedOverdeliveryEn.setEntryNodeValue(true);
				}
			}
		}
		else {
			if(strProcurType=="E" && strUnlimiedOverdelivery!="true"){
				message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : La livraison excédentaire illimitée autorisée doit être égale à vrai.");
			}
			else if(strProcurType!="E" && strUnlimiedOverdelivery!="false") {
				message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : La livraison excédentaire illimitée autorisée doit être égale à faux.");
			}
		}
	}
	return message;
}

// MR0706
function fn06DN0706_Ctl(hmGlobals, item, en, bSave) {
	var strvalue = checkString(en.getEntryNodeValue(),"");
	var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
	var message = checkSAPRelevanceForAttribute(item,strvalue,-1,"06DN0706-LoadingGroup","Groupe de chargement","");
    return message;
}

// MR0707
// 06DN0707-PlantMaterialStatus
// "YE" if product manufactured on site means the current plant is part of the list of production sites at Prod Level, if not "YU"
function fn06DN0707_Ctl(hmGlobals,item, en, bSave) {
    var message ="";
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	for(i=0;i<placeOfStorageGroup.size();i++) {
		var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant");
		var enPlantMaterialStatus = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0707-PlantMaterialStatus"); 
		var sStatusToApply = "YU";
		//
		var sPlant = "";
		if(enPlant!=null) {
			sPlant = checkString(enPlant.getEntryNodeValue(),"");
			if(sPlant!="") {
				var sPlantMaterialStatus = enPlantMaterialStatus.getEntryNodeValue();
				if(sPlantMaterialStatus=="") {
					// On récupère la liste des lieux de production au niveau Produit
					var oitemProd = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemAtLevel").invoke(item,"Prod");
					if(oitemProd!=null) {
						var ProductionSiteGroup = getEn(hmGlobals,oitemProd,"ProductionSiteGroup");
						if(ProductionSiteGroup!=null) {
							var j;
							//On parcourt les occurrence de ProductionSiteGroup
							for(j=0;j<ProductionSiteGroup.size();j++) {
								//On récupère la valeur de 02FR0063-ProductionSite de l'occurrence
								var oProductionSiteEn = getFirstEn(hmGlobals,oitemProd,"ProductionSiteGroup#"+j+"/02FR0063-ProductionSite");
								if(oProductionSiteEn!=null) {
									var sProductionSite = checkString(oProductionSiteEn.getEntryNodeValue(),"");
									if(sProductionSite==sPlant) {
										sStatusToApply = "YE";
									}
								}
							}
						}
						if (bSave=="true"){
							item.setEntryAttrib(enPlantMaterialStatus.getEntryNodeExactPath(),sStatusToApply);
						}
					}
				}
			}
		}
	}
	return message;
}

// MR0708
// 06DN0708-PlantMaterialStatusValidFrom
// Must be equal or greater than the current date
function fn06DN0708_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
    var StatutsTable = getLkpByName("L220-Statuts - Status");
    var lkpStatus = getValue(hmGlobals,item,"01AC0548-Status"); 
    var StatutsTableValues = lookupValues(StatutsTable,lkpStatus);
	var dToday = new Date("MM/dd/yy",today().formatDate("MM/dd/yy"));
    var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
    var i;
    for(i=0;i<placeOfStorageGroup.size();i++) {
        var enPlantMaterialStatusValidFrom = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0708-PlantMaterialStatusValidFrom");
		if(enPlantMaterialStatusValidFrom!=null) {
			var dPlantMaterialStatusValidFrom = enPlantMaterialStatusValidFrom.getEntryNodeValue();
			if(dPlantMaterialStatusValidFrom!=null) {
				if(dPlantMaterialStatusValidFrom!=dToday) {
					if (StatutsTableValues[0] == "CREATION" || StatutsTableValues[0] == "DUPLICATING" || StatutsTableValues[0] == "INACTIVE"){
						if(dPlantMaterialStatusValidFrom.isDateBefore(dToday)) {
							message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : La date d'application du statut de l'article sur le site doit être postérieure ou égale à la date du jour.");
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0709
// 06DN0709-ProductionSupervisor
// If 06DN0684-ProcurementType = "E" then must be equal to 06DN0686-MrpController
function fn06DN0709_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	for(i=0;i<placeOfStorageGroup.size();i++) {
		var oProcurTypeEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0684-ProcurementType");
		if(oProcurTypeEn!=null) {
			var enProductionSupervisor = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0709-ProductionSupervisor");
			var strProductionSupervisor = checkString(enProductionSupervisor.getEntryNodeValue(),"");
			//
			var strProcurType = checkString(oProcurTypeEn.getEntryNodeValue(),"");
			if(strProcurType == "E"){
				var enMrpController = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0686-MrpController");
				var strMrpController = checkString(enMrpController.getEntryNodeValue(),"");
				//
				if(strProductionSupervisor!=strMrpController) {
					message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : La valeur de l'agent d'ordonnancement doit être égale à celle du numéro du gestionnaire.");
				}
			}
			else {
				var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant");
				var strPlant = checkString(enPlant.getEntryNodeValue(),"");
				if(strProductionSupervisor=="" && strProcurType == "F") {
					if (bSave=="true"){
						enProductionSupervisor.setEntryNodeValue(concat(strPlant,"-Z93"));
					}				
				} else {
					if(strProductionSupervisor!="" && strPlant!="") {
						if(strProductionSupervisor.length()>3) {
							var strProductionSupervisor4LeadingDigits = substring(strProductionSupervisor,0,4);
							if(strProductionSupervisor4LeadingDigits!=strPlant){
								message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de l'Agent d'ordonnancement doit être égale au code du lieu de stockage. ");
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0711
// 06DN0711-StorageLocation
// the leading 4 digits of the value selected into the lookup table must be equal to 06DN0679-Plant
// if 01AC0659-MaterialType = ZFE1 or ZHL1 then must be equal to 06DN0679-2 last digits of 06DN0679&"01"
// if 01AC0659-MaterialType = ZHW1 then must be equal to 06DN0679-2 last digits of 06DN0679&"02"
function fn06DN0711_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			// WMS
			// var oPlaceOfStorageGroup = placeOfStorageGroup[i];
			var enStorageLocation = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			if(enStorageLocation!=null && enPlant!=null) {
				var strPlant = checkString(enPlant.getEntryNodeValue(),"");
				var j;
				if(enStorageLocation!=null) {
					for(j=0;j<enStorageLocation.size();j++) {
						var strStorageLocation = checkString(enStorageLocation[j].getEntryNodeValue(),"");
						if(strStorageLocation!="" && strPlant!="") {
							if(strStorageLocation.length()>3) {
								var strStorageLocation4LeadingDigits = substring(strStorageLocation,0,4);
								if(strStorageLocation4LeadingDigits!=strPlant){
									message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de l'Emplacement de stockage principal - occurrence ",j+1," doit être égale au code du lieu de stockage. ");
								}
								// WMS
								// if(strStorageLocation.contains("W201")) {
								//	var ensWarehouseManagement = oPlaceOfStorageGroup.getEntryNodes("WarehouseManagement");
								//	if(ensWarehouseManagement.size()==0) {
								//		var strSecSpecName = "";
								//		var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
								//		if(strTemp!=null && strTemp!="") {
								//			strTemp = substring(strTemp,1);
								//			strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
								//		}
								//		//
								//		var strCatalogCode="";
								//		if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
								//			strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
								//		}
								//		else {
								//			strCtgName = item.getCatalog().getCtgName();
								//		}
								//		if(strCtgName!=null && strCtgName!="") {
								//			strCatalogCode = substring(strCtgName,1,4);
								//		}
								//		// Item Material Type	
								//		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
								//		var strMaterialType = "";
								//		if(strItemType=="Prod" || strItemType=="BUnit") {
								//			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
								//			if(oMaterialTypeEn!=null) {
								//				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
								//			}
								//		}
								//		else {
								//			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
								//			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
								//			if(oMaterialTypeEn!=null) {
								//				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
								//			}		
								//		}
								//		item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0811-StorageNum","XW2");
								//		//
								//		if(strCatalogCode=="010") {
								//			item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType","PLA");
								//		}
								//		else if(strCatalogCode=="015") {
								//			item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType","CLO");
								//		}
								//		else if(strCatalogCode=="020" && strMaterialType=="ZFE1") {
								//			item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType","DOU");
								//		}
								//		else if(strCatalogCode=="020" && strMaterialType=="ZHW1") {
								//			item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType","RTH");
								//		}
								//		else if(strCatalogCode=="145") {
								//			item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType","CAR");
								//		}
								//		else if(strCatalogCode=="110" || strCatalogCode=="115") {
								//			item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType","PSE");
								//		}
								//	}
								//}
							}
							// var strPlant2lastdigits = "";
							// if(strPlant.length()>1) {
							// 	strPlant2lastdigits = substring(strPlant,(strPlant.length()-2));
							// 	if(strPlant2lastdigits!="") {
							// 		if((strMaterialType=="ZFE1" || strMaterialType=="ZHL1") && strStorageLocation != concat(strPlant,"-",strPlant2lastdigits,"01")) {
							// 			message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de l'Emplacement de stockage principal - occurrence ",j+1," doit être égale au code du lieu de stockage - 2 derniers digits du lieu de stockage && 01.");
							// 		}
							// 		else if(strMaterialType=="ZHW1" && strStorageLocation != concat(strPlant,"-",strPlant2lastdigits,"02")) {
							// 			message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de l'Emplacement de stockage principal - occurrence ",j+1," doit être égale au code du lieu de stockage - 2 derniers digits du lieu de stockage && 02.");
							// 		}
							// 	}
							// }
						}
						// else if(strStorageLocation=="" && strPlant!="") {
						//	enStorageLocation[j].setEntryNodeValue(strPlant+"-"+substring(strPlant,2,4)+"01");
						// }
					}
				}
			}
		}
	}
    return message;
}


// MR0720
// 06DN0720-PriceControl
// if 01AC0659-MaterialType = "ZHI1" then equal to "V", if not equal to "S"
function fn06DN0720_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var strCtgName="";
	var strCatalogCode="";
	var strItemPK=item.getPrimaryKey();
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enPriceControl = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0720-PriceControl"); 
			if(enPriceControl!=null) {
				if (bSave=="true"){
					if(strMaterialType=="ZHI1") {
						enPriceControl.setEntryNodeValue("V");
					}
					else {
						if(!(strCatalogCode=="800" && (strItemType=="Prod" || strItemType=="BUnit"))) {
							enPriceControl.setEntryNodeValue("S");
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0721
// 06DN0721-ValuationClass
// The leading 4 digits must be equal to 06DN0679-Plant
function fn06DN0721_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	if (bSave=="true"){
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		//
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		if(placeOfStorageGroup!=null) {
			for(i=0;i<placeOfStorageGroup.size();i++) {
				var enValuationClass = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0721-ValuationClass"); 
				if(enValuationClass!=null) {
					var strValuationClass = checkString(enValuationClass.getEntryNodeValue(),"");				
					if(strValuationClass!="" && strMaterialType!="") {
						if(strValuationClass.length()>3) {
							var strValuationClass4LeadingDigits = substring(strValuationClass,0,4);
							if(strValuationClass=="") {
								if (bSave=="true"){
									// enValuationClass.setEntryNodeValue(false);
								}
							}
							else if(strValuationClass4LeadingDigits!=strMaterialType){
								message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur des 4 premiers chiffres de la 'Classe de valorisation' doit être égale au code du type de produits. ");
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0724
// 06DN0724-MateriaIsCostedWithQuantity
// If catalogs ((C440 or C441) and 06DN0679 <> 9571) or If 01AC0659-MaterialType equal to ZDI3, ZDI5, ZHI3 or ZVE3 then must be equal to FALSE
function fn06DN0724_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var strCtgName="";
	var strCatalogCode="";
	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
	}
	else {
		strCtgName = item.getCatalog().getCtgName();
	}
	if(strCtgName!=null && strCtgName!="") {
		strCatalogCode = substring(strCtgName,1,4);
	}
	//
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
		for(i=0;i<placeOfStorageGroup.size();i++) {
			var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
			var strPlant = checkString(enPlant.getEntryNodeValue(),"");
			//
			var enSpecProcurementType = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0696-SpecProcurementType"); 
			var strSpecProcurementType = "";
			if(enSpecProcurementType!=null) {
				strSpecProcurementType = checkString(enSpecProcurementType.getEntryNodeValue(),"");
			}
			var enMateriaIsCostedWithQuantity = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0724-MateriaIsCostedWithQuantity"); 
			if(enMateriaIsCostedWithQuantity!=null) {
				if((((strCatalogCode=="440" || strCatalogCode=="441") && strPlant!="9571" && strSpecProcurementType.contains("-TJ")) || strMaterialType=="ZDI3" || strMaterialType=="ZDI5" || strMaterialType=="ZHI3" || strMaterialType=="ZVE3") && enMateriaIsCostedWithQuantity.getEntryNodeValue()==true) {
					message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de l'attribut 'Calcul de coût de revient avec structure de qtés' doit être égale à faux. ");
				}
				else if(((strCatalogCode=="440" || strCatalogCode=="441") && strPlant=="9571") && enMateriaIsCostedWithQuantity.getEntryNodeValue()==false) {
					message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de l'attribut 'Calcul de coût de revient avec structure de qtés' doit être égale à vrai. ");
				}
			}
		}
	}
    return message;
}

// MR0725
// 10GC0725-SalesOrganisation
// An existing Sales Orga can't be deleted
// A Sales Orga can't be duplicated for the current item
function fn10GC0725_Ctl(hmGlobals,itemcollarea, en, bSave) {
    var message = "";
	
    // récupération de l'item dans le catalogue.
    var oColArea = getColAreaByName(itemcollarea.getCatalog().getCtgName());

    if (oColArea!=null){
		// itemcatalog contient l'item dans le catalogue, c-à-d l'item tel qu'il était avant de rentrer dans le workflow.
		var itemcatalog = oColArea.getColAreaSrcContainer().getEntryByPrimaryKey(itemcollarea.getPrimaryKey());

		// comparaison de l'item du catalog avec l'item de la Colab Area.
		// hmDiffs contient un tableau dont la clé est le code de l'organisation
		// ensuite, 3 champs par clé :
		// en1 = entryNode correspondant à l'occurence de itemcatalog.
		// en2 = entryNode correspondant à l'occurence de itemcollarea.
		// occurences = nombre d'occurences
		var hmDiffs=getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getGroupingDifferences").invoke("SalesOrganisationGroup","10GC0725-SalesOrganisation",itemcatalog,itemcollarea);

		var i;
		var oKey;
		var oValue;
		// pour chaque organisation de ventes
		forEachHmElement(hmDiffs,oKey,oValue) {
			var en1=oValue["en1"]; // entryNode correspondant à la ligne de l'organisation de ventes de itemcatalog. 
			var en2=oValue["en2"]; // entryNode correspondant à la ligne de l'organisation de ventes de itemcollarea. 

			// en2!=null
			if (en2!=null)
			{
				// on vérifie le nombre d'occurences.
				if (oValue["occurences"]>1){
					message = message + "L'organisation de ventes " + oKey + " est présente " +oValue["occurences"] + " fois. ";
				}
			}

			// suppression d'une organisation de ventes => INTERDIT !
			if (en1!=null && en2==null){
				message = message + "Vous ne devez pas supprimer l'organisation de ventes "+oKey+". ";
			}       
		}
	}
	//
	return message;
}

// MR0728
// 10GC0728-ItemCategoryGroup
// If 01AC0659-MaterialType = "ZDI5" then has to be filled with "YLEI"
// If 01AC0659-MaterialType = "ZDI3" then has to be filled with "LEIS"
function fn10GC0728_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	//
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	//
	var salesOrganisationGroup = getEn(hmGlobals,item,"SalesOrganisationGroup");
	var i;
	if(salesOrganisationGroup!=null) {
		for(i=0;i<salesOrganisationGroup.size();i++) {
			var enItemCategoryGroup = getFirstEn(hmGlobals,item,"SalesOrganisationGroup#"+i+"/10GC0728-ItemCategoryGroup"); 
			var strvalue = checkString(enItemCategoryGroup.getEntryNodeValue(),"");
			//
			if(strMaterialType=="ZDI5" && !(strvalue=="YLEI" || strvalue=="LUMF")) {
				message = message + "La valeur YLEI ou LUMF doit être renseignée pour l'attribut Groupe types de poste.";
			}
			if(strMaterialType=="ZDI3" && !(strvalue=="LEIS" || strvalue=="LUMF")) {
				message = message + "La valeur LEIS ou LUMF doit être renseignée pour l'attribut Groupe types de poste.";
			}
		}
	}
	return message;
}

// MR732
function fn06DN0732_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
	var strSalesUnit = checkString(en.getEntryNodeValue(),"");
	var strBaseUnitOfMeasure = checkString(getValue(hmGlobals,item,"06DN0661-BaseUnitOfMeasure"),"");
	if(strSalesUnit!="" && strSalesUnit==strBaseUnitOfMeasure) {
		message = "L'unité de vente doit être différente de l'unité de mesure de base.";
	}
	return message;
}

// Launch Init rules for SalesOrganisationGroup extension
function fn10GC0733_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    if (bSave=="true"){
		var salesOrganisationGroup = getEn(hmGlobals,item,"SalesOrganisationGroup");
		var i;
		for(i=0;i<salesOrganisationGroup.size();i++) {
			var enDistrChannelStatus = getEn(hmGlobals,item,"SalesOrganisationGroup#"+i+"/10GC0733-DistrChannelStatus"); 
			if(enDistrChannelStatus!=null) {
				var strDistrChannelStatus = checkString(enDistrChannelStatus[0].getEntryNodeValue(),"");
				if(strDistrChannelStatus=="") {
					// Launch Init rules for new Sales organization group
					var log = hmGlobals["LOGGER"];
					hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"] = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath");
					var scriptinit = getScriptByPath("/scripts/triggers/LG.Business.Initial.Rules");
					var aAttrsList = item.getEntryAttribsList();
					for(j=0;j<aAttrsList.size();j++) {
						var AttrName = aAttrsList[j];
						if(AttrName.contains("SalesOrganisationGroup")) {
							var fnInitialRule = scriptinit.getFunctionByName(concat("fn",substring(getNameFromPath(aAttrsList[j],"/"),0,8),"_Init"));
							if (fnInitialRule!=null)
							{
								log.loggerDebug("Extension initialization rule : " + aAttrsList[j]);
								var enext = hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"].invoke(item,concat(aAttrsList[j].parseDelim("/",1),"#",i,"/",aAttrsList[j].parseDelim("/",2)));
								if (enext!=null) {
									var testval = checkString(enext.getEntryNodeValue(),"");
									if(testval=="") {
										var e;
										catchError(e) {
											fnInitialRule.invoke(hmGlobals,item,enext);
										}
										if (e!=null){
											log.loggerDebug( "Extension - FAILED to run initialzation rule " +sFunctionName);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return message;
}

// MR0734
// 10GC0734-DistrChannelStatusValidFrom
// Must be equal or greater than the current date
function fn10GC0734_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
    var StatutsTable = getLkpByName("L220-Statuts - Status");
    var lkpStatus = getValue(hmGlobals,item,"01AC0548-Status"); 
    var StatutsTableValues = lookupValues(StatutsTable,lkpStatus);
	var dToday = new Date("MM/dd/yy",today().formatDate("MM/dd/yy"));
	//
	var salesOrganisationGroup = getEn(hmGlobals,item,"SalesOrganisationGroup");
	var i;
	if(salesOrganisationGroup!=null) {
		for(i=0;i<salesOrganisationGroup.size();i++) {
			var enItemDistrChannelStatusValidFrom = getFirstEn(hmGlobals,item,"SalesOrganisationGroup#"+i+"/10GC0734-DistrChannelStatusValidFrom"); 
			var dDistrChannelStatusValidFrom = enItemDistrChannelStatusValidFrom.getEntryNodeValue();	
			if(dDistrChannelStatusValidFrom!=null) {
				if(dDistrChannelStatusValidFrom!=dToday) {
					if (StatutsTableValues[0] == "CREATION" || StatutsTableValues[0] == "DUPLICATING" || StatutsTableValues[0] == "INACTIVE"){
						if(dDistrChannelStatusValidFrom.isDateBefore(dToday)) {
							message = message + "L'attribut 'Statut article-Canal de distribution applicable au' doit être postérieure ou égale à la date du jour";
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0735
// 10GC0735-ProductAttribute10
// If 06DN0422-ChannelOfDistribution = [01]-Negoce and 06DN0346-IsInCatalog = True then TRUE if not FALSE
function fn10GC0735_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	var testNegoceAndIsInCatalog=false;
	var oBUnitDistributionGroup = getEn(hmGlobals,item,"ChannelOfDistributionGroup");
	if(oBUnitDistributionGroup!=null) {
		for(var p=0;p<oBUnitDistributionGroup.size();p++) {
			if(getValue(hmGlobals,item,"ChannelOfDistributionGroup#" + p + "/06DN0422-ChannelOfDistribution")=="[01] - Negoce") {
				var boolIsInCatalog = getValue(hmGlobals,item,"ChannelOfDistributionGroup#" + p + "/06DN0346-IsInCatalog");
				if(boolIsInCatalog == "true"){
					testNegoceAndIsInCatalog=true;
				}
			}
		}
	}
	if(testNegoceAndIsInCatalog==true) {
		if (bSave=="true"){
			item.setEntryAttrib(en.getEntryNodePath(), true);
		}
	}
	else {
		if (bSave=="true"){
			item.setEntryAttrib(en.getEntryNodePath(), false);
		}
	}
    return message;
}

// Launch Init rules for ProductionSiteGroup extension
function fn02FR0743_Ctl(hmGlobals, item, en, bSave) {
    var message = "";
    if (bSave=="true"){
		var productionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
		var i;
		for(i=0;i<productionSiteGroup.size();i++) {
			var enIsSubcontractedProduct = getEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0743-IsSubcontractedProduct"); 
			if(enIsSubcontractedProduct!=null) {
				var strIsSubcontractedProduct = checkString(enIsSubcontractedProduct[0].getEntryNodeValue(),"");
				if(strIsSubcontractedProduct=="") {
					// Launch Init rules for new Production site group
					var log = hmGlobals["LOGGER"];
					hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"] = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath");
					var scriptinit = getScriptByPath("/scripts/triggers/LG.Business.Initial.Rules");
					var aAttrsList = item.getEntryAttribsList();
					for(j=0;j<aAttrsList.size();j++) {
						var AttrName = aAttrsList[j];
						if(AttrName.contains("ProductionSiteGroup")) {
							var fnInitialRule = scriptinit.getFunctionByName(concat("fn",substring(getNameFromPath(aAttrsList[j],"/"),0,8),"_Init"));
							if (fnInitialRule!=null)
							{
								log.loggerDebug("Extension initialzation rule : " + aAttrsList[j]);
								var enext = hmGlobals["FN_GET_ENTRY_NODE_FROM_ATTR_PATH"].invoke(item,concat(aAttrsList[j].parseDelim("/",1),"#",i,"/",aAttrsList[j].parseDelim("/",2)));
								if (enext!=null) {
									var testval = checkString(enext.getEntryNodeValue(),"");
									if(testval=="") {
										var e;
										catchError(e) {
											fnInitialRule.invoke(hmGlobals,item,enext);
										}
										if (e!=null){
											log.loggerDebug( "Extension - FAILED to run initialzation rule " +sFunctionName);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return message;
}

// MR0747
// 10GC0747-TotalReplenishmentLeadTime 
// If Pitem level2, must be equal to the value of the Pitem level 1
function fn10GC0747_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var iItemLevel = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
	if(iItemLevel==4) {
		var strTotalReplenishmentLeadTimePItemLevel2 = checkString(en.getEntryNodeValue(),"");
		var oitemPItem1 = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getParentItem").invoke(hmGlobals,item);
		var oTotalReplenishmentLeadTimePItemLevel1En = getFirstEn(hmGlobals,oitemPItem1,"10GC0747-TotalReplenishmentLeadTime "); 
		if(oTotalReplenishmentLeadTimePItemLevel1En!=null) {
			var strTotalReplenishmentLeadTimePItemLevel1 = checkString(oTotalReplenishmentLeadTimePItemLevel1En.getEntryNodeValue(),"");
			if(strTotalReplenishmentLeadTimePItemLevel2!=strTotalReplenishmentLeadTimePItemLevel1) {
				message = message + "La valeur du délai de réapprovisionnement doit être égale à celle renseignée au niveau PItem1.";
			}
		}	
	}
    return(message);
}

// MR0767
// String fn05PG0767_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0767
// Mandatory if 05PG0549-CECertified equal to True, blank if 05PG0549-CECertified equal to False
function fn05PG0767_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var strDOPNumber = checkString(en.getEntryNodeValue(),"");
	//
	var enCECertified = getEn(hmGlobals,item,"/05PG0249-CECertified");
	if(enCECertified!=null) {
		if(enCECertified[0].getEntryNodeValue()==true) {
			if(strDOPNumber=="") {
				message = message + "Le numéro de DOP est obligatoire lorsque le marquage CE est à vrai.";
			}
		}
		else {
			if(strDOPNumber!="") {
					message = message + "Le numéro de DOP ne doit pas être renseigné lorsque le marquage CE est à faux.";
			}
		}
	}
    return(message);
}

// MR0768
// String fn05PG0768_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0768
// Mandatory if 05PG0767-DOPNumber is not null, blank if 05PG0767-DOPNumber is null
function fn05PG0768_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var strProductTypeID = checkString(en.getEntryNodeValue(),"");
	//
	var enDOPNumber = getEn(hmGlobals,item,"/05PG0767-DOPNumber");
	if(enDOPNumber!=null) {
		var strDOPNumber=checkString(enDOPNumber[0].getEntryNodeValue(),"");
		if(strDOPNumber!="") {
			if(strProductTypeID=="") {
				message = message + "Le code produit type est obligatoire lorsque le numéro de DOP est renseigné.";
			}
		}
		else {
			if(strProductTypeID!="") {
					message = message + "Le code produit type ne doit pas être renseigné lorsque le numéro de DOP n'est pas renseigné.";
			}
		}
	}
    return(message);
}

// MR0769
// String fn05PG0769_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0769
// Blank if 05PG0767-DOPNumber is null
function fn05PG0769_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var strDOPUrl = checkString(en.getEntryNodeValue(),"");
	//
	var enDOPNumber = getEn(hmGlobals,item,"/05PG0767-DOPNumber");
	if(enDOPNumber!=null) {
		var strDOPNumber=checkString(enDOPNumber[0].getEntryNodeValue(),"");
		if(strDOPNumber=="") {
			if(strDOPUrl!="") {
					message = message + "L'URL de la DOP ne doit pas être renseigné lorsque le numéro de DOP n'est pas renseigné.";
			}
		}
	}
    return(message);
}

// MR0770
// String fn05PG0770_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0770
// Mandatory if 05PG0767-DOPNumber is not null, blank if 05PG0767-DOPNumber is null
function fn05PG0770_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var strProductUsage = checkString(en.getEntryNodeValue(),"");
	//
	var enDOPNumber = getEn(hmGlobals,item,"/05PG0767-DOPNumber");
	if(enDOPNumber!=null) {
		var strDOPNumber=checkString(enDOPNumber[0].getEntryNodeValue(),"");
		if(strDOPNumber!="") {
			if(strProductUsage=="") {
				message = message + "L'usage du produit est obligatoire lorsque le numéro de DOP est renseigné.";
			}
		}
		else {
			if(strProductUsage!="") {
					message = message + "L'usage du produit ne doit pas être renseigné lorsque le numéro de DOP n'est pas renseigné.";
			}
		}
	}
    return(message);
}

// MR0773
// String fn05PG0773_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0773
// Blank if 05PG0767-DOPNumber is null
function fn05PG0773_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	var strOrganismNotified = checkString(en.getEntryNodeValue(),"");
	//
	var enDOPNumber = getEn(hmGlobals,item,"/05PG0767-DOPNumber");
	if(enDOPNumber!=null) {
		var strDOPNumber=checkString(enDOPNumber[0].getEntryNodeValue(),"");
		if(strDOPNumber=="") {
			if(strOrganismNotified!="") {
					message = message + "L'organisme notifié ne doit pas être renseigné lorsque le numéro de DOP n'est pas renseigné.";
			}
		}
	}
    return(message);
}

// MR0775
// String fn01AC0775_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0775
function fn01AC0775_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    if (bSave=="true"){
		var strTradeItemOrderable = getValue(hmGlobals,item,"06DN0347-TradeItemOrderable");
		var strCatalogCode="";
		if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
			strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
		}
		else {
			strCtgName = item.getCatalog().getCtgName();
		}
		if(strCtgName!=null && strCtgName!="") {
			strCatalogCode = substring(strCtgName,1,4);
		}
		//
		var bInvoiceNameContainsTwinBel = false;
		var strInvoiceName = getValue(hmGlobals,item,"01AC0014-invoiceName");
		if(toUpperCase(strInvoiceName).contains("TWIN") || toUpperCase(strInvoiceName).contains("BEL")) {
			var iItemLevel = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
			if((iItemLevel==1 || iItemLevel==2) && strCatalogCode=="010") {
				bInvoiceNameContainsTwinBel = true;
			}
		}
		// 
		var enPublishedIntoSAP = getEn(hmGlobals,item,"/01AC0775-PublishedIntoSAP");
		var bPublishedIntoSAP = getValue(hmGlobals,item,"01AC0775-PublishedIntoSAP");
		if(strCatalogCode=="010" && bPublishedIntoSAP=="") {
			var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
			var i;
			var bis1A4=false;
			if(placeOfStorageGroup!=null) {
				for(i=0;i<placeOfStorageGroup.size();i++) {
					var oMrpControllerEn = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0686-MrpController");
					if(oMrpControllerEn!=null) {
						var strMrpController = checkString(oMrpControllerEn.getEntryNodeValue(),"");
						if(strMrpController.contains("1A4")) {
							bis1A4=true;
						}
					}
				}
			}
			if(bis1A4==true) {
				enPublishedIntoSAP.setEntryNodeValue(false);
			}
		}
		else if(bPublishedIntoSAP=="") {
			enPublishedIntoSAP.setEntryNodeValue(false);
		}
		else if(bInvoiceNameContainsTwinBel==true && bPublishedIntoSAP!="false") {
			message=message+"La valeur de l'attribut 'Publié dans SAP ?' doit être égale à faux.";
		}
		else if(strTradeItemOrderable==true && bPublishedIntoSAP=="false" && bInvoiceNameContainsTwinBel!=true) {
			message = message + "L'attribut 'Publié dans SAP?' doit être changé à vrai.";
		}
	}
    return(message);
}

// MR0776
// Check relevance as follow: Retrieve the attribute relevance into the Lookup table L909 with the following search key: Attribute Id&"_"&Material type
// If relevant then retrieve the 3 leading digits of 12BI0666-ProductHierarchy then retrieve the value affected into the Lookup table "L247-Picking Area / Zone de prélèvement", column  "C04-Picking Area " with the following search key: [3 leading digits of 12BI0666-ProductHierarchy]
function fn06DN0776_Ctl(hmGlobals, item, en, bSave) {
	var strvalue = checkString(en.getEntryNodeValue(),"");
	var strAttrDisplayName = en.getNodeFromEntryNode().getNodeName();
	var message = checkSAPRelevanceForAttribute(item,strvalue,-1,"06DN0776-PickingArea","Zone de prélèvement","");
	if(message==""){
		var log = getLogger("Lafarge.DataEntry");
		//
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		strAttrName="06DN0776-PickingArea";
		var iAttrSepIndex = strAttrName.indexOf("-");
		var strAttrCode = substring(strAttrName,0,iAttrSepIndex);
		//
		if(strMaterialType!=null && strMaterialType!="") {
			// Lkp Table values
			var oL909 = getCtgByName("L909-AttributeRelevanceByMaterialType");
			var strLkpCode = concat(strAttrCode,"_",strMaterialType);
			//
			var oLkpItem = oL909.getEntryByPrimaryKey(strLkpCode);
			if(oLkpItem!=null) {
				var strAttributeRelevance = oLkpItem.getEntryAttrib("SL909-AttributeRelevanceByMaterialType/C04-Relevance");
				strAttributeRelevance = checkString(strAttributeRelevance,"");
				if(strAttributeRelevance=="O" || strAttributeRelevance=="M") {
					var enProductHierarchy = getEn(hmGlobals,item,"/12BI0666-ProductHierarchy");
					if(enProductHierarchy!=null) {
						var strProductHierarchy=checkString(enProductHierarchy[0].getEntryNodeValue(),"");
						if(strProductHierarchy!="") {
							var iProductHierarchyLen = strProductHierarchy.length();
							if(iProductHierarchyLen>2) {						
								var strProductHierarchy3LeadingDigits = substring(strProductHierarchy,0,3);
								var oL247 = getCtgByName("L247-Zone de prélèvement - Picking Area");
								var str247LkpCode = concat("[",strProductHierarchy3LeadingDigits,"]");
								var oL247Item = oL247.getEntryByPrimaryKey(str247LkpCode);
								if(oL247Item!=null) {
									var strL247PickingArea = checkString(oL247Item.getEntryAttrib("SL247-Picking_area/C03-PickingArea"),"");
									if(strL247PickingArea!=strvalue) {
										message = message + "La valeur de la Zone de prélèvement n'est pas cohérente avec la Hiérarchie produit.";
									}
								}
							}
						}
					}
				}
			}
		}
	}
   return message;
}

// MR0795
// String fn05PG0795_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0795
// Mandatory if 05PG0549-CECertified equal to True, blank if 05PG0249-CECertified equal to False
function fn05PG0795_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	if (bSave=="true"){
		var strYearOfFirstCEMarking = checkString(en.getEntryNodeValue(),"");
		//
		var enCECertified = getEn(hmGlobals,item,"/05PG0249-CECertified");
		if(enCECertified!=null) {
			if(enCECertified[0].getEntryNodeValue()==true) {
				if(strYearOfFirstCEMarking=="") {
					message = message + "L'année de 1ère apposition du marquage CE est obligatoire lorsque le marquage CE est à vrai.";
				}
			}
			else {
				if(strYearOfFirstCEMarking!="") {
						message = message + "L'année de 1ère apposition du marquage CE ne doit pas être renseignée lorsque le marquage CE est à faux.";
				}
			}
		}
	}
    return(message);
}

// MR0810
// String fn01AC0810_Ctl(hmGlobals, item, en, bSave)
// Label format rule (only for C010 catalog) :
// if Label format Prod = null then
// * if BUnit length < 2200 mm then Label format = null
// * if BUnit length >= 2200 mm then Label format = null
// 
// if Label format Prod = G then
// * if BUnit length < 2200 mm then Label format = null and PItem Label format = null
// * if BUnit length > 2200 mm then Label format = G
// * if PItem height < 350 mm then Label format = null
// * if PItem height >= 350 mm and height < 400 mm then Label format = P
// * if PItem height >= 400 mm then Label format = G
function fn01AC0810_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	if(strCatalogCode=="010") {
		var strLabelFormat = checkString(en.getEntryNodeValue(),"");
		var lkpTableNormalizedUnits = getLkpByName("L210-Unités normées - normalized units");
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
		if(strItemType!=null && strItemType!="") {
			if (bSave=="true" && strItemType=="2"){
				var oitemProd = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"Prod");
				//
				var nLength;
				var enLength = getEn(hmGlobals,item,"04CP0103-Length");
				var enLengthUnits = getEn(hmGlobals,item,"04CP0104-LengthUnits");
				if(enLength!=null && enLengthUnits!=null) {  
					//CALCUL DE LA LONGUEUR EN METRES
					var oLength = enLength[0];
					if(oLength!=null) {
						nLength = oLength.getEntryNodeValue();
						if(nLength!=null && nLength>0) {
							var oLengthUnits = enLengthUnits[0];
							if(oLengthUnits!=null) {
								var lkpLengthUnits = oLengthUnits.getEntryNodeValue();
								if(lkpLengthUnits!=null) {
									//Si 04CP0104-LengthUnits est en CMT ==> Conversion de 04CP0103-Length en MMT (*10)
									if(lookupValues(lkpTableNormalizedUnits,lkpLengthUnits)[0]=="CMT") {
										nLength = nLength * 10;
									}
									else if(lookupValues(lkpTableNormalizedUnits,lkpLengthUnits)[0]=="MTR") {
										nLength = nLength * 1000;
									}
								}
							}
						}
					}
				}
				//
				if(oitemProd!=null) {
					var oLabelFormatProdEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(oitemProd,"01AC0810-LabelFormat");
					if(oLabelFormatProdEn!=null) {
						strLabelFormatProd = checkString(oLabelFormatProdEn.getEntryNodeValue(),"");
						if(strLabelFormatProd=="" && strLabelFormat!="") {
							message = message + "Le marquage au niveau Produit n'étant pas renseigné, celui de l'élément courant ne doit pas l'être non plus.";
						}
						else if(nLength==null) {
							message = message + "La longueur de l'élément courant doit être renseignée.";
						}
						else if(strLabelFormatProd=="G" && nLength<2200 && strLabelFormat!="") {
							message = message + "Le marquage au niveau Produit=G et la longueur de l'élément courant étant < à 2 200 mm, le marquage de l'élément courant ne doit pas être renseigné.";
						}
						else if(strLabelFormatProd=="G" && nLength>=2200 && (strLabelFormat=="" || strLabelFormat=="P")) {
							message = message + "Le marquage au niveau Produit=G et la longueur de l'élément courant étant >= à 2 200 mm, le marquage de l'élément courant doit être égale à G.";
						}
					}
				}
			}
			else if (bSave=="true" && (strItemType=="3" || strItemType=="4")){
				var iQuantityOfNextLowerLevel = 1;
				var oTotalQuantityOfNextLowerLevelEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"06DN0407-TotalQuantityOfNextLowerLevel");
				if(oTotalQuantityOfNextLowerLevelEn!=null) {
					iQuantityOfNextLowerLevel = oTotalQuantityOfNextLowerLevelEn[0].getEntryNodeValue();
				}
				//
				var oitemProd = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"Prod");
				var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
				//
				var enRealThickness = getEn(hmGlobals,oitemProd,"04CP0082-RealThickness");
				var enRealThicknessUnits = getEn(hmGlobals,oitemProd,"04CP0084-RealThicknessUnits");
				var nRealThickness;
				if(enRealThickness!=null && enRealThicknessUnits!=null) {  
					//CALCUL DE LA HAUTEUR EN MM
					var enRealThickness0 = enRealThickness[0];
					var enRealThicknessUnits0 = enRealThicknessUnits[0];
					if(enRealThickness0!=null && enRealThicknessUnits0!=null) {
						nRealThickness = enRealThickness0.getEntryNodeValue();
						var lkpRealThicknessUnits = enRealThicknessUnits0.getEntryNodeValue();
						if(lkpRealThicknessUnits!=null && nRealThickness!=null) {
							//Si 04CP0084-RealThicknessUnits est en CMT ==> Conversion de 04CP0082-RealThickness en MMT (*10)
							//Si 04CP0084-RealThicknessUnits est en MTR ==> Conversion de 04CP0082-RealThickness en MMT (*1000)
							if(lookupValues(lkpTableNormalizedUnits,lkpRealThicknessUnits)[0]=="CMT") {
								nRealThickness = nRealThickness * 10;
							}
							else if(lookupValues(lkpTableNormalizedUnits,lkpRealThicknessUnits)[0]=="MTR") {
								nRealThickness = nRealThickness * 1000;
							}
						}
						if(nRealThickness!=null) {
							nRealThickness = nRealThickness * iQuantityOfNextLowerLevel;
						}
					}
				}
				//
				if(oitemBUnit!=null) {
					var oLabelFormatBUnitEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(oitemBUnit,"01AC0810-LabelFormat");
					if(oLabelFormatBUnitEn!=null) {
						strLabelFormatBUnit = checkString(oLabelFormatBUnitEn.getEntryNodeValue(),"");
						if(strLabelFormatBUnit=="" && strLabelFormat!="") {
							message = message + "Le marquage au niveau BUnit n'étant pas renseigné, celui de l'élément courant ne doit pas l'être non plus.";
						}
						else if(nRealThickness==null) {
							message = message + "L'épaisseur au niveau produit doit pas être renseignée.";
						}
						else if(strLabelFormatBUnit=="G" && nRealThickness<350 && strLabelFormat!="") {
							message = message + "Le marquage au niveau BUnit=G et la longueur de l'élément courant étant < à 350 mm, le marquage de l'élément courant ne doit pas être renseigné.";
						}
						else if(strLabelFormatBUnit=="G" && nRealThickness>=350 && nRealThickness<400 && (strLabelFormat=="" || strLabelFormat=="G")) {
							message = message + "Le marquage au niveau BUnit=G et la longueur de l'élément courant étant >= à 350 mm mais < à 400 mm, le marquage de l'élément courant doit être égale à P.";
						}
						else if(strLabelFormatBUnit=="G" && nRealThickness>=400 && (strLabelFormat=="" || strLabelFormat=="P")) {
							message = message + "Le marquage au niveau BUnit=G et la longueur de l'élément courant étant >= à 400 mm, le marquage de l'élément courant doit être égale à G.";
						}
					}
				}
			}
		}
	}
    return(message);
}

// MR0811
// 06DN0811-StorageNum
// If storage location = W201, then storage number = XW2
function fn06DN0811_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
 		for(i=0;i<placeOfStorageGroup.size();i++) {
			var ensStorageLocation = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
 			if(ensStorageLocation!=null) {
				for(var j=0;j<ensStorageLocation.size();j++) {
					var strStorageLocation = checkString(ensStorageLocation[j].getEntryNodeValue(),"");				
					if(strStorageLocation.contains("W201")) {
						var enStorageLocation = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0811-StorageNum"); 
						if(enStorageLocation!=null) {
							var strStorageLocation = checkString(enStorageLocation.getEntryNodeValue(),"");
							if(strStorageLocation=="") {
								enStorageLocation.setEntryNodeValue("XW2");
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0812
// 06DN0812-StorageType
// If storage location is W201 AND if catalog 010 then "PLA", if 015 then "CLO", if 020 and Material type is ZFE1 then "DOU", if 020 and Material type is ZHW1 then "RTH", if 145 then "CAR", if 110 or 115 then "PSE"
function fn06DN0812_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	// Item Material Type	
	var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
	var strMaterialType = "";
	if(strItemType=="Prod" || strItemType=="BUnit") {
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}
	}
	else {
		var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
		var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
		if(oMaterialTypeEn!=null) {
			strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
		}		
	}
	var lkpTableNormalizedUnits = getLkpByName("L210-Unités normées - normalized units");
	//
	var strSecSpecName = "";
	var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
	if(strTemp!=null && strTemp!="") {
		strTemp = substring(strTemp,1);
		strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
 		for(i=0;i<placeOfStorageGroup.size();i++) {
			var ensStorageLocation = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
 			if(ensStorageLocation!=null) {
				for(var j=0;j<ensStorageLocation.size();j++) {
					var strStorageLocation = checkString(ensStorageLocation[j].getEntryNodeValue(),"");				
					if(strStorageLocation.contains("W201")) {
						var enStorageType = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0812-StorageType"); 
						if(enStorageType!=null) {
							var strStorageType = checkString(enStorageType.getEntryNodeValue(),"");
							if(strStorageType=="") {
								if(strCatalogCode=="010") {
									enStorageType.setEntryNodeValue("PLA");
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","101");
								}
								else if(strCatalogCode=="015") {
									enStorageType.setEntryNodeValue("CLO");
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","101");
								}
								else if(strCatalogCode=="020" && strMaterialType=="ZFE1") {
									enStorageType.setEntryNodeValue("DOU");
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","101");
								}
								else if(strCatalogCode=="020" && strMaterialType=="ZHW1") {
									enStorageType.setEntryNodeValue("RTH");
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","101");
								}
								else if(strCatalogCode=="030" || strCatalogCode=="035" || strCatalogCode=="040" || strCatalogCode=="045" || strCatalogCode=="065" || strCatalogCode=="070" || strCatalogCode=="075" || strCatalogCode=="080" || strCatalogCode=="085" || strCatalogCode=="095" || strCatalogCode=="135" || strCatalogCode=="600" || strCatalogCode=="700") {
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","103");
								}
								else if(strCatalogCode=="145") {
									enStorageType.setEntryNodeValue("CAR");
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","101");
								}
								else if(strCatalogCode=="110" || strCatalogCode=="115") {
									enStorageType.setEntryNodeValue("PSE");
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/06DN0819-PickingArea","105");
								}
								// set 06DN0816-LoadingEquipmentQty, 06DN0817-LoadingEquipmentQtyUnit and 06DN0818-StorageUnitType
								var strLoadingEquipmentQty = "";
								var oorderQuantityMiniEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"06DN0352-orderQuantityMini");
								if(oorderQuantityMiniEn!=null) {
									strLoadingEquipmentQty = checkString(oorderQuantityMiniEn[0].getEntryNodeValue(),"");
								}
								var strLoadingEquipmentQtyUnit = "";
								var oBaseUnitOfMeasureEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"06DN0661-BaseUnitOfMeasure");
								if(oBaseUnitOfMeasureEn!=null) {
									strLoadingEquipmentQtyUnit = checkString(oBaseUnitOfMeasureEn[0].getEntryNodeValue(),"");
								}
								//
								if (strLoadingEquipmentQty!=null && strLoadingEquipmentQty!="") {
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/Palettization#0/06DN0816-LoadingEquipmentQty",strLoadingEquipmentQty);
								}
								if (strLoadingEquipmentQtyUnit!=null && strLoadingEquipmentQtyUnit!="") {
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/Palettization#0/06DN0817-LoadingEquipmentQtyUnit",strLoadingEquipmentQtyUnit);
								}
								if (strCatalogCode!="010" && strCatalogCode!="015" && strCatalogCode!="020") {
									item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/Palettization#0/06DN0818-StorageUnitType","E1");
								}
								else {
									var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemLevel").invoke(item);
									if(strItemType=="2" || strItemType=="3" || strItemType=="4") {
										var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
										if(oitemBUnit!=null) {
											// 04CP0103-Length
											var nLength;
											var enLength = getEn(hmGlobals,oitemBUnit,"04CP0103-Length");
											var enLengthUnits = getEn(hmGlobals,oitemBUnit,"04CP0104-LengthUnits");
											if(enLength!=null && enLengthUnits!=null) {  
												//CALCUL DE LA LONGUEUR EN METRES
												var oLength = enLength[0];
												if(oLength!=null) {
													nLength = oLength.getEntryNodeValue();
													if(nLength!=null && nLength>0) {
														var oLengthUnits = enLengthUnits[0];
														if(oLengthUnits!=null) {
															var lkpLengthUnits = oLengthUnits.getEntryNodeValue();
															if(lkpLengthUnits!=null) {
																//Si 04CP0104-LengthUnits est en CMT ==> Conversion de 04CP0103-Length en MMT (*10)
																if(lookupValues(lkpTableNormalizedUnits,lkpLengthUnits)[0]=="CMT") {
																	nLength = nLength * 10;
																}
																else if(lookupValues(lkpTableNormalizedUnits,lkpLengthUnits)[0]=="MTR") {
																	nLength = nLength * 1000;
																}
															}
														}
													}
												}
											}
											//
											var oitemProd = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"Prod");
											if(oitemProd!=null) {
												//On récupère 04CP0095-Width chez le parent
												var enParentWidth = getEn(hmGlobals,oitemProd,"04CP0095-Width");
												//On récupère 04CP0097-WidthUnit chez le parent
												var enParentWidthUnit = getEn(hmGlobals,oitemProd,"04CP0097-WidthUnit");
												//Si l'item parent est pertinent sur les attributs 04CP0095-Width et 04CP0097-WidthUnit
												if(enParentWidth!=null && enParentWidthUnit!=null) {
													nWidth = enParentWidth[0].getEntryNodeValue();
													lkpWidthUnit = enParentWidthUnit[0].getEntryNodeValue();
												}
												//Si on a trouvé 04CP0097-WidthUnit dans la table des unités 
												if(lkpWidthUnit!=null) {
													//Si 04CP0097-WidthUnit est en CMT ==> conversion en METRES (*0.01)
													if(lookupValues(lkpTableNormalizedUnits,lkpWidthUnit)[0]=="CMT") {
														nWidth = nWidth * 0.01;
													}
													//Si 04CP0097-WidthUnit est en MMT ==> conversion en METRES (*0.001)
													else if (lookupValues(lkpTableNormalizedUnits,lkpWidthUnit)[0]=="MMT") {
														nWidth = nWidth * 0.001;
													}
												}
											}
											var strTUS="";
											if(nLength<=2600) {
												if(nWidth==0.9) { strTUS="S26"; }
												else { strTUS="26"; }
											}
											else if(nLength>2600 && nLength<=2800) {
												if(nWidth==0.9) { strTUS="S28"; }
												else { strTUS="28"; }
											}
											else if(nLength>2800 && nLength<=3000) {
												if(nWidth==0.9) { strTUS="S30"; }
												else { strTUS="30"; }
											}
											else if(nLength>3000 && nLength<=3200) {
												if(nWidth==0.9) { strTUS="S32"; }
												else { strTUS="32"; }
											}
											else if(nLength>3200 && nLength<=3600) {
												if(nWidth==0.9) { strTUS="S36"; }
												else { strTUS="36"; }
											}
											if(strTUS!="") {
												item.setEntryAttrib(strSecSpecName+"/PlaceOfStorageGroup#"+i+"/WarehouseManagement#0/Palettization#0/06DN0818-StorageUnitType",strTUS);
											}
										}
									}
								}
							}
							else {
								if(strCatalogCode=="010" && strStorageType!="PLA") {
									message = message + "La valeur du type de magasin doit être PLA.";
								}
								else if(strCatalogCode=="015" && strStorageType!="CLO") {
									message = message + "La valeur du type de magasin doit être CLO.";
								}
								else if(strCatalogCode=="020" && strMaterialType=="ZFE1" && strStorageType!="DOU") {
									message = message + "La valeur du type de magasin doit être DOU.";
								}
								else if(strCatalogCode=="020" && strMaterialType=="ZHW1" && strStorageType!="RTH") {
									message = message + "La valeur du type de magasin doit être RTH.";
								}
								else if(strCatalogCode=="145" && strStorageType!="CAR") {
									message = message + "La valeur du type de magasin doit être CAR.";
								}
								else if((strCatalogCode=="110" || strCatalogCode=="115") && strStorageType!="PSE") {
									message = message + "La valeur du type de magasin doit être PSE.";
								}
								else if((strCatalogCode=="25") && !(strStorageType=="PAR" || strStorageType=="PRO")) {
									message = message + "La valeur du type de magasin doit être PRO ou PAR.";
								}
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0814
// 06DN0814-CapacityUsage
// Value empty if catalog code is 010, 015 or 020
function fn06DN0814_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
 		for(i=0;i<placeOfStorageGroup.size();i++) {
			var ensStorageLocation = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
 			if(ensStorageLocation!=null) {
				for(var j=0;j<ensStorageLocation.size();j++) {
					var strStorageLocation = checkString(ensStorageLocation[j].getEntryNodeValue(),"");				
					if(strStorageLocation.contains("W201")) {
						var ensWarehouseManagement = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/WarehouseManagement"); 
						if(ensWarehouseManagement!=null) {
							for(var k=0;k<ensWarehouseManagement.size();k++) {
								var enCapacityUsage = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/WarehouseManagement#"+k+"/06DN0814-CapacityUsage"); 
								if(enCapacityUsage!=null) {
									var strCapacityUsage = checkString(enCapacityUsage.getEntryNodeValue(),"");
									if(strCapacityUsage!="" && (strCatalogCode=="010" || strCatalogCode=="015" || strCatalogCode=="020")) {
										message = message + "La capacité de consommation ne doit pas être renseignée pour le lieu de stockage possédant la valeur W201.";
									}
								}
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0815
// 06DN0815-CapacityUsageUnit
// Value empty if catalog code is 010, 015 or 020
function fn06DN0815_Ctl(hmGlobals, item, en, bSave) {
	var message = "";
	//
 	var strCatalogCode="";
 	if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
 		strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
 	}
 	else {
 		strCtgName = item.getCatalog().getCtgName();
 	}
 	if(strCtgName!=null && strCtgName!="") {
 		strCatalogCode = substring(strCtgName,1,4);
 	}
	//
	var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
	var i;
	if(placeOfStorageGroup!=null) {
 		for(i=0;i<placeOfStorageGroup.size();i++) {
			var ensStorageLocation = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0711-StorageLocation"); 
 			if(ensStorageLocation!=null) {
				for(var j=0;j<ensStorageLocation.size();j++) {
					var strStorageLocation = checkString(ensStorageLocation[j].getEntryNodeValue(),"");				
					if(strStorageLocation.contains("W201")) {
						var ensWarehouseManagement = getEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/WarehouseManagement"); 
						if(ensWarehouseManagement!=null) {
							for(var k=0;k<ensWarehouseManagement.size();k++) {
								var enCapacityUsageUnit = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/WarehouseManagement#"+k+"/06DN0815-CapacityUsageUnit"); 
								if(enCapacityUsageUnit!=null) {
									var strCapacityUsageUnit = checkString(enCapacityUsageUnit.getEntryNodeValue(),"");
									if(strCapacityUsageUnit!="" && (strCatalogCode=="010" || strCatalogCode=="015" || strCatalogCode=="020")) {
										message = message + "L'unité de capacité de consommation ne doit pas être renseignée pour le lieu de stockage possédant la valeur W201.";
									}
								}
							}
						}
					}
				}
			}
		}
	}
    return message;
}

// MR0832
// If Material type =  (ZRO1 or ZRF1 or ZVE1 or ZHL1 or ZFE1 or ZHW1) equals "3"
// else If Material type = (ZER1 or ZHI1) then equals "2"
// else equals ""
function fn06DN0832_Ctl(hmGlobals,item,en, bSave) {
	var message = "";
	if (bSave=="true"){
		var strCatalogCode="";
		if(substring(item.getCatalog().getCtgName(),0,2)=="CA") {
			strCtgName = getColAreaByName(item.getCatalog().getCtgName()).getColAreaSrcContainer().getCtgName();
		}
		else {
			strCtgName = item.getCatalog().getCtgName();
		}
		if(strCtgName!=null && strCtgName!="") {
			strCatalogCode = substring(strCtgName,1,4);
		}	
		// Item Material Type	
		var strItemType = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getItemType").invoke(item);
		var strMaterialType = "";
		if(strItemType=="Prod" || strItemType=="BUnit") {
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}
		}
		else {
			var oitemBUnit = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getPublishingItemAtLevel").invoke(item,"BUnit");
			var oMaterialTypeEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitemBUnit,"01AC0659-MaterialType");
			if(oMaterialTypeEn!=null) {
				strMaterialType = checkString(oMaterialTypeEn[0].getEntryNodeValue(),"");
			}		
		}
		//
		var placeOfStorageGroup = getEn(hmGlobals,item,"PlaceOfStorageGroup");
		var i;
		if(placeOfStorageGroup!=null) {
			for(i=0;i<placeOfStorageGroup.size();i++) {
				var enMaterialPriceDetermination = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0832-MaterialPriceDetermination"); 
				var enPlant = getFirstEn(hmGlobals,item,"PlaceOfStorageGroup#"+i+"/06DN0679-Plant"); 
				if(enMaterialPriceDetermination!=null && enPlant!=null) {
					var strMaterialPriceDetermination = checkString(enMaterialPriceDetermination.getEntryNodeValue(),"");
					var strPlant = checkString(enPlant.getEntryNodeValue(),"");
					if(strMaterialPriceDetermination=="" && bSave=="true") {
						if(strMaterialType=="ZRO1" || strMaterialType=="ZRF1" || strMaterialType=="ZVE1" || strMaterialType=="ZHL1" || strMaterialType=="ZFE1" || strMaterialType=="ZHW1") {
							if(!(strCatalogCode=="800" && (strItemType=="Prod" || strItemType=="BUnit"))) {
								enMaterialPriceDetermination.setEntryNodeValue("3");
							}
						}
						else if(strMaterialType=="ZER1" || strMaterialType=="ZHI1") {
							if(!(strCatalogCode=="800" && (strItemType=="Prod" || strItemType=="BUnit"))) {
								enMaterialPriceDetermination.setEntryNodeValue("2");
							}
						}
						else {
							enMaterialPriceDetermination.setEntryNodeValue("");
						}
					}
					else {
						if(strMaterialPriceDetermination!="" && strPlant!="") {
							if(strMaterialType=="ZRO1" || strMaterialType=="ZRF1" || strMaterialType=="ZVE1" || strMaterialType=="ZHL1" || strMaterialType=="ZFE1" || strMaterialType=="ZHW1") {
								if(strMaterialPriceDetermination!="3") {
									message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de la détermination du prix doit être égale à 3. ");
								}
							}
							else if(strMaterialType=="ZER1" || strMaterialType=="ZHI1") {
								if(strMaterialPriceDetermination!="2") {
									message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de la détermination du prix doit être égale à 2. ");
								}
							}
							else {
								if(strMaterialPriceDetermination!="") {
									message = message + concat("Groupe Lieu de Stockage - occurrence ",i+1," : la valeur de la détermination du prix doit être laissée à vide. ");
								}
							}
						}
					}
				}
			}
		}
	}
    return message;
}


//String fn02FR0833_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0833
//Si true alors 02FR0834-PEFCCertificateReference ne doit pas être null
//Si false alors 02FR0834-PEFCCertificateReference doit être null
function fn02FR0833_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var i;
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    if(ProductionSiteGroup!=null) {
        for(i=0;i<ProductionSiteGroup.size();i++) {
        	var strPEFCCertified = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0833-PEFCCertified");
            var strPEFCCertificateReference = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0834-PEFCCertificateReference");
		    if((strPEFCCertified==true) && (strPEFCCertificateReference==null)) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence des certificats PEFC doit être renseignée");
		    }
		    else if(((strPEFCCertified==false)||(strPEFCCertified==null)) && (strPEFCCertificateReference!=null)) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence des certificats PEFC ne doit pas être renseignée");
		    }
			//
			var strPEFCLogoLicenceReference = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0835-PEFCLogoLicenceReference");
		    if((strPEFCCertified==true) && (strPEFCLogoLicenceReference==null)) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence logo PEFC doit être renseignée");
		    }
		    else if(((strPEFCCertified==false)||(strPEFCCertified==null)) && (strPEFCLogoLicenceReference!=null)) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence logo PEFC ne doit pas être renseignée");
		    }
        }
    }
    return message;
}

// String fn02FR0836_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0836
// blank if 02FR0833-PEFCCertified is false
function fn02FR0836_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var i;
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    if(ProductionSiteGroup!=null) {
        for(i=0;i<ProductionSiteGroup.size();i++) {
        	var strPEFCCertified = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0833-PEFCCertified");
			var strPEFCCUrlLien = checkString(getValue(hmGlobals, item, "02FR0836-PEFCCUrlLien"),"");
		    if((strPEFCCertified==false ||strPEFCCertified=="false") && (strPEFCCUrlLien!="")) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : Le lien URL PEFC ne doit pas être renseigné");
		    }
        }
    }
    return message;
}

//String fn02FR0837_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0837
//Si true alors 02FR0838-NaturePlusCertificateReference ne doit pas être null
//Si false alors 02FR0838-NaturePlusCertificateReference doit être null
//Si 01AC0012-LongName contains "PUREBEL" et "SOLO" then true else false
function fn02FR0837_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	if (bSave=="true"){
		var strLongName = "";
		var oLongNameEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0012-LongName");
		if(oLongNameEn!=null) {
			strLongName = checkString(oLongNameEn[0].getEntryNodeValue(),"");
		}
		var i;
		var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
		if(ProductionSiteGroup!=null) {
			for(i=0;i<ProductionSiteGroup.size();i++) {
				var strNaturePlusCertified = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0837-NaturePlusCertified");
				var strNaturePlusCertificateReference = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0838-NaturePlusCertificateReference");
				if(strNaturePlusCertified==null || strNaturePlusCertified=="") {
					var enNaturePlusCertified = getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0837-NaturePlusCertified"); 
					if(enNaturePlusCertified!=null) {
						if(strLongName!="" && (toUpperCase(strLongName).contains("PUREBEL") && toUpperCase(strLongName).contains("SOLO"))) {
							enNaturePlusCertified.setEntryNodeValue(true);
						}
						else {
							enNaturePlusCertified.setEntryNodeValue(false);
						}
					}
				}
				else {
					if(strNaturePlusCertified==false && strLongName!="" && (toUpperCase(strLongName).contains("PUREBEL") && toUpperCase(strLongName).contains("SOLO"))) {
						message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : la valeur de l'attribut 'Certifié NaturePlus' doit être égale à vrai. ");
					}
					else if((strNaturePlusCertified==true) && (strNaturePlusCertificateReference==null)) {
						message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence des certificats Nature Plus doit être renseignée. ");
					}
					else if(((strNaturePlusCertified==false)||(strNaturePlusCertified==null)) && (strNaturePlusCertificateReference!=null)) {
						message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : La référence des certificats Nature Plus ne doit pas être renseignée. ");
					}
				}
			}
		}
	}
    return message;
}

//String fn02FR0838_Ctl(hmGlobals, item, en, bSave)
//Retourne le message d'erreur de la règle de gestion:MR0838
//Si 01AC0012-LongName contains "PUREBEL" et "SOLO" then [1] - NATUREPLUS else empty
function fn02FR0838_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
	if (bSave=="true"){
		var strLongName = "";
		var oLongNameEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(item,"01AC0012-LongName");
		if(oLongNameEn!=null) {
			strLongName = checkString(oLongNameEn[0].getEntryNodeValue(),"");
		}
		var i;
		var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
		if(ProductionSiteGroup!=null) {
			for(i=0;i<ProductionSiteGroup.size();i++) {
				var enNaturePlusCertificateReference = getFirstEn(hmGlobals,item,"ProductionSiteGroup#"+i+"/02FR0838-NaturePlusCertificateReference"); 
				if(enNaturePlusCertificateReference!=null) {
					var strNaturePlusCertificateReference=checkString(enNaturePlusCertificateReference.getEntryNodeValue(),"");
					if(strNaturePlusCertificateReference=="") {
						if(strLongName!="" && (toUpperCase(strLongName).contains("PUREBEL") && toUpperCase(strLongName).contains("SOLO"))) {
							enNaturePlusCertificateReference.setEntryNodeValue("[1] - NATUREPLUS");
						}
					}
					else {
						if(strNaturePlusCertified==false && strLongName!="" && (toUpperCase(strLongName).contains("PUREBEL") && toUpperCase(strLongName).contains("SOLO"))) {
							message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : la valeur de l'attribut 'Certifié NaturePlus' doit être égale à vrai. ");
						}
					}
				}
				else {
					if(strLongName!="" && (toUpperCase(strLongName).contains("PUREBEL") && toUpperCase(strLongName).contains("SOLO"))) {
						var strSecSpecName = "";
						var strTemp = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodeFromAttrPath").invoke(item,"01AC0014-invoiceName").getEntryNodeExactPath();
						if(strTemp!=null && strTemp!="") {
							strTemp = substring(strTemp,1);
							strSecSpecName = checkString(substring(strTemp,0,strTemp.indexOf("/")), "");
							item.setEntryAttrib(strSecSpecName+"/ProductionSiteGroup#"+i+"/02FR0838-NaturePlusCertificateReference#0","[1] - NATUREPLUS");
						}
					}
				}
			}
		}
	}
    return message;
}

// String fn02FR0839_Ctl(hmGlobals, item, en, bSave)
// Retourne le message d'erreur de la règle de gestion:MR0836
// blank if 02FR0837-NaturePlusCertified is false
function fn02FR0839_Ctl(hmGlobals,item,en, bSave) {
    var message = "";
    var i;
    var ProductionSiteGroup = getEn(hmGlobals,item,"ProductionSiteGroup");
    if(ProductionSiteGroup!=null) {
        for(i=0;i<ProductionSiteGroup.size();i++) {
        	var strNaturePlusCertified = getValue(hmGlobals, item, "ProductionSiteGroup#"+i+"/02FR0837-NaturePlusCertified");
			var strNaturePlusUrlLien = checkString(getValue(hmGlobals, item, "02FR0839-NaturePlusUrlLien"),"");
		    if((strNaturePlusCertified==false ||strNaturePlusCertified=="false") && (strNaturePlusUrlLien!="")) {
		        message = message + concat("Groupe Site de fabrication - occurrence ",i+1," : Le lien URL Nature Plus ne doit pas être renseigné");
		    }
        }
    }
    return message;
}


