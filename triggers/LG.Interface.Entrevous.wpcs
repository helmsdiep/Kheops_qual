//
// Interfacage avec la base etiquettes TMA100280
// export XML ou fichier plat / catalogue "C120-Entrevous -"
//

//
// technical utils functions
//

function addMapElement(mapEl, key, val) {
    getScriptByPath("/scripts/triggers/LG.Library.Utils")
          .getFunctionByName("addMapElement").invoke(mapEl, key, val);
}

function buildMapElementXML(mapEl) {
   return getScriptByPath("/scripts/triggers/LG.Library.Utils") .getFunctionByName("buildMapElementXML").invoke(mapEl);
}

function buildMapElementCSV(mapEl, processKey){
    return getScriptByPath("/scripts/triggers/LG.Library.Utils")
              .getFunctionByName("buildMapElementCSV").invoke(mapEl, processKey);
}

//
// functional utils functions
//

function getSimpleValue(oitem, nodeName){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getSimpleValue").invoke(oitem, nodeName);
}

function getDateValue(oitem, nodeName){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getDateValue").invoke(oitem, nodeName, "dd/MM/yyyy HH:mm:ss");
}

function getLkpValue(oItem,nodeName,lkpColumn) {
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getLkpValue").invoke(oItem,nodeName,lkpColumn);
}

function getLkpMultiValues(oItem,nodeName,lkpColumn) {
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getLkpMultiValues").invoke(oItem,nodeName,lkpColumn);
}

function getMultiValues(oItem,nodeName) {
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getMultiValues").invoke(oItem,nodeName);
}

function getPublishingItemAtLevel(oitem,sLevel){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getPublishingItemAtLevel").invoke(oitem, sLevel);
}

function getItemLevel(oitem){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
              .getFunctionByName("getItemLevel").invoke(oitem);
}

function getEn(oitem, nodeName){
    return getScriptByPath("/scripts/triggers/LG.Library.LGUtils")
               .getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,nodeName);
}

//
//
//

// findSitePath
// @desc return the attribute path of a production site from its code
// @param oitem the item
// @param siteCode the site code in 02FR0063-ProductionSite
// @return the attribute path eg "ProductionSiteGroup#3"
function findSitePath(oitem, siteCode){
  var productionSiteGroup = getEn(oitem,"ProductionSiteGroup");
  if(productionSiteGroup==null) { return null; }
  for(var i=0; i<productionSiteGroup.size(); i++) {
    var fProductionSite = getEn(oitem,"ProductionSiteGroup#"+i+"/02FR0063-ProductionSite")[0].getEntryNodeValue();
    if (fProductionSite.contains(siteCode)){
      return "ProductionSiteGroup#"+i;
    }
  }
  return null; 
}

// Concatenates all the elements of a string array, using the specified separator between each element. 
function arrayJoin(array, separator){
  var str = "";
  for (var i=0; i<array.size(); i++){
     str = str + ((i==0) ? "" : separator ) + array[i];
  }
  return str;
}

// filtre des décimaux finissant par '.0'  
function filterDecimalZero(str){
    if(str!=null && str!="") {
		if(str.endsWith(".0")) {
		   return  replace(str, ".0","");
		}
	}
    return str;
}

function getDataSite(oitem, productionSiteGroupID){
	var parentBUnit = getPublishingItemAtLevel(oitem,"BUnit");
	var parentProd  = getPublishingItemAtLevel(oitem,"Prod" );
	var DATA = [];
	//
	var strMaterialNumber = getSimpleValue(oitem, "01AC0664-MaterialNumber");
	if(strMaterialNumber!=null && strMaterialNumber!=""){
		var iMaterialNumber = strMaterialNumber.length();
		for(var k=0;k<iMaterialNumber;k++) {
			var testzero=strMaterialNumber.startsWith("0");
			if(testzero==true) {
				strMaterialNumber=substring(strMaterialNumber,1,strMaterialNumber.length());
			}
		}
	}
	//
	addMapElement(DATA, "PROD_ID", getSimpleValue( oitem ,"01AC0044-ERPCode")) ;
	addMapElement(DATA, "CODE_GEMMS", strMaterialNumber) ;
	addMapElement(DATA, "ItemNumber", strMaterialNumber) ;
	addMapElement(DATA, "ItemCAMReference", strMaterialNumber) ;
	addMapElement(DATA, "CAMPackingCode", "");
	addMapElement(DATA, "CreationDate", getDateValue( oitem ,"01AC0006-CreationDate")) ;
	addMapElement(DATA, "LastUpdate", getDateValue( oitem ,"01AC0004-LastUpdate")) ;

	// production site attributes
	var siteCode= getLkpValue( parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C01-Code");
	// Order is not reliable: find the right path in Prod from SiteCode 
	var prodSitePath = findSitePath(parentProd, siteCode);
	logDebug("prodSitePath="+prodSitePath);
	addMapElement(DATA, "CSTBATCertified", getSimpleValue( parentProd ,prodSitePath+"/02FR0053-CSTBATCertified"));
	addMapElement(DATA, "CSTBATReferences", getLkpValue( parentProd ,prodSitePath+"/02FR0054-CSTBATReferences" ,"C01-N° de certificat CSTBAT"));
	addMapElement(DATA, "Base", getLkpValue(parentProd, "04CP0175-Base", "C02-Libellé"));
	addMapElement(DATA, "Profil", getLkpValue(parentProd, "04CP0176-Profil", "C02-Libellé"));
	addMapElement(DATA, "MethodOfManufacture", getLkpValue(parentProd, "04CP0650-MethodOfManufacture", "C02-Libellé"));
	addMapElement(DATA, "CasingHeight", filterDecimalZero(getSimpleValue( parentProd ,"04CP0119-CasingHeight"))) ;
	addMapElement(DATA, "SpacingInMm", filterDecimalZero(getSimpleValue( parentProd ,"04CP0566-SpacingInMm"))) ;

	// multivalués
	var values = getLkpMultiValues(parentProd,"BeamCompatibleGroup/04CP0568-BeamCompatibleFamily", "C02-Libellé");
	addMapElement(DATA, "BeamCompatibleFamily", arrayJoin(values,"@#@"));
	addMapElement(DATA, "BeamCompatibleSpacing", 
	arrayJoin(getMultiValues(parentProd,"BeamCompatibleGroup/04CP0569-BeamCompatibleSpacing"),"@#@"));
	addMapElement(DATA, "Rp", 
	arrayJoin(getMultiValues(parentProd,"BeamCompatibleGroup/04CP0570-Rp"),"@#@"));
	addMapElement(DATA, "Up", 
	arrayJoin(getMultiValues(parentProd,"BeamCompatibleGroup/04CP0571-Up"),"@#@"));
	addMapElement(DATA, "StripThickness", filterDecimalZero(getSimpleValue( parentProd ,"04CP0131-StripThickness"))) ;
	addMapElement(DATA, "netWeight", getSimpleValue( oitem ,"04CP0213-netWeight")) ;
	addMapElement(DATA, "netWeightUnit", getLkpValue( oitem ,"04CP0214-netWeightUnit","C03-Code unité non standard")) ;
	addMapElement(DATA, "ORReactionFire", getLkpValue( parentProd ,"05PC0308-ORReactionFire","C01-N° de procès verbal")) ;
	addMapElement(DATA, "PackagingItemDescription", getSimpleValue( oitem ,"01AC0741-PackagingItemDescription" )) ;
	addMapElement(DATA, "Covering", getLkpValue( oitem ,"06DN0414-Covering", "C01-Code"));
	addMapElement(DATA, "Hooping", getLkpValue( oitem ,"06DN0415-Hooping", "C01-Code"));
	addMapElement(DATA, "Length", filterDecimalZero(getSimpleValue( parentBUnit ,"04CP0103-Length"))) ;
	addMapElement(DATA, "Strip", getLkpValue(parentProd, "04CP0177-Strip", "C02-Libellé"));
	var siteSAPCode= getLkpValue(parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C07-SAP PlantCode");  
	addMapElement(DATA, "ProductionSite", siteSAPCode);  
	addMapElement(DATA, "LabelName1", getSimpleValue( parentProd ,"01AC0017-LabelName1")) ;
	addMapElement(DATA, "LabelName2", getSimpleValue( parentProd ,"01AC0018-LabelName2")) ;
	addMapElement(DATA, "brandName", getLkpValue( parentProd ,"01AC0036-brandName", "C07-Logo")) ;
	addMapElement(DATA, "TotalQuantityOfNextLowerLevel", getSimpleValue( oitem ,"06DN0407-TotalQuantityOfNextLowerLevel")) ;
	addMapElement(DATA, "GTIN", getSimpleValue(parentBUnit, "01AC0042-GTIN"));
	addMapElement(DATA, "LabelingHealth", getLkpValue( parentProd, "08IE0653-LabelingHealth", "C01-Classement"));
	addMapElement(DATA, "CECertified", getSimpleValue( parentProd ,"05PG0249-CECertified")) ;
	addMapElement(DATA, "ENReference", getLkpValue( parentProd ,"05PG0245-ENReference", "C00-DisplayName")) ;

	// production site FPCCertificateNumber
	var siteFPCCertificateNumber= getLkpValue( parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0655-FPCCertificateNumber" , "C01-FPC certificate number");
	addMapElement(DATA, "FPCCertificateNumber", siteFPCCertificateNumber);
	addMapElement(DATA, "SketchDrawing", getSimpleValue( oitem ,"03FN0072-SketchDrawing")) ;
	// production site name
	var siteName= getLkpValue( parentProd ,"ProductionSiteGroup#"+productionSiteGroupID+"/02FR0063-ProductionSite" , "C02-Libellé");
	addMapElement(DATA, "ProductionSiteName", siteName);
	addMapElement(DATA, "Width", filterDecimalZero(getSimpleValue(parentProd ,"04CP0095-Width"))) ;
	addMapElement(DATA, "DOPNumber", getSimpleValue(parentProd, "05PG0767-DOPNumber"));
	addMapElement(DATA, "ProductTypeID", getSimpleValue(parentProd, "05PG0768-ProductTypeID"));
	addMapElement(DATA, "ProductUsage", getSimpleValue(parentProd, "05PG0770-ProductUsage"));
	addMapElement(DATA, "OrganismNotified", getSimpleValue(parentProd, "05PG0773-OrganismNotified"));
	addMapElement(DATA, "YearOfFirstCEMarking", getSimpleValue(parentProd, "05PG0795-YearOfFirstCEMarking"));
	addMapElement(DATA, "MechanicalStressClass", getSimpleValue(parentProd, "05PC0789-MechanicalStressClass"));
	addMapElement(DATA, "EuroclasseClassification", getLkpValue(parentProd, "05PC0305-EuroclasseClassification", "C01-Code"));
	addMapElement(DATA, "ThermalConductivityLambda", getSimpleValue(parentProd, "05PC0301-ThermalConductivityLambda"));
	addMapElement(DATA, "ThermalResistance", getSimpleValue(parentProd, "05PC0300-ThermalResistance"));
	addMapElement(DATA, "DOPUrl", getSimpleValue(parentProd, "05PG0769-DOPUrl"));

	return DATA;
}

function getData(oitem){
  var dataGrp = [];
  var parentProd  = getPublishingItemAtLevel(oitem,"Prod" );
  var productionSiteGroup = getEn(parentProd,"ProductionSiteGroup");
  if(productionSiteGroup==null) { return dataGrp; }
  var e;
  catchError(e) {
    for(var i=0; i<productionSiteGroup.size(); i++) {
      // var fProductionSite = getEn(oitem,"ProductionSiteGroup#"+i+"/02FR0063-ProductionSite")[0].getEntryNodeValue();
      dataGrp.add(getDataSite(oitem, i));
    }
  }
  if (e!=null){
    err.writeln("Error on "+oitem.getPrimaryKey()+", "+e); 
  }
  return dataGrp;
}

function canExport(oitem){
    // Catalogue 
    if (!oitem.getPrimaryKey().substring(1,4).contains("120")) {
      return false;
    }

    // Que le PItem (?)
    if (!oitem.getPrimaryKey().contains("I")) {
      return false;
    }

	// Que les items éligibles à la publication dans SAP et possédant le material number
	var strMaterialNumber="";
	var oItemMaterialNumberEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,"01AC0664-MaterialNumber");
	if(oItemMaterialNumberEn!=null) {
		strMaterialNumber = checkString(oItemMaterialNumberEn[0].getEntryNodeValue(),"");
	}
	//
	var strPublishedIntoSAP="";
	var oItemPublishedIntoSAPEn = getScriptByPath("/scripts/triggers/LG.Library.LGUtils").getFunctionByName("getEntryNodesFromAttrPath").invoke(oitem,"01AC0775-PublishedIntoSAP");
	if(oItemPublishedIntoSAPEn!=null) {
		strPublishedIntoSAP = checkString(oItemPublishedIntoSAPEn[0].getEntryNodeValue(),"");
	}
	
	if(strPublishedIntoSAP=="true" && strMaterialNumber=="") {
      return false;
	}
	
    // Les items ayant le statut 01AC0548-Status = ACTIF 
    if (!getSimpleValue(oitem,"01AC0548-Status").contains("[ACTIVE] - Actif")) {
      return false;
    }

    return true;
}

///////
///////

function getEtiquetteXML(oitem){
    if(!canExport(oitem)) {
      return "<!-- no entrevous_etiquettes_export -->";
    }
    var dataGrp = getData(oitem);
    if(dataGrp==null ||dataGrp.size()<1 ) {
      return "<!-- no entrevous_etiquettes_export -->";
    }
    var xml = "";
    for(var i=0; i<dataGrp.size(); i++) {
      xml = concat(xml , "<group name=\"entrevous_etiquettes_export\">", buildMapElementXML(dataGrp[i]), "</group>");
    }
    return xml;
}

function getFullCSV(){
    var oitem;
    var csv = "";
    var headerDone = false;
    forEachCtgItem("C120-Entrevous -",oitem) {
        var e;
        catchError(e) {
            if(!canExport(oitem)) {
                continue;
            }
            logDebug("Export "+oitem.getPrimaryKey());
            var dataGrp = getData(oitem);
            for(var i=0; i<dataGrp.size(); i++) {
                if (!headerDone){
                    csv = csv + buildMapElementCSV(dataGrp[i], true);
                    headerDone = true;
                }
                csv = csv + buildMapElementCSV(dataGrp[i], false);
            }
        } 
        if (e!=null) { 
            // out.writeln(oitem.getPrimaryKey()+" "+e);
            // e=null;
        }
    }
    return csv;
}
