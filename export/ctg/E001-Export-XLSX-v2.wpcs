var item;
// For Excel create a book and sheet to export to.
var book = new ExcelBook(null, "XLSX");
var sheet = book.createExcelSheet();
var row;
var rowIndex = 0;
var style;

var numStyle = book.createExcelCellStyle();
numStyle.setDataFormat("0.00");

var intStyle=book.createExcelCellStyle();
intStyle.setDataFormat("0");

var generalStyle=book.createExcelCellStyle();
generalStyle.setDataFormat("General");

//var dateStyle = book.createExcelCellStyle();
//dateStyle.setDataFormat("m/d/yy h:mm");
//dateStyle.setDataFormat("d-mmm-yy");

// write Header
var destspec = getSpecByName("SC001-CustomerExport002");
var attrs = destspec.getSpecAttribPaths();
row = sheet.createRow(rowIndex);
rowIndex++;
var cellIndex = 0;
for (i=0;i<attrs.size();i++){
  var path=attrs[i];
  var node=destspec.getNodeByPath(path);
  cell = row.createExcelCell(cellIndex);
  attrString = checkString(node.getNodeName(), "");
  if (null != attrString) {
    cell.setCellType("STRING");
    cell.setStringCellValue(attrString);
  }
  cellIndex++;
  //out.writeln(node.getNodeName());
  //out.writeln(node.getNodeAttributeValue("TYPE"));
}

// write body

forEachCtgItem(item)
{
  var itemAttrs = item.getCtgItemMappedAttribs();
  var itemValidatedAttrs = validateMappedAttribs(itemAttrs);
  if (null != itemValidatedAttrs) {
    var cell;
    var cellIndex = 0;
    var attrDate;
    var attrString;
    var attrNum;
    var attrInt;
    // var en_US_17 =new Locale("en","US");
    // create an excel row for this item.
    row = sheet.createRow(rowIndex);
    rowIndex++;
    // then populate the cells with the attributes.
    for (i=0;i<attrs.size();i++){
      var path=attrs[i];
      var node=destspec.getNodeByPath(path);
      
//    forEachHmElement(itemValidatedAttrs, oKey, oValue) {
      cell = row.createExcelCell(cellIndex);

//      var node = destspec.getNodeByPath(oKey);
      var nodeType = node.getNodeAttributeValue("TYPE");// STRING/NUMBER/INTEGER/DATE/URL
      var oValue=itemValidatedAttrs[path];
      if (nodeType == "STRING" || nodeType == "URL") {
        attrString = checkString(oValue, "");
        if (null != attrString) {

          cell.setCellType("STRING");
          cell.setStringCellValue(attrString);
        }
      }
      if (nodeType == "INTEGER") {
        attrInt = checkString(oValue, "");
        //attrInt=toDouble(oValue);
      if (null != attrInt && attrInt!="") {
          cell.setCellType("NUMERIC");
          cell.setNumericCellValue(toDouble(attrInt));
          cell.setExcelStyle(intStyle);
        }
      }

      if (nodeType == "NUMBER") {
        attrNum = oValue;
        if (null != attrNum) {

          cell.setCellType("NUMERIC");
          cell.setNumericCellValue(attrNum);
          cell.setExcelStyle(numStyle);
        }
      }

      if (nodeType == "DATE") {
        attrDate = oValue;

        if (null != attrDate) {
          cell.setCellType("STRING");
          cell.setExcelStyle(generalStyle);
          cell.setStringCellValue(attrDate.formatDate("yyyy-MM-dd"));
          
          // cell.setCellType("NUMERIC");
          // cell.setDateCellValue(attrDate);
          // cell.setExcelStyle(dateStyle);
        }
      }
      cellIndex++;
    }
  }

}
// Save to the docstore
book.saveToDocStore();
